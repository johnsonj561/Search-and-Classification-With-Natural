{"documentList":[{"url":"https://blog.risingstack.com/10-best-practices-for-writing-node-js-rest-apis/?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more","text":"10 Best Practices for Writing Node.js REST APIs | @RisingStack { \"@context\": \"https://schema.org\", \"@type\": \"Article\", \"publisher\": { \"@type\": \"Organization\", \"name\": \"RisingStack Engineering - Node.js Tutorials & Resources\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://risingstack-blog.s3.amazonaws.com/2016/Mar/risingstack_logo-1457001742686.png\", \"width\": 60, \"height\": 60 } }, \"author\": { \"@type\": \"Person\", \"name\": \"Gergely Nemeth\", \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://blog-assets.risingstack.com/2017/01/gergely-nemeth-risingstack-1.png\", \"width\": 50, \"height\": 50 }, \"url\": \"https://blog.risingstack.com/author/gergely/\", \"sameAs\": [ \"https://twitter.com/nthgergo\" ] }, \"headline\": \"10 Best Practices for Writing Node.js REST APIs | @RisingStack\", \"url\": \"https://blog.risingstack.com/10-best-practices-for-writing-node-js-rest-apis/\", \"datePublished\": \"2017-02-21T10:11:17.000Z\", \"dateModified\": \"2017-10-25T13:59:31.000Z\", \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://blog-assets.risingstack.com/2017/04/10-best-practices-for-writing-node-js-rest-apis.png\", \"width\": 1200, \"height\": 630 }, \"keywords\": \"Node.js Tutorials for Beginners, Node.js Best Practices\", \"description\": \"In this post we cover best practices for writing Node.js RESTful APIs - including route naming, authentication, API testing or using proper cache headers.\\n\", \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"https://blog.risingstack.com/\" } } ghost.init({ clientId: \"ghost-frontend\", clientSecret: \"3fe3251906b2\" }); var $mcGoal = {'settings':{'uuid':'510d6f81b948a39e0d9c32ec3','dc':'us9'}}; (function() { var sp = document.createElement('script'); sp.type = 'text/javascript'; sp.async = true; sp.defer = true; sp.src = 'https://resources.risingstack.com/mailchimp-v1.js' var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(sp, s); })(); (function (){ var tests = [ ] document.addEventListener(\"DOMContentLoaded\", function(event) { var $topCta = $('#top-cta') $topCta.html(tests[Math.floor(Math.random() * tests.length)]) }); }()) - Home - About Us - Trainings Node.js Fundamentals Node + Microservices Securing Node Applications - Node.js Fundamentals - Node + Microservices - Securing Node Applications - Services Node.js Consulting & Development 24 / 7 Node.js Support Kubernetes Consulting - Node.js Consulting & Development - 24 / 7 Node.js Support - Kubernetes Consulting - Resources Subscribe for the newsletter Hire us Node.js Development 24/7 Node.js Support On-site Node Trainings <!-- Choose your path Beginner Node.js Tutorials Advanced Node.js Tutorials Node.js & Microservices Blog > Node.js Tutorials for Beginners 9 months ago February 21st, 2017 10 Best Practices for Writing Node.js REST APIs by Gergely Nemeth(@nthgergo), Co-founder of RisingStack In this article we cover best practices for writing Node.js REST APIs, including topics like naming your routes, authentication, black-box testing & using proper cache headers for these resources. One of the most popular use-cases for Node.js is to write RESTful APIs using it. Still, while we help our customers to find issues in their applications with Trace, our Node.js monitoring tool we constantly experience that developers have a lot of problems with REST APIs. I hope these best-practices we use at RisingStack can help: #1 - Use HTTP Methods & API Routes Imagine, that you are building a Node.js RESTful API for creating, updating, retrieving or deleting users. For these operations HTTP already has the adequate toolset: POST, PUT, GET, PATCH or DELETE. As a best practice, your API routes should always use nouns as resource identifiers. Speaking of the user's resources, the routing can look like this: - POST /user or PUT /user:/id to create a new user, - GET /user to retrieve a list of users, - GET /user/:id to retrieve a user, - PATCH /user/:id to modify an existing user record, - DELETE /user/:id to remove a user. \"API routes should always use nouns as resource identifiers!\" via @RisingStack Click To Tweet #2 - Use HTTP Status Codes Correctly If something goes wrong while serving a request, you must set the correct status code for that in the response: - 2xx, if everything was okay, - 3xx, if the resource was moved, - 4xx, if the request cannot be fulfilled because of a client error (like requesting a resource that does not exist), - 5xx, if something went wrong on the API side (like an exception happened). If you are using Express, setting the status code is as easy as res.status(500).send({error: 'Internal server error happened'}). Similarly with Restify: res.status(201). For a full list, check the list of HTTP status codes #3 - Use HTTP headers to Send Metadata To attach metadata about the payload you are about to send, use HTTP headers. Headers like this can be information on: - pagination, - rate limiting, - or authentication. A list of standardized HTTP headers can be found here. If you need to set any custom metadata in your headers, it was a best practice to prefix them with X. For example, if you were using CSRF tokens, it was a common (but non-standard) way to name them X-Csrf-Token. However with RFC 6648 they got deprecated. New APIs should make their best effort to not use header names that can conflict with other applications. For example, OpenStack prefixes its headers with OpenStack: OpenStack-Identity-Account-ID OpenStack-Networking-Host-Name OpenStack-Object-Storage-Policy Note that the HTTP standard does not define any size limit on the headers; however, Node.js (as of writing this article) imposes an 80KB size limit on the headers object for practical reasons. \" Don't allow the total size of the HTTP headers (including the status line) to exceed HTTP_MAX_HEADER_SIZE. This check is here to protect embedders against denial-of-service attacks where the attacker feeds us a never-ending header that the embedder keeps buffering.\" From the Node.js HTTP parser #4 - Pick the right framework for your Node.js REST API It is important to pick the framework that suits your use-case the most. Express, Koa or Hapi Express, Koa and Hapi can be used to create browser applications, and as such, they support templating and rendering - just to name a few features. If your application needs to provide the user-facing side as well, it makes sense to go for them. Restify On the other hand, Restify is focusing on helping you build REST services. It exists to let you build \"strict\" API services that are maintainable and observable. Restify also comes with automatic DTrace support for all your handlers. Restify is used in production in major applications like npm or Netflix. \"Restify exists to let you build \"strict\" API services that are maintainable & observable.\" via @RisingStack <p class=\"click-to-tweet-button\"> <a href=\"https://twitter.com/share?text=%22Restify%20exists%20to%20let%20you%20build%20%22strict%22%20API%20services%20that%20are%20maintainable%20%26%20observable.%22%20via%20%40RisingStack;url=https://blog.risingstack.com/10-best-practices-for-writing-node-js-rest-apis\" target=\"_blank\" c>Click To Tweet</a> </p> #5 - Black-Box Test your Node.js REST APIs One of the best ways to test your REST APIs is to treat them as black boxes. Black-box testing is a method of testing where the functionality of an application is examined without the knowledge of its internal structures or workings. So none of the dependencies are mocked or stubbed, but the system is tested as a whole. One of the modules that can help you with black-box testing Node.js REST APIs is supertest. A simple test case which checks if a user is returned using the test runner mocha can be implemented like this: const request = require('supertest') describe('GET /user/:id', function() { it('returns a user', function() { // newer mocha versions accepts promises as well return request(app) .get('/user') .set('Accept', 'application/json') .expect(200, { id: '1', name: 'John Math' }, done) }) }) You may ask: how does the data gets populated into the database which serves the REST API? In general, it is a good approach to write your tests in a way that they make as few assumptions about the state of the system as possible. Still, in some scenarios you can find yourself in a spot when you need to know what is the state of the system exactly, so you can make assertions and achieve higher test coverage. So based on your needs, you can populate the database with test data in one of the following ways: - run your black-box test scenarios on a known subset of production data, - populate the database with crafted data before the test cases are run. Of course, black-box testing does not mean that you don't have to do unit testing, you still have to write unit tests for your APIs. #6 - Do JWT-Based, Stateless Authentication As your REST APIs must be stateless, so does your authentication layer. For this, JWT (JSON Web Token) is ideal. JWT consists of three parts: - Header, containing the type of the token and the hashing algorithm - Payload, containing the claims - Signature (JWT does not encrypt the payload, just signs it!) Adding JWT-based authentication to your application is very straightforward: const koa = require('koa') const jwt = require('koa-jwt') const app = koa() app.use(jwt({ secret: 'very-secret' })) // Protected middleware app.use(function *(){ // content of the token will be available on this.state.user this.body = { secret: '42' } }) After that, the API endpoints are protected with JWT. To access the protected endpoints, you have to provide the token in the Authorization header field. curl --header \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\" my-website.com One thing that you could notice is that the JWT module does not depend on any database layer. This is the case because all JWT tokens can be verified on their own, and they can also contain time to live values. Also, you always have to make sure that all your API endpoints are only accessible through a secure connection using HTTPS. In a previous article, we explained web authentication methods in details - I recommend to check it out! #7 - Use Conditional Requests Conditional requests are HTTP requests which are executed differently depending on specific HTTP headers. You can think of these headers as preconditions: if they are met, the requests will be executed in a different way. \"Conditional requests are executed differently depending on specific HTTP headers\" via @RisingStack <p class=\"click-to-tweet-button\"> <a href=\"https://twitter.com/share?text=%22Conditional%20requests%20are%20executed%20differently%20depending%20on%20specific%20HTTP%20headers%22%20via%20%40RisingStack;url=https://blog.risingstack.com/10-best-practices-for-writing-node-js-rest-apis\" target=\"_blank\" c>Click To Tweet</a> </p> These headers try to check whether a version of a resource stored on the server matches a given version of the same resource. Because of this reason, these headers can be: - the timestamp of the last modification, - or an entity tag, which differs for each version. These headers are: - Last-Modified (to indicate when the resource was last modified), - Etag (to indicate the entity tag), - If-Modified-Since (used with the Last-Modified header), - If-None-Match (used with the Etag header), Let's take a look at an example! The client below did not have any previous versions of the doc resource, so neither the If-Modified-Since, nor the If-None-Match header was applied when the resource was sent. Then, the server responds with the Etag and Last-Modified headers properly set. From the MDN Conditional request documentation The client can set the If-Modified-Since and If-None-Match headers once it tries to request the same resource - since it has a version now. If the response would be the same, the server simply responds with the 304 - Not Modified status and does not send the resource again. From the MDN Conditional request documentation #8 - Embrace Rate Limiting Rate limiting is used to control how many requests a given consumer can send to the API. To tell your API users how many requests they have left, set the following headers: - X-Rate-Limit-Limit, the number of requests allowed in a given time interval - X-Rate-Limit-Remaining, the number of requests remaining in the same interval, - X-Rate-Limit-Reset, the time when the rate limit will be reset. Most HTTP frameworks support it out of the box (or with plugins). For example, if you are using Koa, there is the koa-ratelimit package. Note, that the time window can vary based on different API providers - for example, GitHub uses an hour for that, while Twitter 15 minutes. #9 - Create a Proper API Documentation You write APIs so others can use them, benefit from them. Providing an API documentation for your Node.js REST APIs are crucial. The following open-source projects can help you with creating documentation for your APIs: - API Blueprint - Swagger Alternatively, if you want to use a hosted products, you can go for Apiary. #10 - Don't Miss The Future of APIs In the past years, two major query languages for APIs arose - namely GraphQL from Facebook and Falcor from Netflix. But why do we even need them? Imagine the following RESTful resource request: /org/1/space/2/docs/1/collaborators?include=email&page=1&limit=10 This can get out of hand quite easily - as you'd like to get the same response format for all your models all the time. This is where GraphQL and Falcor can help. About GraphQL GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools. - Read more here. About Falcor Falcor is the innovative data platform that powers the Netflix UIs. Falcor allows you to model all your backend data as a single Virtual JSON object on your Node server. On the client, you work with your remote JSON object using familiar JavaScript operations like get, set, and call. If you know your data, you know your API. - Read more here. Amazing REST APIs for Inspiration If you are about to start developing a Node.js REST API or creating a new version of an older one, we have collected four real-life examples that are worth checking out: - GitHub API - Twilio API - Stripe API - DigitalOcean API I hope that now you have a better understanding of how APIs should be written using Node.js. Please let me know in the comments if you miss anything! Follow @RisingStack TAGS: Node.js Tutorials for Beginners Node.js Best Practices Read more from us: - Getting Node.js Testing and TDD Right - Digital Transformation with the Node.js Stack Get early access to our posts /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */ var disqus_shortname = 'risingstackblog'; /* * * DON'T EDIT BELOW THIS LINE * * */ (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })(); Please enable JavaScript to view the comments powered by Disqus. comments powered by Disqus Blog Best articles Node Hero Tutorials Node.js at Scale Tutorials Resources Node.js Maturity Checklist Trace by RisingStack - Node.js Monitoring Node.js is Enterprise Ready RisingStack Community Node.js Daily Connect RisingStack.com Twitter Github Facebook We ♥ Node.js © RisingStack, Inc. 2017 | RisingStack® and Trace by RisingStack® are registered trademarks of RisingStack, Inc. console.log(\"______ _ _ _____ _ _ \\n| ___ \\\\(_) (_) / ___|| | | | \\n| |_/ / _ ___ _ _ __ __ _ \\\\ `--. | |_ __ _ ___ | | __\\n| / | |/ __|| || '_ \\\\ / _` | `--. \\\\| __| / _` | / __|| |/ /\\n| |\\\\ \\\\ | |\\\\__ \\\\| || | | || (_| |/\\\\__/ /| |_ | (_| || (__ | < \\n\\\\_| \\\\_||_||___/|_||_| |_| \\\\__, |\\\\____/ \\\\__| \\\\__,_| \\\\___||_|\\\\_\\\\\\n __/ | \\n |___/ \\n\"); console.log(\"You like to look under the hood? Why not join us? https://risingstack.workable.com\") var _dcq = _dcq || []; var _dcs = _dcs || {}; _dcs.account = '3044742'; (function() { var dc = document.createElement('script'); dc.type = 'text/javascript'; dc.async = true; dc.src = '//resources.risingstack.com/js/drip.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(dc, s); })(); (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f); })(window,document,'script','dataLayer','GTM-KV8B2T'); var loadDeferredStyles = function() { var addStylesNode = document.getElementById(\"deferred-styles\"); var replacement = document.createElement(\"div\"); replacement.innerHTML = addStylesNode.textContent; document.body.appendChild(replacement) addStylesNode.parentElement.removeChild(addStylesNode); }; var raf = requestAnimationFrame || mozRequestAnimationFrame || webkitRequestAnimationFrame || msRequestAnimationFrame; if (raf) raf(function() { window.setTimeout(loadDeferredStyles, 0); }); else window.addEventListener('load', loadDeferredStyles);"},{"url":"https://scotch.io/tutorials/retrogames-library-with-node-react-and-redux-1-server-api-and-react-frontend?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more","text":"Retrogames Library with Node, React, and Redux 1: Server API and React Frontend ― Scotch { \"@context\": \"http://schema.org\", \"@type\": \"Organization\", \"name\": \"Scotch\", \"url\": \"https://scotch.io\", \"sameAs\": [ \"http://www.facebook.com/scotchdevelopment\", \"http://twitter.com/scotch_io\", \"http://instagram.com/scotch_io\", \"http://www.linkedin.com/in/scotch_io\", \"http://plus.google.com/scotch_io\" ] } { \"@context\": \"http://schema.org\", \"@type\": \"WebSite\", \"name\": \"Scotch\", \"alternateName\": \"Scotch Development\", \"url\": \"https://scotch.io\" } { \"@context\": \"http://schema.org\", \"@type\": \"Article\", \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"http://scotch.io/tutorials/retrogames-library-with-node-react-and-redux-1-server-api-and-react-frontend\" }, \"headline\": \"Retrogames Library with Node, React, and Redux 1: Server API and React Frontend\", \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://cdn.scotch.io/144/e4VS2LS8QPu2AlYzD3jJ_collage%204.jpg\", \"height\": 1500, \"width\": 750 }, \"datePublished\": \"2017-02-16 08:51:51\", \"dateModified\": \"2017-09-20 02:01:46\", \"author\": { \"@type\": \"Person\", \"name\": \"Samuele Zaza\" }, \"publisher\": { \"@type\": \"Organization\", \"name\": \"Scotch\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://scotch.io/img/school-logo-sticker.png\", \"width\": 37, \"height\": 60 } }, \"description\": \"2017/03/29 Update: Fixed the versions of react-router and react-hot-loader. 2017/03/20 Update: Webpack 2 configuration. Introduction The Javascript stacks, \" } !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod? n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n; n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0; t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window, document,'script','https://connect.facebook.net/en_US/fbevents.js'); fbq('init', '252081571905952'); fbq('track', 'PageView'); var freestar = freestar || {}; freestar.hitTime = Date.now(); freestar.queue = freestar.queue || []; freestar.config = freestar.config || {}; freestar.debug = window.location.search.indexOf('fsdebug') === -1 ? false : true; // Tag IDs set here, must match Tags served in the Body for proper setup // if is single page freestar.config.enabled_slots = [ \"div-gpt-ad-leaderboard-ATF\", \"div-gpt-ad-flex-inpage\", \"div-gpt-ad-300x250-Sidebar\", \"Scotch.io_300x250_300x600_Sidebar_BTF\" ] !function(a,b){var c=b.getElementsByTagName(\"script\")[0],d=b.createElement(\"script\"),e=\"https://a.pub.network/scotch.io\";e+=freestar.debug?\"/qa/pubfig.min.js\":\"/pubfig.min.js\",d.async=!0,d.src=e,c.parentNode.insertBefore(d,c)}(window,document); .st0{fill:#333333;} .st1{fill:#FFFFFF;} .st2{fill:#EC008C;} .st3{clip-path:url(#XMLID_8_);} .st4{fill:#ECD27C;} .st5{opacity:0.7;fill:#CBA543;} .st6{clip-path:url(#XMLID_8_);fill:#ECD27C;} .st7{opacity:0.7;clip-path:url(#XMLID_8_);fill:#CBA543;} .st8{opacity:0.98;clip-path:url(#XMLID_8_);fill:#CBA543;} .st9{opacity:0.98;clip-path:url(#XMLID_8_);fill:#ECD27C;} .st10{opacity:0.98;clip-path:url(#XMLID_8_);fill:#A27B2E;} Scotch .st0{fill:#333333;} .st1{fill:#FFFFFF;} .st2{fill:#EC008C;} .st3{clip-path:url(#XMLID_8_);} .st4{fill:#ECD27C;} .st5{opacity:0.7;fill:#CBA543;} .st6{clip-path:url(#XMLID_8_);fill:#ECD27C;} .st7{opacity:0.7;clip-path:url(#XMLID_8_);fill:#CBA543;} .st8{opacity:0.98;clip-path:url(#XMLID_8_);fill:#CBA543;} .st9{opacity:0.98;clip-path:url(#XMLID_8_);fill:#ECD27C;} .st10{opacity:0.98;clip-path:url(#XMLID_8_);fill:#A27B2E;} Scotch - Home - Guides - Courses - Tutorials Angular React Vue Node Laravel Community Posts - Extras Vue Webinar (Dec 13) Angular Book Top Authors Shop - Search - Login - Sign Up Retrogames Library with Node, React, and Redux 1: Server API and React Frontend Samuele Zaza February 16 #node.js #react Samuele Zaza 👁️ 27,566 views 💬 comments 2017/03/29 Update: Fixed the versions of react-router and react-hot-loader. 2017/03/20 Update: Webpack 2 configuration. Related Course: Getting Started with ReactIntroduction The Javascript stacks, MEAN and MERN on top, are definitely the hottest tech in the web development community nowadays. In fact all the Javascript ecosystem is continuosly expanding with updates and new packages on a daily basis. Finding the direction may be seen as an overwhelming tasks sometimes, especially for beginners, but luckily communites like Scotch.io strive to provide the right direction with always up-to-date tutorials and articles. In this tutorial we are going to write an archive for retrogames by using Javascript in both backend and frontend: We will combine express built on top of Node.js with React and Redux to demonstrate how easy is to write a single page app. To persist data we are using Mongo.db which integrates pretty well with Node.js thanks to its Mongoose ODM. In addition, to upload pictures with no hassle we are gonna integrate Filestack in our app which returns a CDN url for us: Filestack hosts our pictures saving the burden to make sure our machines has the space to store them as well as avoid us all the uploading related security. Last but not least, the free account is enough to implement all the functionalities we need for the app. The App Our archive allows users to view, create and delete games of the past that made history. I am a huge fan of games like Super Mario Bros., Street Fighter, Sonic, King of Fighters so I really enjoyed writing this app, I hope you too! I separated the tutorials in different parts to make it easier to digest all the information. In this very first tutorial we are going to setup the Node.js, connect it to Mongo.db, write the games API and test it with postman. Then, we will write it using React and serve it with webpack-dev-server. In the second part of the tutorial we are going to include Redux state container and Redux-saga to perform asynchronous HTTP requests to our real server. Finally, I may add a third part, a bonus one, to show some simple authentication and improve the UI. I suggest to follow the tutorial and build the app step-by-step, however you can also find the app on github: Once you cloned/forked the repo, just checkout to tutorial/part1 branch. git checkout tutoral/part1 Prerequisites - In general it would be better to have basic knowledege of the technologies discussed throughout the tutorial (Node.js, React, Mongo.db, Webpack2...). - ES6 syntax, guys we are at the end of 2016 so let's start using it! - - Yarn, the new package manager is out and I fell in love with it. I especially like the intrinsic reliability guaranteed by yarn.lock, this makes our install works on different systems. For the record, Scotch.io released a very cool tutorial for Yarn. Table of Contents - Introduction - Folder Structure - The Server - The Client - Conclusions Folder Structure --app ----models ------game.js ----routes ------game.js --client ----dist ------css --------style.css ------fonts --------PressStart2p.ttf ------index.html ------bundle.js ----src ------components --------About.jsx --------Archive.jsx --------Contact.jsx --------Form.jsx --------Game.jsx --------GamesListManager.jsx --------Home.jsx --------index.js --------Modal.jsx --------Welcome.jsx ------containers --------AddGameContainer.jsx --------GamesContainer.jsx ------index.js ------routes.js --.babelrc --package.json --server.js --webpack-loaders.js --webpack-paths.js --webpack.config.js --yarn.lock Notice the two files /client/src/components/index.js and /client/src/containers/index.js: I am using them to export all the components and containers in a single file to write the import more easily. Take a look at this example: import c1 from './c1.jsx'; import c2 from './c2.jsx'; import c3 from './c3.jsx'; export { c1, c2, c3 }; And then we can include them within a single line: import { c1, c2, c3 } from '../components'; The Server Routes Table So we are going to write our server API! let's define the routes first: Routes Table GET /games Get all the games. POST /games Create a game. GET /games/:id Get a single game. DELETE /games/:id Delete a game. Nothing exotic up here, we just defined some common routes to edit our archive. Before we start creating the project, you should have already asked yourself where are we going to save the data... Are we gonna persist it? Yes, we are gonna use Mongoose ODM to persist data on a Mongo database. Setup In the newly created project folder we first initialize the package.json: yarn init So now let's start adding our dependencies. For the server part of the project we just need a few, Express (definitely), Mongoose, Body-parser, Morgan and Babel transpiler to use ES6 syntax throughout our app. NB: Babel is great but not suggested for production as it slows down the server while transpiling from ES6 to ES5. We need to run two commands as babel is a dev-dependency: yarn add express mongoose morgan body-parser yarn add babel-core babel-cli babel-preset-es2015 --dev Now we are able to run our server with babel-node server.js. however It's good practice to create a specific command inside the package.json under \"scripts\". So, open the package.json file and add \"scripts\": { \"api\": \"babel-node server.js\" } So now we can just run yarn api At the end your package.json file should be similar to mine: { \"name\": \"tutorial\", \"version\": \"1.0.0\", \"main\": \"server.js\", \"author\": \"Sam\", \"license\": \"MIT\", \"scripts\": { \"api\": \"babel-node server.js\" }, \"dependencies\": { \"body-parser\": \"^1.15.2\", \"express\": \"^4.14.0\", \"mongoose\": \"^4.7.2\", \"morgan\": \"^1.7.0\" }, \"devDependencies\": { \"babel-cli\": \"^6.18.0\", \"babel-core\": \"^6.20.0\", \"babel-preset-es2015\": \"^6.18.0\" } } In addition to this, to effectively take advantage of Babel transpiler we have to create a file .babelrc in the root folder, then paste the following code: { \"presets\": [\"es2015\"] } NB: According to the documentation you can specify your config within the package.json file too. Server.js At this point it's really time to code! We need a server file where we configure our express server, connect the body-parser and morgan middlewares as well as mongoose, write our routes and so on. Create the server.js file in the root folder and past the following code: import express from 'express'; import bodyParser from 'body-parser'; import mongoose from 'mongoose'; import morgan from 'morgan'; // We gotta import our models and routes import Game from './app/models/game'; import { getGames, getGame, postGame, deleteGame } from './app/routes/game'; const app = express(); // Our express server! const port = process.env.PORT || 8080; // DB connection through Mongoose const options = { server: { socketOptions: { keepAlive: 1, connectTimeoutMS: 30000 } }, replset: { socketOptions: { keepAlive: 1, connectTimeoutMS : 30000 } } }; // Just a bunch of options for the db connection mongoose.Promise = global.Promise; // Don't forget to substitute it with your connection string mongoose.connect('YOUR_MONGO_CONNECTION', options); const db = mongoose.connection; db.on('error', console.error.bind(console, 'connection error:')); // Body parser and Morgan middleware app.use(bodyParser.urlencoded({ extended: true})); app.use(bodyParser.json()); app.use(morgan('dev')); // We tell express where to find static assets app.use(express.static(__dirname + '/client/dist')); // Enable CORS so that we can make HTTP request from webpack-dev-server app.use((req, res, next) => { res.header(\"Access-Control-Allow-Origin\", \"*\"); res.header('Access-Control-Allow-Methods', 'GET,POST,DELETE'); res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\"); next(); }); // API routes app.route('/games') // create a game .post(postGame) // get all the games .get(getGames); app.route('/games/:id') // get a single game .get(getGame) // delete a single game .delete(deleteGame); // ...For all the other requests just sends back the Homepage app.route(\"*\").get((req, res) => { res.sendFile('client/dist/index.html', { root: __dirname }); }); app.listen(port); console.log(`listening on port ${port}`); The code is pretty straightforward: - We connect to our Mongo.db database through Mongoose. - We set Body-parser and Morgan middlewares for parsing request bodies and output useful logs in the console. - We enable CORS to allow HTTP requests from the webpack-dev-server on the same machine, this makes our development easier later on, it won't be necessary once we serve our client from node. - ...And then our routes with a specific callback function. Before writing the functions in /app/routes/game.js let's define our Game model! Game Model The Game model is very simple, we need the game name, a description, the year it was published and a picture. Plus, postDate to track the time it was created. Paste the following code in /app/models/game.js: // Dependencies import mongoose from 'mongoose'; const Schema = mongoose.Schema; // Our schema definition const gameSchema = new Schema( { name: String, year: Number, description: String, picture: String, postDate : { type: Date, default: Date.now } // Timestamp } ); // We export the schema to use it anywhere else export default mongoose.model('Game', gameSchema); Notice I did not mark any field as required: Although I recommend to do it in your personal projects, for the purpose of the tutorial I wanted to be as concise as possible. Next, let's create the callback functions to handle the requests and responses and we can test our server. Routes Callbacks Create the game.js file in /client/app/routes and paste the following code: // We import our game schema import Game from '../models/game'; // Get all the games sorted by postDate const getGames = (req, res) => { // Query the db, if no errors send all the games to the client Game.find(null, null, { sort: { postDate : 1 } }, (err, games) => { if (err) { res.send(err); } res.json(games); // Games sent as json }); } // Get a single game filtered by ID const getGame = (req, res) => { const { id } = req.params; // Query the db for a single game, if no errors send it to the client Game.findById(id, (err, game) => { if (err) { res.send(err); } res.json(game); // Game sent as json }); } // Get the body data and create a new Game const postGame = (req, res) => { // We assign the game info to a empty game and send a message back if no errors let game = Object.assign(new Game(), req.body); // ...Then we save it into the db game.save(err => { if (err) { res.send(err); } res.json({ message: 'game created' }); // A simple JSON answer to inform the client }); }; // Delete a game by the given ID const deleteGame = (req, res) => { // We remove the game by the given id and send a message back if no errors Game.remove( { _id: req.params.id }, err => { if (err) { res.send(err); } res.json({ message: 'successfully deleted' }); // A simple JSON answer to inform the client } ); }; // We export our functions to be used in the server routes export { getGames, getGame, postGame, deleteGame }; The four functions take care of the user requests: They all gonna communicate with the database through the Game model and return a defined response to the client. Our server is complete, let's give it a try! Postman Simple Testing For this simple test we first create a new game and doublecheck whether it gets really added to the archive. We consequently gonna delete it and make sure it really disappeared from the archive! By doing so we test all the routes we previously defined. I personally use Postman browser extension to achieve this result but feel free to use your favorite tools. Let's start our server with yarn api /GET games My database is already populated with a few games, here is the result: /POST games Let's try to add a game with random information since we are going to delete it soon! As counterproof let's make another GET request to /games and see whether it was really added to the archive. Cool it was really added! /GET games/:id Let's try to filter the games by id, trivial test but we want to cover all the endpoints. Seems to be working smoothly. /DELETE games/:id Now, given the id, let's try to delete it: Finally, let's doublecheck if it was really deleted: Awesome the server is ready, time to work on the client-side! The Client All of you familiar with React already know we need a few steps before really coding the client. While there are some solutions like react-create-app which aims to avoid the initial configuration hassle, I still prefer to manually install all the packages which also has an educational value for the tutorial. For anyone interested in digging into Webpack, I suggest to take a look at survive.js. It's a valuable resource for learning Webpack and React, plus the e-books can be read online for free. Let's start installing some packages now: yarn add webpack webpack-dev-server webpack-merge --dev We are obviously installing webpack to help us create the bundle along with webpack-dev-server for serving us the client during development. Perhaps not everyone is familiar with the latter one: webpack-merge helps to merge pieces of configurations together. Other than this, we need a few loaders: yarn add babel-preset-react babel-loader react-hot-loader@next style-loader css-loader file-loader --dev These helps in severals tasks like transpiling (guess which one!), include the css and the fonts in our bundle as well as avoid to refresh the page while changing the code in React. As there are continuous updates on these packages, make sure that react-hot-loader is up-to-date because the syntax to include it in .babelrc changed, I am currently using the version 3.0.0-beta.6 thanks to code>@next. In case you receive a webpack error stating that it cannot find load the plugin, just run yarn add react-hot-loader@3.0.0-beta.6 --dev To organize our code for better readability, webpack-config.js will require some data from other files. Let's create webpack-paths.js and paste the following code: \"use strict\"; const path = require('path'); // We define some paths to be used throughout the webpack config module.exports = { src: path.join(__dirname, 'client/src'), dist: path.join(__dirname, 'client/dist'), css: path.join(__dirname, 'client/dist/css') }; As you can see we want to export some paths we are using inside the webpack configuration. Let's move on and create the webpack.config.js file and paste the following code: \"use strict\"; const merge = require('webpack-merge'); const PATHS = require('./webpack-paths'); const loaders = require('./webpack-loaders'); const common = { entry: { // The entry file is index.js in /client/src app: PATHS.src }, output: { // The output defines where the bundle output gets created path: PATHS.dist, filename: 'bundle.js' }, module: { rules: [ loaders.babel, // Transpiler loaders.css, // Our bundle will contain the css loaders.font, // Load fonts ] }, resolve: { extensions: ['.js', '.jsx'] // the extensions to resolve } }; let config; // The switch defines the different configuration as development requires webpack-dev-server switch(process.env.NODE_ENV) { case 'build': config = merge( common, { devtool: 'source-map' } // SourceMaps on separate file ); break; case 'development': config = merge( common, { devtool: 'eval-source-map' }, // Default value loaders.devServer({ host: process.env.host, port: 3000 }) ); } // We export the config module.exports = config; - I created a common configuration, common, where I define the common properties for both development (using webpack-dev-server) and build (the bundle is served by Node.js). - As you may have noticed, the entry point, the output, the loaders and resolve are common among the configurations. - The switch discriminates between the two configurations, the main difference is that in development we run webpack-dev-server and get better debug informations inside our sourceMap thanks to eval-source-map. Finally, the merged configuration goes through the validate function and gets exported. The loaders are imported from another file, webpack-loaders.js. Let's create it and paste the following code: \"use strict\"; const webpack = require('webpack'); const PATHS = require('./webpack-paths'); exports.devServer = function(options) { return { devServer:{ historyApiFallback: true, hot: true, // Enable hot module inline: true, stats: 'errors-only', host: options.host, // http://localhost port: options.port, // 3000 contentBase: './client/dist', }, // Enable multi-pass compilation for enhanced performance plugins: [ // Hot module new webpack.HotModuleReplacementPlugin({ multistep: true }) ] }; } // the css loader exports.css = { test: /\\.css$/, use: ['style-loader', 'css-loader'], include: PATHS.css } // The file loader exports.font = { test: /\\.ttf$/, use: ['file-loader'] } // Babel loader exports.babel = { test: /\\.jsx?$/, exclude: /node_modules/, use: ['babel-loader'] }; The file just exports the loaders and webpack-dev-server with the hot-reload plugin. We also have to edit .babelrc: { \"presets\": [ \"es2015\", \"react\" ], \"plugins\": [ \"react-hot-loader/babel\" ] } We added the preset for react and react-hot-loader plugin. Finally, we also gotta edit package.json to include new scripts commands: \"start\": \"NODE_ENV=development webpack-dev-server\", \"build\": \"NODE_ENV=build webpack\" We set the NODE_ENV variable to switch between the two configurations we defined before in webpack.config.js. NB: If you are a windows user you may add a & to concatenate the commands: \"start\": \"NODE_ENV=development & webpack-dev-server\", \"build\": \"NODE_ENV=build & webpack\" Assets First, let's create the index file served by the server which includes all our assets, bundle.js included. In /client/dist create a file index.html and paste the following code: <!DOCTYPE html> <html lang=\"en\"> <head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>Retrogames Archive</title> <link rel=\"icon\" href=\"https://cdn.filestackcontent.com/S0zeyXxRem6pL6tHq9pz\"> <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"> </head> <body> <div id=\"content\"></div> <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script> <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script> <script src=\"https://api.filestackapi.com/filestack.js\"></script> <script src=\"./bundle.js\"></script> </body> </html> - Notice the div with id content, this is where ReactDOM renders our components - In this tutorial we won't use packages like react-bootsrap but just include the CDN url for both the css and javascript sources. - Finally we included Filestack! CSS Regarding the css, I have just customized two templates that you can find on the boostrap website and included some cool fonts I found. Just take copy them from my project. Filestack Before diggin' into the React components it's better to setup a Filestack account, so on their website just click on the try it free button and follow the instructions: Once in the developer portal you are immediately proposed to add their snippet in the project which is great because it would save us time but we want to customize the uploader right? So just skip it and instead grab the API key (click on \"New application\" in case) as we are needing it later! React It's finally time to write our components! Our archive will welcome user with a nice UI: We provide the user some simple informations about us as well as the app in three different views. Once they click on Browse! they are redirected to the real archive list where they can add new games as well as view the details and delete them: Our routes configuration is composed by two main routes with their children routes: 1. The Homepage is a route with three children routes in charge to render the components related to home, features and contacts links. 2. The Games route handles the children routes to list the games and add a new one. Notice I named them Homepage and Games to help you guys understand the structure but in the code they actually don't carry any name themselves. Let's install a few packages: yarn add react react-dom react-router@3.0.0 NB: I am using the version 3 of react-router in the tutorial. We can start by creating a file index.js in /client/src and past the following code: import '../dist/css/style.css'; import React from 'react'; import ReactDOM from 'react-dom'; import Routes from './routes'; // Don't forget to add your API key filepicker.setKey(\"YOUR_API_KEY\"); // Our views are rendered inside the #content div ReactDOM.render( Routes, document.getElementById('content') ); We included react-dom so we can render the routes in the div element with id content! Also, this is where you should set Filestack's API key. Routes Well, our routes configuration is in the same folder so create routes.js in /client/src and paste the following code: import React from 'react'; import { Router, Route, hashHistory, IndexRoute } from 'react-router'; import { Home, Welcome, About, Contact } from './components'; // Use hashHistory for easier development const routes = ( <Router history={hashHistory}> <Route path=\"/\" component={Home}> <IndexRoute component={Welcome} /> <Route path=\"/about\" component={About} /> <Route path=\"/contact\" component={Contact} /> </Route> </Router> ); export default routes; We imported a few components from react-router and defined our first URL paths structure: Url Component / Home -> Welcome /about Home -> About /contact Home -> Contact We are using hashHistory so we don't need any server configuration in case of page refresh. Moreover, notice the four components we are going to write are stateless, they are just presentational components that are not going to touch the state so they are very easy to write. Let's do it! NB: React 15.3.0 introduced PureComponent to replace pure-render-mixin which does not work with ES6 classes so we can actually extends it for our stateless components. Home.jsx This component is basically the skeleton for the others, in /client/src/components create a file Home.jsx and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; export default class Home extends PureComponent { active (path) { // Returns active when the path is equal to the current location if (this.props.location.pathname === path) { return 'active'; } } render () { return ( <div className=\"main\"> <div className=\"site-wrapper\"> <div className=\"site-wrapper-inner\"> <div className=\"cover-container\"> <div className=\"masthead clearfix\"> <div className=\"inner\"> <nav> <img className=\"header-logo\" src=\"https://cdn.filestackcontent.com/nLnmrZQaRpeythR4ezUo\"/> <ul className=\"nav masthead-nav\"> <li className={this.active('/')}><Link to=\"/\">Home</Link></li> <li className={this.active('/about')}><Link to=\"/about\">About</Link></li> <li className={this.active('/contact')}><Link to=\"/contact\">Contact</Link></li> </ul> </nav> </div> </div> {this.props.children} </div> </div> </div> </div> ); } } - {this.props.children} is where we render the three children components. - We need to change the class to the li element when clicked, this is easy to achieve through the active() function which checks the pathname against the path parameter we pass. If we had to change the class of the Link component we wouldn't need any function but unfortunately the theme I grabbed from Bootstrap applies \"active\" on the li element instead. Welcome.jsx This component welcomes our user and provides the link to navigate to the games archive, create the file Welcome.jsx in /client/src/component and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; export default class Welcome extends PureComponent { render () { return ( <div className=\"inner cover\"> <h1 className=\"cover-heading\">Welcome</h1> <p className=\"lead\">Click on browse to start your journey into the wiki of games that made history.</p> <p className=\"lead\"> <Link className=\"btn btn-lg\" to=\"/games\">Browse!</Link> </p> </div> ); } } It doesn't require any explanation, just a welcome message and the browse! link to view the games archive. About.jsx Create About.jsx in /client/src/components and paste the following code: import React, { PureComponent } from 'react'; export default class About extends PureComponent { render () { return ( <div className=\"inner cover\"> <h1 className=\"cover-heading\">Javascript Everywhere</h1> <p className=\"lead\">This archive is made with Node.js and React. The two communicate through async HTTP requests handled by Redux-saga... Yes we love Redux here!</p> </div> ); } } Even simplier, just a simple explanation on how we wrote the app! Contact.jsx Create Contact.jsx in /client/src/components and paste the following code: import React, { PureComponent } from 'react'; export default class About extends PureComponent { render () { return ( <div className=\"inner cover\"> <h1 className=\"cover-heading\">Any Questions?</h1> <p className=\"lead\">Don't hesitate to contact me: zaza.samuele@gmail.com</p> </div> ); } } Feel free to change the text! /components/index.js We need this file to export all the components, let's create it and paste the following code: import About from './About'; import Contact from './Contact'; import Home from './Home'; import Welcome from './Welcome'; // We export all the components at once export { About, Contact, Home, Welcome }; At this point we can already see the client in action, just run yarn start and open http://localhost:3000 in the browser. Though we haven't completed the app we can already see the welcome page as well as the other links on the top-right of the page. Let's now work on the interactive pages. Update Routes.js We already discussed about the url, we need to update our route configuration: We have other two views, one for the games list and one which is basically the form users upload games. Open routes.js and replace the code with the following: import React from 'react'; import { Router, Route, hashHistory, IndexRoute } from 'react-router'; import { AddGameContainer, GamesContainer } from './containers'; import { Home, Archive, Welcome, About, Contact } from './components'; const routes = ( <Router history={hashHistory}> <Route path=\"/\" component={Home}> <IndexRoute component={Welcome} /> <Route path=\"/about\" component={About} /> <Route path=\"/contact\" component={Contact} /> </Route> <Route path=\"/games\" component={Archive}> <IndexRoute component={GamesContainer} /> <Route path=\"add\" component={AddGameContainer} /> </Route> </Router> ); export default routes; Let's take a look at the definitive configuration: Url Component / Home -> Welcome /about Home -> About /contact Home -> Contact /games Archive -> GamesContainer /games/add Archive -> AddGameContainer /containers/index.js As we did for the components we create an index file to export the containers. Create it in /client/src/containers and paste the following code: import AddGameContainer from './AddGameContainer'; import GamesContainer from './GamesContainer'; // We export all the containers at once export { AddGameContainer, GamesContainer }; Archive.jsx as Home component, it just provides the layour and render the children. Create Archive.jsx in /client/src/components and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; export default class Layout extends PureComponent { render () { return ( <div className=\"view\"> <nav className=\"navbar navbar-inverse\"> <div className=\"container\"> <div className=\"navbar-header\"> <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"> <span className=\"sr-only\">Toggle navigation</span> <span className=\"icon-bar\" /> <span className=\"icon-bar\" /> <span className=\"icon-bar\" /> </button> <Link className=\"navbar-brand\" to=\"/\"> <img src=\"https://cdn.filestackcontent.com/nLnmrZQaRpeythR4ezUo\" className=\"header-logo\" /> </Link> </div> </div> </nav> {this.props.children} <footer className=\"text-center\"> <p>© 2016 Samuele Zaza</p> </footer> </div> ); } } GamesContainer.jsx This is the container for the archive list where we are writing all the functions to manipulate the state. Let's first create the file and then comment it! Create GamesContainer.jsx in /client/src/containers and paste the following code: import React, { Component } from 'react'; import { Modal, GamesListManager } from '../components'; export default class GamesContainer extends Component { constructor (props) { super(props); // The initial state this.state = { games: [], selectedGame: {}, searchBar: '' }; // Bind the functions to this (context) this.toggleModal = this.toggleModal.bind(this); this.deleteGame = this.deleteGame.bind(this); this.setSearchBar = this.setSearchBar.bind(this); } // Once the component mounted it fetches the data from the server componentDidMount () { this.getGames(); } toggleModal (index) { this.setState({ selectedGame: this.state.games[index] }); // Since we included bootstrap we can show our modal through its syntax $('#game-modal').modal(); } getGames () { fetch('http://localhost:8080/games', { headers: new Headers({ 'Content-Type': 'application/json' }) }) .then(response => response.json()) // The json response to object literal .then(data => this.setState({ games: data })); } deleteGame (id) { fetch(`http://localhost:8080/games/${id}`, { headers: new Headers({ 'Content-Type': 'application/json', }), method: 'DELETE', }) .then(response => response.json()) .then(response => { // The game is also removed from the state thanks to the filter function this.setState({ games: this.state.games.filter(game => game._id !== id) }); console.log(response.message); }); } setSearchBar (event) { // Super still filters super mario thanks to toLowerCase this.setState({ searchBar: event.target.value.toLowerCase() }); } render () { const { games, selectedGame, searchBar } = this.state; return ( <div> <Modal game={selectedGame} /> <GamesListManager games={games} searchBar={searchBar} setSearchBar={this.setSearchBar} toggleModal={this.toggleModal} deleteGame={this.deleteGame} /> </div> ); } } - In the constructor we defined an inital state with an empty array of games that will be soon populated. selectedGame is the specific game to show in the bootstrap modal and searchBar is the search keyword to filter the games. - In componentDidMount() we call game() which make an HTTP call for the games and set them into the state. Notice the new fetch() function. - toggleModal() is passed as props to the GamesListManager component to set the current game in the state and toggle the modal. - setSearchBar() updates the state with the current keyword. toLowerCase() guarantees our search is not case-sensitive. - Finally, we render Modal and GamesListManager components. NB: At the present time thinking about refactoring isn't necessary as our code will substantially change with Redux. In fact we should be just focusing on making things work now! Modal.jsx This is another stateless component, just create it in /client/src/components and paste the following code: import React, { PureComponent } from 'react'; export default class Modal extends PureComponent { render () { const { _id, img, name, description, year, picture } = this.props.game; return( <div className=\"modal fade\" id=\"game-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"> <div className=\"modal-dialog\" role=\"document\"> <div className=\"modal-content\"> <div className=\"modal-header\"> <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"> <span aria-hidden=\"true\">×</span> </button> <h4 className=\"modal-title\" id=\"myModalLabel\">{`${name} (${year})`}</h4> </div> <div className=\"modal-body\"> <div> <img src={picture} className=\"img-responsive img-big\" /> </div> <hr /> <p>{description}</p> </div> <div className=\"modal-footer\"> <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\">Close</button> </div> </div> </div> </div> ); } } There is nothing special here, we simply shows the game information in a fancy modal. GamesListManager.jsx Though stateless it is a more meaningful component. Create it in /client/src/components and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; import Game from './Game'; export default class GamesListManager extends PureComponent { render () { const { games, searchBar, setSearchBar, toggleModal, deleteGame } = this.props; return ( <div className=\"container scrollable\"> <div className=\"row text-left\"> <Link to=\"/games/add\" className=\"btn btn-danger\">Add a new Game!</Link> </div> <div className=\"row\"> <input type=\"search\" placeholder=\"Search by Name\" className=\"form-control search-bar\" onKeyUp={setSearchBar} /> </div> <div className=\"row\"> { // A Game is only shown if its name contains the string from the searchBar games .filter(game => game.name.toLowerCase().includes(searchBar)) .map((game, i) => { return ( <Game {...game} key={game._id} i={i} toggleModal={toggleModal} deleteGame={deleteGame} /> ); }) } </div> <hr /> </div> ); } } - We could actually move out the search bar and create another component for it, however we won't use it anywhere else so there is no reusability involved. - In the render function we map the games to a Game component and we do some basic filtering: We make sure the game name contains the keyword from the search bar Game.jsx The game container is pretty immediate as well, create it into /client/src/components and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; export default class Game extends PureComponent { render () { const { _id, i, name, description, picture, toggleModal, deleteGame } = this.props; return ( <div className=\"col-md-4\"> <div className=\"thumbnail\"> <div className=\"thumbnail-frame\"> <img src={picture} alt=\"...\" className=\"img-responsive thumbnail-pic\" /> </div> <div className=\"caption\"> <h5>{name}</h5> <p className=\"description-thumbnail\">{`${description.substring(0, 150)}...`}</p> <div className=\"btn-group\" role=\"group\" aria-label=\"...\"> <button className=\"btn btn-success\" role=\"button\" onClick={() => toggleModal(i)}>View</button> <button className=\"btn btn-danger\" role=\"button\" onClick={() => deleteGame(_id)}>Delete</button> </div> </div> </div> </div> ); } } The buttons triggers the functions we wrote in GamesContainer: These were passed as props from GamesContainer to GamesListManager and finally to Game. AddGameContainer.jsx The container is gonna render a form where our users can create games for the archive. Create the AddGameContainer.jsx in /client/src/containers and paste the following code: import React, { Component } from 'react'; import { hashHistory } from 'react-router'; import { Form } from '../components'; export default class AddGameContainer extends Component { constructor (props) { super(props); // Initial state this.state = { newGame: {}}; // Bind this (context) to the functions to be passed down to the children components this.submit = this.submit.bind(this); this.uploadPicture = this.uploadPicture.bind(this); this.setGame = this.setGame.bind(this); } submit () { // We create the newGame object to be posted to the server const newGame = Object.assign({}, { picture: $('#picture').attr('src') }, this.state.newGame); fetch('http://localhost:8080/games', { headers: new Headers({ 'Content-Type': 'application/json' }), method: 'POST', body: JSON.stringify(newGame) }) .then(response => response.json()) .then(data => { console.log(data.message); // We go back to the games list view hashHistory.push('/games'); }); } uploadPicture () { filepicker.pick ( { mimetype: 'image/*', // Cannot upload other files but images container: 'modal', services: ['COMPUTER', 'FACEBOOK', 'INSTAGRAM', 'URL', 'IMGUR', 'PICASA'], openTo: 'COMPUTER' // First choice to upload files from }, function (Blob) { console.log(JSON.stringify(Blob)); $('#picture').attr('src', Blob.url); }, function (FPError) { console.log(FPError.toString()); } ); } // We make sure to keep the state up-to-date to the latest input values setGame () { const newGame = { name: document.getElementById('name').value, description: document.getElementById('description').value, year: document.getElementById('year').value, picture: $('#picture').attr('src') }; this.setState({ newGame }); } render () { return <Form submit={this.submit} uploadPicture={this.uploadPicture} setGame={this.setGame} /> } } - In the constructor we define an empty new game in the state. Thanks to setGame() we create its values whenever the user edit one of the inputs from the form (you will see it later). - submit() sends the new game to the server through POST request. What about the upload() function? Inside we run the pick() function from Filestack which prompts a modal a picture. If you take a look a the documentation for the function, we may have noticed that the first parameter is an option object for customizing our uploader: For example, if you don't want users to upload non-image files, well Filestack allows you to restrict the mimetype! I love the fact I can create in few minutes my uploader with custom options to fit my needs. For the current tutorial, I defined the option objects as following: - The mimetype equal to image/* limits the upload to image files. - We can choose to show either a modal or dialog uploading interfaces, I personally prefer the modal but you guys could try to customize it the way you like! - What are the sources to upload from? Not just the user's device but there are plenty of other choices. In our case we define an array of all the allowed sources. - Finally, among these choices above, we choose the computer as the default one. Finally, there are two functions, one for onSuccess and one for onError. Notice the Blob object parameter on onSuccess: This is returned by Filestack, it contains a bunch of information among which the image url! Let me show you an example: { \"url\":\"https://cdn.filestackcontent.com/CLGctDtSZiFbm4AKYTSX\", \"filename\":\"background.jpg\", \"mimetype\":\"image/jpeg\", \"size\":609038, \"id\":1, \"key\":\"w53urmDSga10ndZsOiE5_background.jpg\", \"container\":\"filestack-website-uploads\", \"client\":\"computer\", \"isWriteable\":true } For more information don't hesitate to take a look at the documentation, the guys made a big effort to write very clear instructions. Form.jsx Our last component is Form, let's create it in /client/src/components (used to it yet?!) and paste the following code: import React, { PureComponent } from 'react'; import { Link } from 'react-router'; export default class Form extends PureComponent { render () { return ( <div className=\"row scrollable\"> <div className=\"col-md-offset-2 col-md-8\"> <div className=\"text-left\"> <Link to=\"/games\" className=\"btn btn-info\">Back</Link> </div> <div className=\"panel panel-default\"> <div className=\"panel-heading\"> <h2 className=\"panel-title text-center\"> Add a Game! </h2> </div> <div className=\"panel-body\"> <form name=\"product-form\" action=\"\" onSubmit={() => this.props.submit()} noValidate> <div className=\"form-group text-left\"> <label htmlFor=\"caption\">Name</label> <input id=\"name\" type=\"text\" className=\"form-control\" placeholder=\"Enter the title\" onChange={() => this.props.setGame()} /> </div> <div className=\"form-group text-left\"> <label htmlFor=\"description\">Description</label> <textarea id=\"description\" type=\"text\" className=\"form-control\" placeholder=\"Enter the description\" rows=\"5\" onChange={() => this.props.setGame()} ></textarea> </div> <div className=\"form-group text-left\"> <label htmlFor=\"price\">Year</label> <input id=\"year\" type=\"number\" className=\"form-control\" placeholder=\"Enter the year\" onChange={() => this.props.setGame()} /> </div> <div className=\"form-group text-left\"> <label htmlFor=\"picture\">Picture</label> <div className=\"text-center dropup\"> <button id=\"button-upload\" type=\"button\" className=\"btn btn-danger\" onClick={() => this.props.uploadPicture()}> Upload <span className=\"caret\" /> </button> </div> </div> <div className=\"form-group text-center\"> <img id=\"picture\" className=\"img-responsive img-upload\" /> </div> <button type=\"submit\" className=\"btn btn-submit btn-block\">Submit</button> </form> </div> </div> </div> </div> ); } } Pretty straightforward! Whenever a users edit any form input, the onChange function update the state. Update /components/index.js The components were all created but we have to update /client/src/components/index.js to export them all. Replace its code with the following: import About from './About'; import Contact from './Contact'; import Form from './Form'; import Game from './Game'; import GamesListManager from './GamesListManager'; import Home from './Home'; import Archive from './Archive'; import Modal from './Modal'; import Welcome from './Welcome'; // We export all the components at once export { About, Contact, Form, Game, GamesListManager, Home, Archive, Modal, Welcome }; And now we can run the app! We first start the api server: yarn api And if you haven't, webpack-dev-server: yarn start This should work smoothly however we are still not serving the bundle from Node.js. We need to run another command: yarn build This will create the bundle.js in the /dist folder... Now connect to http://localhost:8080 and the client is served from our real server instead. Congratulations for finishing the first part of the tutorial! Conclusions In this first part of the tutorial we went through the initial project configuration. We first built the backend of the app, an API server with Node.js and Express. We also made a preliminary test with postman to doublecheck that everything works as expected. For a real-world app this is not exhaustive, if you a curious about testing, take a look at my previous post on testing Node.js with Mocha and Chai here on Scotch! Then we spent some time configuring Webpack to include javascript and css inside the same bundle file. Eventually we wrote React components to see the app in action. In the next tutorial we are going to include Redux and related packages, we will see how easily we can manage the state if we separate it into a container. We will include lots of new packages, not just redux but redux-saga, redux-form... We will work with immutable data structure as well. Stay tuned! FREE Webinar! Going from jQuery to Vue Wed, Dec 13 - 11:00 AM PST Register for Free Latest Course! Build a Gif Battle Site with Angular and Node Free Preview <ol> of Contents Samuele Zaza 7 posts I am a full-stack web developer working for Taroko Software as front-end web developer and Filestack Tech Evangelist. When not coding I may be spotted in a gym lifting or planning to conquer the world LOL. View My 7 Posts 🔥 Popular 👍 5 🔖 💬 Samuele Zaza 7 posts I am a full-stack web developer working for Taroko Software as front-end web developer and Filestack Tech Evangelist. When not coding I may be spotted in a gym lifting or planning to conquer the world LOL. Latest Video Courses Getting Started with Angular v2+ Getting Started with React Getting Started with JavaScript for Web Development Get to Know Git Join Scotch 🍩 High Quality Content The best tutorials and content that you'll find for web development. Guides, courses, tutorials, and more great content to learn with. 🙌 Build Real Apps We won't just go over concepts and \"Hello Worlds\"; we'll build real apps together that you can use at your job or for your portfolio. 💡 Not Just How, But Why There are many different ways to code the same project. We'll show best practices and why certain choices are better than others. Scotch Free - Write your own posts - Watch free lessons - Like favorite posts - Bookmark content for reference Free Scotch School - All of the free features - Access to all premium content - Downloadable videos - No ads across all of Scotch - Track completed content $20 Brought to you from Las Vegas and DC by... Chris Sevilleja Follow Nick Cerminara Follow Easiest Local Dev Environment Practical Angular v5+ Book Scotch Top shelf learning. Informative tutorials explaining the code and the choices behind it all. - - - - Scotch About Authors Contact Advertising - About - Authors - Contact - Advertising - Community Posts Slack - Posts - Slack - Extras Top Authors Become a Writer Shop Scotch Box - Top Authors - Become a Writer - Shop - Scotch Box - FAQ - Privacy - Terms - Rules - Hosted by Digital Ocean 2017 © Scotch.io, LLC. All Rights Super Duper Reserved. Login Remember Me Login Forgot password? Don't have an account? Sign Up Get Access Create an account now to get access to all premium content. Create an Account Forgot password? Already have an account? Login (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-36045075-1', 'auto'); ga('set', 'transport', 'beacon'); ga('send', 'pageview'); t;t++)n._w[a[t]]=n[a[t]]=n[a[t]]||new c;i=o.createElement(s),i.async=1,i.src=\"//static.woopra.com/js/w.js\",e=o.getElementsByTagName(s)[0],e.parentNode.insertBefore(i,e) })(\"woopra\"); woopra.config({ domain: 'scotch.io' }); woopra.track(); !function(t,e,n){function a(t){var a=e.createElement(\"script\");a.type=\"text/javascript\",a.async=!1,a.src=(\"https:\"===e.location.protocol?\"https\":\"http\")+\":\"+n,(t||e.body||e.head).appendChild(a)}function o(){var t=e.getElementsByTagName(\"script\"),n=t[t.length-1];return n.parentNode} var p=o();t.spotId=\"sp_D7GE1sbz\",t.parentElement=p,a(p)}(window.SPOTIM={},document,\"//www.spot.im/launcher/bundle.js\"); setInterval(function(){var e=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject('Microsoft.XMLHTTP');e.open('GET','/genealabs/laravel-caffeine/drip',!0);e.setRequestHeader('X-Requested-With','XMLHttpRequest');e.send();}, 600000);"},{"url":"https://blog.risingstack.com/node-js-interview-questions-and-answers-2017/?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more","text":"Node.js Interview Questions and Answers (2017 Edition) | @RisingStack { \"@context\": \"https://schema.org\", \"@type\": \"Article\", \"publisher\": { \"@type\": \"Organization\", \"name\": \"RisingStack Engineering - Node.js Tutorials & Resources\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://risingstack-blog.s3.amazonaws.com/2016/Mar/risingstack_logo-1457001742686.png\", \"width\": 60, \"height\": 60 } }, \"author\": { \"@type\": \"Person\", \"name\": \"Gergely Nemeth\", \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://blog-assets.risingstack.com/2017/01/gergely-nemeth-risingstack-1.png\", \"width\": 50, \"height\": 50 }, \"url\": \"https://blog.risingstack.com/author/gergely/\", \"sameAs\": [ \"https://twitter.com/nthgergo\" ] }, \"headline\": \"Node.js Interview Questions and Answers (2017 Edition) | @RisingStack\", \"url\": \"https://blog.risingstack.com/node-js-interview-questions-and-answers-2017/\", \"datePublished\": \"2017-01-03T08:54:16.000Z\", \"dateModified\": \"2017-10-25T14:01:58.000Z\", \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://blog-assets.risingstack.com/2017/04/node-js-interview-questions-and-answers-2017.png\", \"width\": 1200, \"height\": 630 }, \"keywords\": \"Node.js Tutorials for Beginners, Learn Node.js\", \"description\": \"These are the Node.js Interview Questions you should know if you'd like to nail the best job opportunities of 2017! Puzzles and Answers inside as well!\", \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"https://blog.risingstack.com/\" } } ghost.init({ clientId: \"ghost-frontend\", clientSecret: \"3fe3251906b2\" }); var $mcGoal = {'settings':{'uuid':'510d6f81b948a39e0d9c32ec3','dc':'us9'}}; (function() { var sp = document.createElement('script'); sp.type = 'text/javascript'; sp.async = true; sp.defer = true; sp.src = 'https://resources.risingstack.com/mailchimp-v1.js' var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(sp, s); })(); (function (){ var tests = [ ] document.addEventListener(\"DOMContentLoaded\", function(event) { var $topCta = $('#top-cta') $topCta.html(tests[Math.floor(Math.random() * tests.length)]) }); }()) - Home - About Us - Trainings Node.js Fundamentals Node + Microservices Securing Node Applications - Node.js Fundamentals - Node + Microservices - Securing Node Applications - Services Node.js Consulting & Development 24 / 7 Node.js Support Kubernetes Consulting - Node.js Consulting & Development - 24 / 7 Node.js Support - Kubernetes Consulting - Resources Subscribe for the newsletter Hire us Node.js Development 24/7 Node.js Support On-site Node Trainings <!-- Choose your path Beginner Node.js Tutorials Advanced Node.js Tutorials Node.js & Microservices Blog > Node.js Tutorials for Beginners a year ago January 3rd, 2017 Node.js Interview Questions and Answers (2017 Edition) by Gergely Nemeth(@nthgergo), Co-founder of RisingStack Two years ago we published our first article on common Node.js Interview Questions and Answers. Since then a lot of things improved in the JavaScript and Node.js ecosystem, so it was time to update it. Important Disclaimers It is never a good practice to judge someone just by questions like these, but these can give you an overview of the person's experience in Node.js. But obviously, these questions do not give you the big picture of someone's mindset and thinking. I think that a real-life problem can show a lot more of a candidate's knowledge - so we encourage you to do pair programming with the developers you are going to hire. Finally and most importantly: we are all humans, so make your hiring process as welcoming as possible. These questions are not meant to be used as \"Questions & Answers\" but just to drive the conversation. Node.js Interview Questions for 2017 - What is an error-first callback? - How can you avoid callback hells? - What are Promises? - What tools can be used to assure consistent style? Why is it important? - When should you npm and when yarn? - What's a stub? Name a use case! - What's a test pyramid? Give an example! - What's your favorite HTTP framework and why? - How can you secure your HTTP cookies against XSS attacks? - How can you make sure your dependencies are safe? The Answers What is an error-first callback? Error-first callbacks are used to pass errors and data as well. You have to pass the error as the first parameter, and it has to be checked to see if something went wrong. Additional arguments are used to pass data. fs.readFile(filePath, function(err, data) { if (err) { // handle the error, the return is important here // so execution stops here return console.log(err) } // use the data object console.log(data) }) How can you avoid callback hells? There are lots of ways to solve the issue of callback hells: - modularization: break callbacks into independent functions - use a control flow library, like async - use generators with Promises - use async/await (note that it is only available in the latest v7 release and not in the LTS version - you can read our experimental async/await how-to here) Q: How to avoid callback hells? A: modularization, control flow libraries, generators with promises, async/await Click To Tweet What are Promises? Promises are a concurrency primitive, first described in the 80s. Now they are part of most modern programming languages to make your life easier. Promises can help you better handle async operations. An example can be the following snippet, which after 100ms prints out the result string to the standard output. Also, note the catch, which can be used for error handling. Promises are chainable. new Promise((resolve, reject) => { setTimeout(() => { resolve('result') }, 100) }) .then(console.log) .catch(console.error) What tools can be used to assure consistent style? Why is it important? When working in a team, consistent style is important, so team members can modify more projects easily, without having to get used to a new style each time. Also, it can help eliminate programming issues using static analysis. Tools that can help: - ESLint - Standard If you’d like to be even more confident, I suggest you to learn and embrace the JavaScript Clean Coding principles as well! What's a stub? Name a use case! Stubs are functions/programs that simulate the behaviors of components/modules. Stubs provide canned answers to function calls made during test cases. An example can be writing a file, without actually doing so. var fs = require('fs') var writeFileStub = sinon.stub(fs, 'writeFile', function (path, data, cb) { return cb(null) }) expect(writeFileStub).to.be.called writeFileStub.restore() What's a test pyramid? Give an example! A test pyramid describes the ratio of how many unit tests, integration tests and end-to-end test you should write. An example for an HTTP API may look like this: - lots of low-level unit tests for models (dependencies are stubbed), - fewer integration tests, where you check how your models interact with each other (dependencies are not stubbed), - less end-to-end tests, where you call your actual endpoints (dependencies are not stubbed). What's your favorite HTTP framework and why? There is no right answer for this. The goal here is to understand how deeply one knows the framework she/he uses. Tell what are the pros and cons of picking that framework. When are background/worker processes useful? How can you handle worker tasks? Worker processes are extremely useful if you'd like to do data processing in the background, like sending out emails or processing images. There are lots of options for this like RabbitMQ or Kafka. How can you secure your HTTP cookies against XSS attacks? XSS occurs when the attacker injects executable JavaScript code into the HTML response. To mitigate these attacks, you have to set flags on the set-cookie HTTP header: - HttpOnly - this attribute is used to help prevent attacks such as cross-site scripting since it does not allow the cookie to be accessed via JavaScript. - secure - this attribute tells the browser to only send the cookie if the request is being sent over HTTPS. So it would look something like this: Set-Cookie: sid=<cookie-value>; HttpOnly. If you are using Express, with express-cookie session, it is working by default. How can you make sure your dependencies are safe? When writing Node.js applications, ending up with hundreds or even thousands of dependencies can easily happen. For example, if you depend on Express, you depend on 27 other modules directly, and of course on those dependencies' as well, so manually checking all of them is not an option! The only option is to automate the update / security audit of your dependencies. For that there are free and paid options: - npm outdated - Trace by RisingStack - NSP - GreenKeeper - Snyk Node.js Interview Puzzles The following part of the article is useful if you’d like to prepare for an interview that involves puzzles, or tricky questions. What's wrong with the code snippet? new Promise((resolve, reject) => { throw new Error('error') }).then(console.log) The Solution As there is no catch after the then. This way the error will be a silent one, there will be no indication of an error thrown. To fix it, you can do the following: new Promise((resolve, reject) => { throw new Error('error') }).then(console.log).catch(console.error) If you have to debug a huge codebase, and you don't know which Promise can potentially hide an issue, you can use the unhandledRejection hook. It will print out all unhandled Promise rejections. process.on('unhandledRejection', (err) => { console.log(err) }) What's wrong with the following code snippet? function checkApiKey (apiKeyFromDb, apiKeyReceived) { if (apiKeyFromDb === apiKeyReceived) { return true } return false } The Solution When you compare security credentials it is crucial that you don't leak any information, so you have to make sure that you compare them in fixed time. If you fail to do so, your application will be vulnerable to timing attacks. But why does it work like that? V8, the JavaScript engine used by Node.js, tries to optimize the code you run from a performance point of view. It starts comparing the strings character by character, and once a mismatch is found, it stops the comparison operation. So the longer the attacker has right from the password, the more time it takes. To solve this issue, you can use the npm module called cryptiles. function checkApiKey (apiKeyFromDb, apiKeyReceived) { return cryptiles.fixedTimeComparison(apiKeyFromDb, apiKeyReceived) } What's the output of following code snippet? Promise.resolve(1) .then((x) => x + 1) .then((x) => { throw new Error('My Error') }) .catch(() => 1) .then((x) => x + 1) .then((x) => console.log(x)) .catch(console.error) The Answer The short answer is 2 - however with this question I'd recommend asking the candidates to explain what will happen line-by-line to understand how they think. It should be something like this: 1. A new Promise is created, that will resolve to 1. 2. The resolved value is incremented with 1 (so it is 2 now), and returned instantly. 3. The resolved value is discarded, and an error is thrown. 4. The error is discarded, and a new value (1) is returned. 5. The execution did not stop after the catch, but before the exception was handled, it continued, and a new, incremented value (2) is returned. 6. The value is printed to the standard output. 7. This line won't run, as there was no exception. A day may work better than questions Spending at least half a day with your possible next hire is worth more than a thousand of these questions. Once you do that, you will better understand if the candidate is a good cultural fit for the company and has the right skill set for the job. Do you miss anything? Let us know! What was the craziest interview question you had to answer? What's your favorite question / puzzle to ask? Let us know in the comments! :) Follow @RisingStack TAGS: Node.js Tutorials for Beginners Learn Node.js Read more from us: - Node.js Best Practices - How to Become a Better Developer in 2017 - Yarn vs npm - The State of Node.js Package Managers Get early access to our posts /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */ var disqus_shortname = 'risingstackblog'; /* * * DON'T EDIT BELOW THIS LINE * * */ (function() { var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true; dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js'; (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq); })(); Please enable JavaScript to view the comments powered by Disqus. comments powered by Disqus Blog Best articles Node Hero Tutorials Node.js at Scale Tutorials Resources Node.js Maturity Checklist Trace by RisingStack - Node.js Monitoring Node.js is Enterprise Ready RisingStack Community Node.js Daily Connect RisingStack.com Twitter Github Facebook We ♥ Node.js © RisingStack, Inc. 2017 | RisingStack® and Trace by RisingStack® are registered trademarks of RisingStack, Inc. console.log(\"______ _ _ _____ _ _ \\n| ___ \\\\(_) (_) / ___|| | | | \\n| |_/ / _ ___ _ _ __ __ _ \\\\ `--. | |_ __ _ ___ | | __\\n| / | |/ __|| || '_ \\\\ / _` | `--. \\\\| __| / _` | / __|| |/ /\\n| |\\\\ \\\\ | |\\\\__ \\\\| || | | || (_| |/\\\\__/ /| |_ | (_| || (__ | < \\n\\\\_| \\\\_||_||___/|_||_| |_| \\\\__, |\\\\____/ \\\\__| \\\\__,_| \\\\___||_|\\\\_\\\\\\n __/ | \\n |___/ \\n\"); console.log(\"You like to look under the hood? Why not join us? https://risingstack.workable.com\") var _dcq = _dcq || []; var _dcs = _dcs || {}; _dcs.account = '3044742'; (function() { var dc = document.createElement('script'); dc.type = 'text/javascript'; dc.async = true; dc.src = '//resources.risingstack.com/js/drip.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(dc, s); })(); (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start': new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src= '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f); })(window,document,'script','dataLayer','GTM-KV8B2T'); var loadDeferredStyles = function() { var addStylesNode = document.getElementById(\"deferred-styles\"); var replacement = document.createElement(\"div\"); replacement.innerHTML = addStylesNode.textContent; document.body.appendChild(replacement) addStylesNode.parentElement.removeChild(addStylesNode); }; var raf = requestAnimationFrame || mozRequestAnimationFrame || webkitRequestAnimationFrame || msRequestAnimationFrame; if (raf) raf(function() { window.setTimeout(loadDeferredStyles, 0); }); else window.addEventListener('load', loadDeferredStyles);"},{"url":"https://blog.thoughtram.io/angular/2015/07/07/service-vs-factory-once-and-for-all.html","text":"Service vs Factory - Once and for all by thoughtram You are using an outdated browser. Please upgrade your browser to improve your experience. thoughtram Menu - Training - Code Review - Casts - Blog Service vs Factory - Once and for all by Pascal Precht on Jul 7, 2015, last updated on Nov 8, 2016 8 minute read Run your Machine Learning experiments in the browser Learn more Wait, what? Yet another article that answers the big question: Service vs Factory, what should I use? Yes, it seems that this is not needed anymore, since there are a ton of resources in the internet that discuss that topic. It turns out that this question still pops up every week or so on different channels, and even after reading the top ten answers on StackOverflow, it’s still not very clear. Despite that, it also appears that the current resources on the web don’t really promote the actual best practice, especially if we consider the recent movements of the web platform. ES6 I’m looking at you! This article explains once and for all the difference between services and factories and why we want to prefer services over factories. TABLE OF CONTENTS - The difference between services and factories - Which one to use? - Services allow us to use ES6 classes The difference between services and factories Okay, so what is the difference between a service and a factory in AngularJS? As we all know, we can define a service like this: app.service('MyService', function () { this.sayHello = function () { console.log('hello'); }; }); .service() is a method on our module that takes a name and a function that defines the service. Pretty straight forward. Once defined, we can inject and use that particular service in other components, like controllers, directives and filters, like this: app.controller('AppController', function (MyService) { MyService.sayHello(); // logs 'hello' }); Okay, clear. Now the same thing as a factory: app.factory('MyService', function () { return { sayHello: function () { console.log('hello'); } } }); Again, .factory() is a method on our module and it also takes a name and a function, that defines the factory. We can inject and use that thing exactly the same way we did with the service. Now what is the difference here? Well, you might see that instead of working with this in the factory, we’re returning an object literal. Why is that? It turns out, a service is a constructor function whereas a factory is not. Somewhere deep inside of this Angular world, there’s this code that calls Object.create() with the service constructor function, when it gets instantiated. However, a factory function is really just a function that gets called, which is why we have to return an object explicitly. To make that a bit more clear, we can simply take a look at the Angular source code. Here’s what the factory() function looks like: function factory(name, factoryFn, enforce) { return provider(name, { $get: enforce !== false ? enforceReturnValue(name, factoryFn) : factoryFn }); } It takes the name and the factory function that is passed and basically returns a provider with the same name, that has a $get method which is our factory function. So what is it with this provider thing? Well, whenever you ask the injector for a specific dependency, it basically asks the corresponding provider for an instance of that service, by calling the $get() method. That’s why $get() is required, when creating providers. In other words, if we inject MyService somewhere, what happens behind the scenes is: MyServiceProvider.$get(); // return the instance of the service Alright, factory functions just get called, what about the service code? Here’s another snippet: function service(name, constructor) { return factory(name, ['$injector', function($injector) { return $injector.instantiate(constructor); }]); } Oh look, it turns out that when we call service() it actually calls factory(). But it doesn’t just pass our service constructor function to the factory as it is. It passes a function that asks the injector to instantiate and object by the given constructor. In other words: a service calls a predefined factory, which ends up as $get() method on the corresponding provider. $injector.instantiate() is the method that ultimately calls Object.create() with the constructor function. That’s why we use this in services. Okay, so it turns out that, no matter what we use, service() or factory(), it’s always a factory that is called which creates a provider for our service. Which brings us to the mostly asked question in the Angular history: Which one should I use? Which one to use? Asking that question on the internet takes us to a couple of articles and StackOverflow answers. The first is this answer. It says: “Basically the difference between the service and factory is as follows:” app.service('myService', function() { // service is just a constructor function // that will be called with 'new' this.sayHello = function(name) { return \"Hi \" + name + \"!\"; }; }); app.factory('myFactory', function() { // factory returns an object // you can run some code before return { sayHello : function(name) { return \"Hi \" + name + \"!\"; } } }); We now already know what happens behind the scenes, but this answer adds another comment. It says we can run code before we return our object literal. That basically allows us to do some configuration stuff or conditionally create an object or not, which doesn’t seem to be possible when creating a service directly, which is why most resources recommend to use factories over services, but the reasoning is inappreciable. What if I told you, we can do the exact same thing with services too? Yeap, correct. A service is a constructor function, however, that doesn’t prevent us from doing additional work and return object literals. In fact, constructor functions in JavaScript can return whatever they want. So we can take our service code and write it in a way that it basically does the exact same thing as our factory: app.service('MyService', function () { // we could do additional work here too return { sayHello: function () { console.log('hello'); }; } }); Hoppla, so what now? We just realised that, depending on how we write our services, there’s no difference between the two at all anymore. The big question remains: Which one should we use? Services allow us to use ES6 classes Of course, writing services in that way is kind of contra productive, since it’s called as a constructor function, so it should also be used like one. Is there any advantage over the other at all then? Yes, there is. It turns out that it’s actually better to use services where possible, when it comes to migrating to ES6. The reason for that is simply that a service is a constructor function and a factory is not. Working with constructor functions in ES5 allows us to easily use ES6 classes when we migrate to ES6. For example, we can take our code and rewrite it in ES6 like this: class MyService { sayHello() { console.log('hello'); } } app.service('MyService', MyService); An ES6 class is really just a constructor function in ES5. We wrote about that in Using ES6 with Angular today, if you haven’t read that article yet, I’d recommend checking that out. With factories, this is not possible because they are simply called as functions. I hope this article made everything clear and encourages people to not use factories over services, if they don’t know what to use. This and more you learn in our Angular Master Class! Need a private training? Get customized training for your corporation Request quote → Get updates on new articles and trainings. Join over 1400 other developers who get our content first. Share on Facebook Share on Twitter Share on Google+ Author Pascal Precht Pascal is a front-end engineer and a Angular Developer Expert nominated by Google. He created the angular-translate module, is an Angular contributor and also part of the Angular Docs Authoring team. Twitter GitHub Related Posts - Exploring Angular 1.5: Lifecycle Hooks Angular 1.5 is finally out! This article discusses the new lifecycle hooks in Angular. - Sponsoring AngularConnect. Again. Today we are very happy to announce that we're going to sponsor AngularConnect - again! We're also going to run... - ngMessageFormat - Angular's unheard feature Angular 1.5 is pretty much around the corner. It turns out that there's a feature that already landed in Angular... - Multiple Transclusion and named Slots One of those bigger features in the 1.5 release is multiple transclusion via named slots. In this article we're going... - Taking Angular Master Class to the next level We always collect feedback to make our material and trainings even better. We listened. Here's what we did. - ngMessages revisited With the release of Angular 1.4, a few changes landed that affect the ngMessages module. This article discusses what has... This website was created in collaboration with Tim Cheung and Tim Hartmann. Code of Conduct • Legal notice © 2014-2017 thoughtram GmbH (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-51360648-2', 'auto'); ga('send', 'pageview'); var form = document.getElementById('search-form'); var eventCta = document.getElementById('event-cta'); if (eventCta) { eventCta.addEventListener('click', function (event) { event.preventDefault(); setTimeout(clickLink, 1000); function clickLink() { window.location.replace(eventCta.getAttribute('href')); } ga('send', 'event', { eventCategory: 'Event Link', eventAction: 'click', eventLabel: eventCta.getAttribute('title'), hitCallback: clickLink }); }); } if (form) { var searchTerm = document.getElementById('search-term'); form.addEventListener('submit', function(event) { event.preventDefault(); var formSubmitted = false; setTimeout(submitForm, 1000); function submitForm() { if (!formSubmitted) { formSubmitted = true; form.submit(); } } ga('send', 'event', { eventCategory: 'Search Form', eventAction: 'submit', eventLabel: searchTerm.value, hitCallback: submitForm }); }); }"},{"url":"https://www.w3schools.com/html/html_intro.asp","text":"Introduction to HTML a:hover,a:active{color:#4CAF50} table.w3-table-all{margin:20px 0} /*OPPSETT AV TOP, TOPNAV, SIDENAV, MAIN, RIGHT OG FOOTER:*/ .top { position:relative; background-color:#ffffff; height:68px; padding-top:20px; line-height:50px; overflow:hidden; z-index:2; } .w3schools-logo { font-family:fontawesome; text-decoration:none; line-height:1; -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; font-size:37px; letter-spacing:3px; color:#555555; display:block; position:absolute; top:17px; } .w3schools-logo .dotcom {color:#4CAF50} .topnav { position:relative; z-index:2; font-size:17px; background-color:#5f5f5f; color:#f1f1f1; width:100%; padding:0; letter-spacing:1px; font-family:\"Segoe UI\",Arial,sans-serif; } .topnav a{ padding:10px 15px 9px 15px !important; } .topnav .w3-bar a:hover{ background-color:#000000 !important; color:#ffffff !important; } .topnav .w3-bar a.active { background-color:#4CAF50; color:#ffffff; } a.topnav-icons { width:52px !important; font-size:20px !important; padding-top:11px !important; padding-bottom:13px !important; } a.topnav-icons.fa-home {font-size:22px !important} a.topnav-icons.fa-menu {font-size:22px !important} a.topnav-localicons { font-size:20px !important; padding-top:6px !important; padding-bottom:12px !important; } i.fa-caret-down,i.fa-caret-up{width:10px} #sidenav h2 { font-size:21px; padding-left:16px; margin:-4px 0 4px 0; width:204px; } #sidenav a {font-family:\"Segoe UI\",Arial,sans-serif;text-decoration:none;display:block;padding:2px 1px 1px 16px} #sidenav a:hover {color:#000000;background-color:#cccccc;} #sidenav a.active {background-color:#4CAF50;color:#ffffff} #leftmenuinner { position:fixed; top:0; padding-top:112px; padding-bottom:0; height:100%; width:220px; background-color:transparent; } #leftmenuinnerinner { height:100%; width:100%; overflow-y:scroll; overflow-x:hidden; padding-top:20px; } #main {padding:16px} #mainLeaderboard {height:90px} #right {text-align:center;padding:16px 16px 0 0} #right a {text-decoration:none} #right a:hover {text-decoration:underline} #skyscraper {min-height:600px} .sidesection {margin-bottom:32px;} .bottomad {padding:0 16px 16px 0;float:left;width:auto;} .footer a {text-decoration:none;} .footer a:hover{text-decoration:underline;} #nav_tutorials,#nav_references,#nav_examples{-webkit-overflow-scrolling:touch;overflow:auto;} #nav_tutorials::-webkit-scrollbar,#nav_references::-webkit-scrollbar,#nav_examples::-webkit-scrollbar {width: 12px;} #nav_tutorials::-webkit-scrollbar-track,#nav_references::-webkit-scrollbar-track,#nav_examples::-webkit-scrollbar-track {background:#555555;} #nav_tutorials::-webkit-scrollbar-thumb,#nav_references::-webkit-scrollbar-thumb,#nav_examples::-webkit-scrollbar-thumb {background: #999999;} #nav_tutorials,#nav_references,#nav_examples { display:none; letter-spacing:0; margin-top:44px; } #nav_tutorials a,#nav_references a,#nav_examples a{ padding:2px 0 !important; } .w3-example{background-color:#f1f1f1;padding:0.01em 16px;margin:20px 0;box-shadow:0 2px 4px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12)!important} .nextprev a {font-size:17px;border:1px solid #cccccc;} .nextprev a:link,.nextprev a:visited {background-color:#ffffff;color:#000000;} .nextprev a.w3-right {background-color:#4CAF50;color:#ffffff;border-color:#4CAF50} .w3-theme {color:#fff !important;background-color:#73AD21 !important;background-color:#4CAF50 !important} .w3-theme-border {border-color:#4CAF50 !important} .sharethis a:hover {color:inherit;} .fa-facebook-square,.fa-twitter-square,.fa-google-plus-square {padding:0 8px;} .fa-facebook-square:hover, .fa-thumbs-o-up:hover {color:#3B5998;} .fa-twitter-square:hover {color:#55acee;} .fa-google-plus-square:hover {color:#dd4b39;} #google_translate_element img {margin-bottom:-1px;} #googleSearch {color:#000000;} #googleSearch a {padding:0 !important;} .searchdiv {max-width:400px;margin:auto;text-align:left;font-size:16px} div.cse .gsc-control-cse, div.gsc-control-cse {background-color:transparent;border:none;padding:6px;margin:0px} td.gsc-search-button input.gsc-search-button {background-color:#4CAF50;border-color:#4CAF50} td.gsc-search-button input.gsc-search-button:hover {background-color:#46a049;} input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus, .gsc-search-button { box-sizing:content-box; line-height:normal;} .gsc-tabsArea div {overflow:visible;} /*\"nullstille\" w3css:*/ .w3-main{transition:margin-left 0s;} /*\"nullstilling\" slutt*/ @media (min-width:1675px) { #main {width:79%} #right {width:21%} } @media (max-width:992px) { .top {height:100px} .top img {display:block;margin:auto;} .top .w3schools-logo {position:relative;top:0;width:100%;text-align:center;margin:auto} .toptext {width:100%;text-align:center} #sidenav {width:260px;} #sidenav h2 {font-size:26px;width:100%;} #sidenav a {padding:3px 2px 3px 24px;font-size:17px} #leftmenuinner { box-shadow:0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23); overflow:auto; -webkit-overflow-scrolling:touch; height:100%; position:relative; width:auto; padding-top:0; background-color:#f1f1f1; } #leftmenuinnerinner {overflow-y:scroll} .bottomad {float:none;text-align:center} #skyscraper {min-height:60px} } @media screen and (max-width:600px) { .top {height:68px} .toptext {display:none} } @font-face { font-family:'fontawesome'; src: url('../lib/fonts/fontawesome.eot?14663396'); src:url('../lib/fonts/fontawesome.eot?14663396#iefix') format('embedded-opentype'), url('../lib/fonts/fontawesome.woff?14663396') format('woff'), url('../lib/fonts/fontawesome.ttf?14663396') format('truetype'), url('../lib/fonts/fontawesome.svg?14663396#fontawesome') format('svg'); font-weight:normal; font-style:normal; } .fa { display:inline-block; font:normal normal normal 14px/1 FontAwesome; font-size:inherit; text-rendering:auto; -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; transform:translate(0, 0); } .fa-2x { font-size:2em; } .fa-home:before {content:'\\e800';} .fa-menu:before {content: '\\f0c9';} .fa-globe:before {content:'\\e801';} .fa-search:before {content:'\\e802'; } .fa-thumbs-o-up:before {content:'\\e803';} .fa-left-open:before {content:'\\e804';} .fa-right-open:before {content:'\\e805';} .fa-facebook-square:before {content:'\\e806';} .fa-google-plus-square:before {content:'\\e807';} .fa-twitter-square:before {content:'\\e808';} .fa-caret-down:before {content:'\\e809';} .fa-caret-up:before {content:'\\e80a';} span.marked, span.deprecated { color:#e80000; background-color:transparent; } .intro {font-size:16px} .w3-btn, .w3-btn:link, .w3-btn:visited {color:#FFFFFF;background-color:#4CAF50} a.w3-btn[href*=\"exercise.asp\"] {margin:10px 5px 0 0} a.btnplayit,a.btnplayit:link,a.btnplayit:visited {background-color:#FFAD33;padding:1px 10px 2px 10px} a.btnplayit:hover,a.btnplayit:active {background-color:#ffffff;color:#FFAD33} a.btnplayit:hover {box-shadow:0 4px 8px 0 rgba(0,0,0,0.2);} a.btnsmall:link,a.btnsmall:visited,a.btnsmall:active,a.btnsmall:hover { float:right;padding:1px 10px 2px 10px;font:15px Verdana, sans-serif;} a.btnsmall:hover {box-shadow:0 4px 8px 0 rgba(0,0,0,0.2);} a.btnsmall:active,a.btnsmall:hover {color:#4CAF50;background-color:#ffffff} @media screen and (max-width:700px) { #mainLeaderboard {height:60px} #div-gpt-ad-1422003450156-0 {float:none;margin-left:auto;margin-right:auto} #div-gpt-ad-1422003450156-3 {float:none;margin-left:auto;margin-right:auto} } @media (max-width:1600px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(16){display:none;}} @media (max-width:1500px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(12){display:none;}} @media (max-width:1410px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(11){display:none;}} @media (max-width:1350px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(10){display:none;}} @media (max-width:1230px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(9){display:none;}} @media (max-width:1140px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(8){display:none;}} @media (max-width:1000px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(7){display:none;}} @media (max-width:992px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(6){display:none;}} @media (max-width:930px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(17){display:none;}} @media (max-width:800px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(18){display:none;}} @media (max-width:650px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(5){display:none;} #topnav .w3-bar:nth-of-type(1) a:nth-of-type(15){display:none;}} @media (max-width:460px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(4){display:none;}} @media (max-width:400px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(3){display:none;}} .w3-note{background-color:#ffffcc;border-left:6px solid #ffeb3b} .w3-warning{background-color:#ffdddd;border-left:6px solid #f44336} .w3-info{background-color:#ddffdd;border-left:6px solid #4CAF50} hr[id^=\"ez-insert-after-placeholder\"] {margin-top: 0;} (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','https://www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-3855518-1', 'auto'); ga('require', 'displayfeatures'); ga('send', 'pageview'); var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; (function() { var gads = document.createElement('script'); gads.async = true; gads.type = 'text/javascript'; gads.src = 'https://www.googletagservices.com/tag/js/gpt.js'; var node = document.getElementsByTagName('script')[0]; node.parentNode.insertBefore(gads, node); })(); // GPT slots var gptAdSlots = []; googletag.cmd.push(function() { var leaderMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [320, 50]). // Vertical Tablet ad addSize([480, 0], [468, 60]). // Horizontal Tablet addSize([780, 0], [728, 90]). // Small Desktop addSize([993, 0], [468, 60]). // Normal Desktop addSize([1150, 0], [728, 90]). // Large Desktop and bigger ad addSize([1425, 0], [[728, 90], [970, 90]]).build(); gptAdSlots[0] = googletag.defineSlot('/16833175/MainLeaderboard', [[728, 90], [970, 90]], 'div-gpt-ad-1422003450156-2'). defineSizeMapping(leaderMapping).addService(googletag.pubads()); var skyMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [320, 50]). // Tablet ad addSize([975, 0], [120, 600]). // Desktop addSize([1135, 0], [160, 600]). // Large Desktop addSize([1675, 0], [[160, 600], [300, 600], [300, 1050]]).build(); gptAdSlots[1] = googletag.defineSlot('/16833175/WideSkyScraper', [[160, 600], [300, 600], [300, 1050]], 'div-gpt-ad-1422003450156-5'). defineSizeMapping(skyMapping).addService(googletag.pubads()); var stickyMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], []). // Tablet ad addSize([975, 0], [120, 600]). // Desktop addSize([1135, 0], [160, 600]). // Large Desktop addSize([1675, 0], [[160, 600], [300, 600], [300, 250]]).build(); gptAdSlots[4] = googletag.defineSlot('/16833175/StickySkyScraper', [[300, 600], [120, 600], [300, 250], [160, 600]], 'div-gpt-ad-1472547360578-0'). defineSizeMapping(stickyMapping).addService(googletag.pubads()); var mcontMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [[300, 250], [336, 280], [320, 50]]). // Vertical Tablet ad addSize([490, 0], [[300, 250], [336, 280], [468, 60]]). // Horizontal Tablet addSize([750, 0], [728, 90]). // Small Desktop addSize([993, 0], [[300, 250], [336, 280], [468, 60]]). // Normal Desktop addSize([1135, 0], [728, 90]). // Large Desktop and bigger ad addSize([1440, 0], [[728, 90], [970, 90], [970, 250]]).build(); gptAdSlots[5] = googletag.defineSlot('/16833175/MidContent', [[300, 250], [336, 280]], 'div-gpt-ad-1493883843099-0'). defineSizeMapping(mcontMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); var bmrMapping = googletag.sizeMapping(). // Smaller addSize([0, 0], [[300, 250], [336, 280]]). // Large Desktop addSize([1240, 0], [[300, 250], [336, 280], [970, 250]]).build(); gptAdSlots[2] = googletag.defineSlot('/16833175/BottomMediumRectangle', [[300, 250], [336, 280], [970, 250]], 'div-gpt-ad-1422003450156-0'). defineSizeMapping(bmrMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); var rbmrMapping = googletag.sizeMapping(). // Smaller addSize([0, 0], []). // Large Desktop addSize([975, 0], [[300, 250], [336, 280]]).build(); gptAdSlots[3] = googletag.defineSlot('/16833175/RightBottomMediumRectangle', [[300, 250], [336, 280]], 'div-gpt-ad-1422003450156-3'). defineSizeMapping(rbmrMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); googletag.pubads().setTargeting(\"content\",(function () { var folder = location.pathname; folder = folder.replace(\"/\", \"\"); folder = folder.substr(0, folder.indexOf(\"/\")); return folder; })() ); googletag.enableServices(); }); var stickyadstatus = \"\"; function fix_stickyad() { var elem = document.getElementById(\"stickyadcontainer\"); if (!elem) {return false;} if (document.getElementById(\"skyscraper\")) { var skyWidth = Number(w3_getStyleValue(document.getElementById(\"skyscraper\"), \"width\").replace(\"px\", \"\")); } else { var skyWidth = Number(w3_getStyleValue(document.getElementById(\"right\"), \"width\").replace(\"px\", \"\")); } elem.style.width = skyWidth + \"px\"; if (window.innerWidth <= 992) { elem.style.position = \"\"; elem.style.top = stickypos + \"px\"; return false; } var stickypos = document.getElementById(\"stickypos\").offsetTop; var docTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop; var adHeight = Number(w3_getStyleValue(elem, \"height\").replace(\"px\", \"\")); if (stickyadstatus == \"\") { if ((stickypos - docTop) < 60) { elem.style.position = \"fixed\"; elem.style.top = \"60px\"; stickyadstatus = \"sticky\"; } } else { if ((docTop + 60) - stickypos document.getElementById(\"footer\").offsetTop) { elem.style.position = \"absolute\"; elem.style.top = (document.getElementById(\"footer\").offsetTop - adHeight) + \"px\"; } else { elem.style.position = \"fixed\"; elem.style.top = \"60px\"; stickyadstatus = \"sticky\"; } } } function w3_getStyleValue(elmnt,style) { if (window.getComputedStyle) { return window.getComputedStyle(elmnt,null).getPropertyValue(style); } else { return elmnt.currentStyle[style]; } } w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP JQUERY ANGULAR W3.CSS XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Learn AppML Server Side Learn SQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference CSS CSS Reference CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 Server Side PHP Reference SQL Reference ASP Reference × HTML/CSS HTML Examples CSS Examples W3.CSS Examples W3.CSS Templates Bootstrap Examples JavaScript JavaScript Examples HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × HTML5 Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors HTML CSS HTML Links HTML Images HTML Tables HTML Lists HTML Blocks HTML Classes HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Entities HTML Symbols HTML Charset HTML URL Encode HTML XHTML HTML Forms HTML Forms HTML Form Elements HTML Input Types HTML Input Attributes HTML5 HTML5 Intro HTML5 Support HTML5 New Elements HTML5 Semantics HTML5 Migration HTML5 Style Guide HTML Graphics HTML Canvas HTML SVG HTML Google Maps HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Geolocation HTML Drag/Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Quiz HTML Exercises HTML Certificate HTML Summary HTML References HTML Tag List HTML Attributes HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-2'); }); HTML Introduction ❮ Previous Next ❯ What is HTML? HTML is the standard markup language for creating Web pages. - HTML stands for Hyper Text Markup Language - HTML describes the structure of Web pages using markup - HTML elements are the building blocks of HTML pages - HTML elements are represented by tags - HTML tags label pieces of content such as \"heading\", \"paragraph\", \"table\", and so on - Browsers do not display the HTML tags, but use them to render the content of the page A Simple HTML Document Example <!DOCTYPE html> <html> <head> <title>Page Title</title> </head> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> Try it Yourself » Example Explained - The <!DOCTYPE html> declaration defines this document to be HTML5 - The <html> element is the root element of an HTML page - The <head> element contains meta information about the document - The <title> element specifies a title for the document - The <body> element contains the visible page content - The <h1> element defines a large heading - The <p> element defines a paragraph HTML Tags HTML tags are element names surrounded by angle brackets: <tagname>content goes here...</tagname> - HTML tags normally come in pairs like <p> and </p> - The first tag in a pair is the start tag, the second tag is the end tag - The end tag is written like the start tag, but with a forward slash inserted before the tag name Tip: The start tag is also called the opening tag, and the end tag the closing tag. googletag.cmd.push(function() { googletag.display('div-gpt-ad-1493883843099-0'); }); Web Browsers The purpose of a web browser (Chrome, IE, Firefox, Safari) is to read HTML documents and display them. The browser does not display the HTML tags, but uses them to determine how to display the document: HTML Page Structure Below is a visualization of an HTML page structure: <html> <head> <title>Page title</title> </head> <body> <h1>This is a heading</h1> <p>This is a paragraph.</p> <p>This is another paragraph.</p> </body> </html> Note: Only the content inside the <body> section (the white area above) is displayed in a browser. The <!DOCTYPE> Declaration The <!DOCTYPE> declaration represents the document type, and helps browsers to display web pages correctly. It must only appear once, at the top of the page (before any HTML tags). The <!DOCTYPE> declaration is not case sensitive. The <!DOCTYPE> declaration for HTML5 is: <!DOCTYPE html> HTML Versions Since the early days of the web, there have been many versions of HTML: Version Year HTML 1991 HTML 2.0 1995 HTML 3.2 1997 HTML 4.01 1999 XHTML 2000 HTML5 2014 ❮ Previous Next ❯ googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-5'); }); COLOR PICKER HOW TO Tabs Dropdowns Accordions Convert Weights Animated Buttons Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE <!-- try{ loc=location.pathname; if (loc.toUpperCase().indexOf(\".ASP\")<0) loc=loc+\"default.asp\"; txt=''; txt=txt+''; txt=txt+' CERTIFICATES HTML, CSS, JavaScript, PHP, jQuery, Bootstrap and XML. Read More » 2200) { googletag.cmd.push(function() { googletag.display('div-gpt-ad-1472547360578-0'); }); } window.addEventListener(\"scroll\", fix_stickyad); window.addEventListener(\"resize\", fix_stickyad); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-0'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-3'); }); REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Angular Tutorial XML Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Browser Statistics PHP Reference HTML Colors HTML Character Sets jQuery Reference AngularJS Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples W3.CSS Examples HTML DOM Examples PHP Examples ASP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2017 by Refsnes Data. All Rights Reserved. Powered by W3.CSS."},{"url":"https://www.w3schools.com/html/html_basic.asp","text":"HTML Basic a:hover,a:active{color:#4CAF50} table.w3-table-all{margin:20px 0} /*OPPSETT AV TOP, TOPNAV, SIDENAV, MAIN, RIGHT OG FOOTER:*/ .top { position:relative; background-color:#ffffff; height:68px; padding-top:20px; line-height:50px; overflow:hidden; z-index:2; } .w3schools-logo { font-family:fontawesome; text-decoration:none; line-height:1; -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; font-size:37px; letter-spacing:3px; color:#555555; display:block; position:absolute; top:17px; } .w3schools-logo .dotcom {color:#4CAF50} .topnav { position:relative; z-index:2; font-size:17px; background-color:#5f5f5f; color:#f1f1f1; width:100%; padding:0; letter-spacing:1px; font-family:\"Segoe UI\",Arial,sans-serif; } .topnav a{ padding:10px 15px 9px 15px !important; } .topnav .w3-bar a:hover{ background-color:#000000 !important; color:#ffffff !important; } .topnav .w3-bar a.active { background-color:#4CAF50; color:#ffffff; } a.topnav-icons { width:52px !important; font-size:20px !important; padding-top:11px !important; padding-bottom:13px !important; } a.topnav-icons.fa-home {font-size:22px !important} a.topnav-icons.fa-menu {font-size:22px !important} a.topnav-localicons { font-size:20px !important; padding-top:6px !important; padding-bottom:12px !important; } i.fa-caret-down,i.fa-caret-up{width:10px} #sidenav h2 { font-size:21px; padding-left:16px; margin:-4px 0 4px 0; width:204px; } #sidenav a {font-family:\"Segoe UI\",Arial,sans-serif;text-decoration:none;display:block;padding:2px 1px 1px 16px} #sidenav a:hover {color:#000000;background-color:#cccccc;} #sidenav a.active {background-color:#4CAF50;color:#ffffff} #leftmenuinner { position:fixed; top:0; padding-top:112px; padding-bottom:0; height:100%; width:220px; background-color:transparent; } #leftmenuinnerinner { height:100%; width:100%; overflow-y:scroll; overflow-x:hidden; padding-top:20px; } #main {padding:16px} #mainLeaderboard {height:90px} #right {text-align:center;padding:16px 16px 0 0} #right a {text-decoration:none} #right a:hover {text-decoration:underline} #skyscraper {min-height:600px} .sidesection {margin-bottom:32px;} .bottomad {padding:0 16px 16px 0;float:left;width:auto;} .footer a {text-decoration:none;} .footer a:hover{text-decoration:underline;} #nav_tutorials,#nav_references,#nav_examples{-webkit-overflow-scrolling:touch;overflow:auto;} #nav_tutorials::-webkit-scrollbar,#nav_references::-webkit-scrollbar,#nav_examples::-webkit-scrollbar {width: 12px;} #nav_tutorials::-webkit-scrollbar-track,#nav_references::-webkit-scrollbar-track,#nav_examples::-webkit-scrollbar-track {background:#555555;} #nav_tutorials::-webkit-scrollbar-thumb,#nav_references::-webkit-scrollbar-thumb,#nav_examples::-webkit-scrollbar-thumb {background: #999999;} #nav_tutorials,#nav_references,#nav_examples { display:none; letter-spacing:0; margin-top:44px; } #nav_tutorials a,#nav_references a,#nav_examples a{ padding:2px 0 !important; } .w3-example{background-color:#f1f1f1;padding:0.01em 16px;margin:20px 0;box-shadow:0 2px 4px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12)!important} .nextprev a {font-size:17px;border:1px solid #cccccc;} .nextprev a:link,.nextprev a:visited {background-color:#ffffff;color:#000000;} .nextprev a.w3-right {background-color:#4CAF50;color:#ffffff;border-color:#4CAF50} .w3-theme {color:#fff !important;background-color:#73AD21 !important;background-color:#4CAF50 !important} .w3-theme-border {border-color:#4CAF50 !important} .sharethis a:hover {color:inherit;} .fa-facebook-square,.fa-twitter-square,.fa-google-plus-square {padding:0 8px;} .fa-facebook-square:hover, .fa-thumbs-o-up:hover {color:#3B5998;} .fa-twitter-square:hover {color:#55acee;} .fa-google-plus-square:hover {color:#dd4b39;} #google_translate_element img {margin-bottom:-1px;} #googleSearch {color:#000000;} #googleSearch a {padding:0 !important;} .searchdiv {max-width:400px;margin:auto;text-align:left;font-size:16px} div.cse .gsc-control-cse, div.gsc-control-cse {background-color:transparent;border:none;padding:6px;margin:0px} td.gsc-search-button input.gsc-search-button {background-color:#4CAF50;border-color:#4CAF50} td.gsc-search-button input.gsc-search-button:hover {background-color:#46a049;} input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus, .gsc-search-button { box-sizing:content-box; line-height:normal;} .gsc-tabsArea div {overflow:visible;} /*\"nullstille\" w3css:*/ .w3-main{transition:margin-left 0s;} /*\"nullstilling\" slutt*/ @media (min-width:1675px) { #main {width:79%} #right {width:21%} } @media (max-width:992px) { .top {height:100px} .top img {display:block;margin:auto;} .top .w3schools-logo {position:relative;top:0;width:100%;text-align:center;margin:auto} .toptext {width:100%;text-align:center} #sidenav {width:260px;} #sidenav h2 {font-size:26px;width:100%;} #sidenav a {padding:3px 2px 3px 24px;font-size:17px} #leftmenuinner { box-shadow:0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23); overflow:auto; -webkit-overflow-scrolling:touch; height:100%; position:relative; width:auto; padding-top:0; background-color:#f1f1f1; } #leftmenuinnerinner {overflow-y:scroll} .bottomad {float:none;text-align:center} #skyscraper {min-height:60px} } @media screen and (max-width:600px) { .top {height:68px} .toptext {display:none} } @font-face { font-family:'fontawesome'; src: url('../lib/fonts/fontawesome.eot?14663396'); src:url('../lib/fonts/fontawesome.eot?14663396#iefix') format('embedded-opentype'), url('../lib/fonts/fontawesome.woff?14663396') format('woff'), url('../lib/fonts/fontawesome.ttf?14663396') format('truetype'), url('../lib/fonts/fontawesome.svg?14663396#fontawesome') format('svg'); font-weight:normal; font-style:normal; } .fa { display:inline-block; font:normal normal normal 14px/1 FontAwesome; font-size:inherit; text-rendering:auto; -webkit-font-smoothing:antialiased; -moz-osx-font-smoothing:grayscale; transform:translate(0, 0); } .fa-2x { font-size:2em; } .fa-home:before {content:'\\e800';} .fa-menu:before {content: '\\f0c9';} .fa-globe:before {content:'\\e801';} .fa-search:before {content:'\\e802'; } .fa-thumbs-o-up:before {content:'\\e803';} .fa-left-open:before {content:'\\e804';} .fa-right-open:before {content:'\\e805';} .fa-facebook-square:before {content:'\\e806';} .fa-google-plus-square:before {content:'\\e807';} .fa-twitter-square:before {content:'\\e808';} .fa-caret-down:before {content:'\\e809';} .fa-caret-up:before {content:'\\e80a';} span.marked, span.deprecated { color:#e80000; background-color:transparent; } .intro {font-size:16px} .w3-btn, .w3-btn:link, .w3-btn:visited {color:#FFFFFF;background-color:#4CAF50} a.w3-btn[href*=\"exercise.asp\"] {margin:10px 5px 0 0} a.btnplayit,a.btnplayit:link,a.btnplayit:visited {background-color:#FFAD33;padding:1px 10px 2px 10px} a.btnplayit:hover,a.btnplayit:active {background-color:#ffffff;color:#FFAD33} a.btnplayit:hover {box-shadow:0 4px 8px 0 rgba(0,0,0,0.2);} a.btnsmall:link,a.btnsmall:visited,a.btnsmall:active,a.btnsmall:hover { float:right;padding:1px 10px 2px 10px;font:15px Verdana, sans-serif;} a.btnsmall:hover {box-shadow:0 4px 8px 0 rgba(0,0,0,0.2);} a.btnsmall:active,a.btnsmall:hover {color:#4CAF50;background-color:#ffffff} @media screen and (max-width:700px) { #mainLeaderboard {height:60px} #div-gpt-ad-1422003450156-0 {float:none;margin-left:auto;margin-right:auto} #div-gpt-ad-1422003450156-3 {float:none;margin-left:auto;margin-right:auto} } @media (max-width:1600px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(16){display:none;}} @media (max-width:1500px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(12){display:none;}} @media (max-width:1410px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(11){display:none;}} @media (max-width:1350px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(10){display:none;}} @media (max-width:1230px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(9){display:none;}} @media (max-width:1140px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(8){display:none;}} @media (max-width:1000px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(7){display:none;}} @media (max-width:992px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(6){display:none;}} @media (max-width:930px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(17){display:none;}} @media (max-width:800px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(18){display:none;}} @media (max-width:650px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(5){display:none;} #topnav .w3-bar:nth-of-type(1) a:nth-of-type(15){display:none;}} @media (max-width:460px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(4){display:none;}} @media (max-width:400px) {#topnav .w3-bar:nth-of-type(1) a:nth-of-type(3){display:none;}} .w3-note{background-color:#ffffcc;border-left:6px solid #ffeb3b} .w3-warning{background-color:#ffdddd;border-left:6px solid #f44336} .w3-info{background-color:#ddffdd;border-left:6px solid #4CAF50} hr[id^=\"ez-insert-after-placeholder\"] {margin-top: 0;} (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','https://www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-3855518-1', 'auto'); ga('require', 'displayfeatures'); ga('send', 'pageview'); var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; (function() { var gads = document.createElement('script'); gads.async = true; gads.type = 'text/javascript'; gads.src = 'https://www.googletagservices.com/tag/js/gpt.js'; var node = document.getElementsByTagName('script')[0]; node.parentNode.insertBefore(gads, node); })(); // GPT slots var gptAdSlots = []; googletag.cmd.push(function() { var leaderMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [320, 50]). // Vertical Tablet ad addSize([480, 0], [468, 60]). // Horizontal Tablet addSize([780, 0], [728, 90]). // Small Desktop addSize([993, 0], [468, 60]). // Normal Desktop addSize([1150, 0], [728, 90]). // Large Desktop and bigger ad addSize([1425, 0], [[728, 90], [970, 90]]).build(); gptAdSlots[0] = googletag.defineSlot('/16833175/MainLeaderboard', [[728, 90], [970, 90]], 'div-gpt-ad-1422003450156-2'). defineSizeMapping(leaderMapping).addService(googletag.pubads()); var skyMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [320, 50]). // Tablet ad addSize([975, 0], [120, 600]). // Desktop addSize([1135, 0], [160, 600]). // Large Desktop addSize([1675, 0], [[160, 600], [300, 600], [300, 1050]]).build(); gptAdSlots[1] = googletag.defineSlot('/16833175/WideSkyScraper', [[160, 600], [300, 600], [300, 1050]], 'div-gpt-ad-1422003450156-5'). defineSizeMapping(skyMapping).addService(googletag.pubads()); var stickyMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], []). // Tablet ad addSize([975, 0], [120, 600]). // Desktop addSize([1135, 0], [160, 600]). // Large Desktop addSize([1675, 0], [[160, 600], [300, 600], [300, 250]]).build(); gptAdSlots[4] = googletag.defineSlot('/16833175/StickySkyScraper', [[300, 600], [120, 600], [300, 250], [160, 600]], 'div-gpt-ad-1472547360578-0'). defineSizeMapping(stickyMapping).addService(googletag.pubads()); var mcontMapping = googletag.sizeMapping(). // Mobile ad addSize([0, 0], [[300, 250], [336, 280], [320, 50]]). // Vertical Tablet ad addSize([490, 0], [[300, 250], [336, 280], [468, 60]]). // Horizontal Tablet addSize([750, 0], [728, 90]). // Small Desktop addSize([993, 0], [[300, 250], [336, 280], [468, 60]]). // Normal Desktop addSize([1135, 0], [728, 90]). // Large Desktop and bigger ad addSize([1440, 0], [[728, 90], [970, 90], [970, 250]]).build(); gptAdSlots[5] = googletag.defineSlot('/16833175/MidContent', [[300, 250], [336, 280]], 'div-gpt-ad-1493883843099-0'). defineSizeMapping(mcontMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); var bmrMapping = googletag.sizeMapping(). // Smaller addSize([0, 0], [[300, 250], [336, 280]]). // Large Desktop addSize([1240, 0], [[300, 250], [336, 280], [970, 250]]).build(); gptAdSlots[2] = googletag.defineSlot('/16833175/BottomMediumRectangle', [[300, 250], [336, 280], [970, 250]], 'div-gpt-ad-1422003450156-0'). defineSizeMapping(bmrMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); var rbmrMapping = googletag.sizeMapping(). // Smaller addSize([0, 0], []). // Large Desktop addSize([975, 0], [[300, 250], [336, 280]]).build(); gptAdSlots[3] = googletag.defineSlot('/16833175/RightBottomMediumRectangle', [[300, 250], [336, 280]], 'div-gpt-ad-1422003450156-3'). defineSizeMapping(rbmrMapping).setCollapseEmptyDiv(true).addService(googletag.pubads()); googletag.pubads().setTargeting(\"content\",(function () { var folder = location.pathname; folder = folder.replace(\"/\", \"\"); folder = folder.substr(0, folder.indexOf(\"/\")); return folder; })() ); googletag.enableServices(); }); var stickyadstatus = \"\"; function fix_stickyad() { var elem = document.getElementById(\"stickyadcontainer\"); if (!elem) {return false;} if (document.getElementById(\"skyscraper\")) { var skyWidth = Number(w3_getStyleValue(document.getElementById(\"skyscraper\"), \"width\").replace(\"px\", \"\")); } else { var skyWidth = Number(w3_getStyleValue(document.getElementById(\"right\"), \"width\").replace(\"px\", \"\")); } elem.style.width = skyWidth + \"px\"; if (window.innerWidth <= 992) { elem.style.position = \"\"; elem.style.top = stickypos + \"px\"; return false; } var stickypos = document.getElementById(\"stickypos\").offsetTop; var docTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop; var adHeight = Number(w3_getStyleValue(elem, \"height\").replace(\"px\", \"\")); if (stickyadstatus == \"\") { if ((stickypos - docTop) < 60) { elem.style.position = \"fixed\"; elem.style.top = \"60px\"; stickyadstatus = \"sticky\"; } } else { if ((docTop + 60) - stickypos document.getElementById(\"footer\").offsetTop) { elem.style.position = \"absolute\"; elem.style.top = (document.getElementById(\"footer\").offsetTop - adHeight) + \"px\"; } else { elem.style.position = \"fixed\"; elem.style.top = \"60px\"; stickyadstatus = \"sticky\"; } } } function w3_getStyleValue(elmnt,style) { if (window.getComputedStyle) { return window.getComputedStyle(elmnt,null).getPropertyValue(style); } else { return elmnt.currentStyle[style]; } } w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PHP BOOTSTRAP JQUERY ANGULAR W3.CSS XML MORE   FORUM EXAMPLES REFERENCES × HTML and CSS Learn HTML Learn CSS Learn W3.CSS Learn Colors Learn Bootstrap 3 Learn Bootstrap 4 Learn Graphics Learn Icons Learn How To JavaScript Learn JavaScript Learn jQuery Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Learn AppML Server Side Learn SQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery × HTML HTML Tag Reference HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference Google Maps Reference CSS CSS Reference CSS Selector Reference W3.CSS Reference Bootstrap Reference Icon Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference Charsets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 Server Side PHP Reference SQL Reference ASP Reference × HTML/CSS HTML Examples CSS Examples W3.CSS Examples W3.CSS Templates Bootstrap Examples JavaScript JavaScript Examples HTML DOM Examples jQuery Examples AngularJS Examples AJAX Examples W3.JS Examples Server Side PHP Examples ASP Examples XML XML Examples XSLT Examples XPath Examples XML Schema Examples SVG Examples Quizzes HTML Quiz CSS Quiz JavaScript Quiz Bootstrap Quiz jQuery Quiz PHP Quiz SQL Quiz XML Quiz × HTML5 Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors HTML CSS HTML Links HTML Images HTML Tables HTML Lists HTML Blocks HTML Classes HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Entities HTML Symbols HTML Charset HTML URL Encode HTML XHTML HTML Forms HTML Forms HTML Form Elements HTML Input Types HTML Input Attributes HTML5 HTML5 Intro HTML5 Support HTML5 New Elements HTML5 Semantics HTML5 Migration HTML5 Style Guide HTML Graphics HTML Canvas HTML SVG HTML Google Maps HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Geolocation HTML Drag/Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Quiz HTML Exercises HTML Certificate HTML Summary HTML References HTML Tag List HTML Attributes HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-2'); }); HTML Basic Examples ❮ Previous Next ❯ Don't worry if these examples use tags you have not learned. You will learn about them in the next chapters. HTML Documents All HTML documents must start with a document type declaration: <!DOCTYPE html>. The HTML document itself begins with <html> and ends with </html>. The visible part of the HTML document is between <body> and </body>. Example <!DOCTYPE html> <html> <body> <h1>My First Heading</h1> <p>My first paragraph.</p> </body> </html> Try it Yourself » HTML Headings HTML headings are defined with the <h1> to <h6> tags. <h1> defines the most important heading. <h6> defines the least important heading: Example <h1>This is heading 1</h1> <h2>This is heading 2</h2> <h3>This is heading 3</h3> Try it Yourself » googletag.cmd.push(function() { googletag.display('div-gpt-ad-1493883843099-0'); }); HTML Paragraphs HTML paragraphs are defined with the <p> tag: Example <p>This is a paragraph.</p> <p>This is another paragraph.</p> Try it Yourself » HTML Links HTML links are defined with the <a> tag: Example <a href=\"https://www.w3schools.com\">This is a link</a> Try it Yourself » The link's destination is specified in the href attribute. Attributes are used to provide additional information about HTML elements. HTML Images HTML images are defined with the <img> tag. The source file (src), alternative text (alt), width, and height are provided as attributes: Example <img src=\"w3schools.jpg\" alt=\"W3Schools.com\" width=\"104\" height=\"142\"> Try it Yourself » ❮ Previous Next ❯ googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-5'); }); COLOR PICKER HOW TO Tabs Dropdowns Accordions Convert Weights Animated Buttons Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE <!-- try{ loc=location.pathname; if (loc.toUpperCase().indexOf(\".ASP\")<0) loc=loc+\"default.asp\"; txt=''; txt=txt+''; txt=txt+' CERTIFICATES HTML, CSS, JavaScript, PHP, jQuery, Bootstrap and XML. Read More » 2200) { googletag.cmd.push(function() { googletag.display('div-gpt-ad-1472547360578-0'); }); } window.addEventListener(\"scroll\", fix_stickyad); window.addEventListener(\"resize\", fix_stickyad); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-0'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1422003450156-3'); }); REPORT ERROR PRINT PAGE FORUM ABOUT × Your Suggestion: Your E-mail: Page address: Description: Submit × Thank You For Helping Us! Your message has been sent to W3Schools. Top 10 Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial W3.CSS Tutorial Bootstrap Tutorial SQL Tutorial PHP Tutorial jQuery Tutorial Angular Tutorial XML Tutorial Top 10 References HTML Reference CSS Reference JavaScript Reference W3.CSS Reference Browser Statistics PHP Reference HTML Colors HTML Character Sets jQuery Reference AngularJS Reference Top 10 Examples HTML Examples CSS Examples JavaScript Examples W3.CSS Examples HTML DOM Examples PHP Examples ASP Examples jQuery Examples Angular Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2017 by Refsnes Data. All Rights Reserved. Powered by W3.CSS."},{"url":"https://github.com/AllThingsSmitty/css-protips?utm_source=mybridge&utm_medium=blog&utm_campaign=read_more","text":"GitHub - AllThingsSmitty/css-protips: A collection of tips to help take your CSS skills pro Skip to content - Features - Business - Explore - Marketplace - Pricing <!-- This repository Sign in or Sign up - Watch 495 - Star 9,848 - Fork 648 AllThingsSmitty/css-protips Code Issues 5 Pull requests 2 Projects 0 Insights <!-- Dismiss Join GitHub today GitHub is home to over 20 million developers working together to host and review code, manage projects, and build software together. Sign up A collection of tips to help take your CSS skills pro css protip css-skills flexbox tips tips-and-tricks awesome list awesome-list - 173 commits - 1 branch - 0 releases - 13 contributors - CC0-1.0 Clone or download Clone with HTTPS Use Git or checkout with SVN using the web URL. Download ZIP Find file Branch: master Switch branches/tags - Branches - Tags master Nothing to show Nothing to show New pull request Latest commit e1c6bf4 Oct 2, 2017 AllThingsSmitty Merge pull request #74 from BitYog/BitYog-patch-1 … Fixed grammar error Permalink Failed to load latest commit information. media Updated logo ✨ Jan 8, 2016 translations Fixed comment Sep 25, 2017 CODE-OF-CONDUCT.md Added code of conduct 👍🏼 Feb 21, 2016 CONTRIBUTING.md Added link to translations 🏄🏽 Sep 14, 2016 LICENSE Updated to CC0 1.0 Mar 10, 2016 README.md Fixed typo Sep 30, 2017 README.md CSS Protips A collection of tips to help take your CSS skills pro. For other great lists check out @sindresorhus's curated list of awesome lists. Table of Contents - Protips - Support - Translations - Contribution Guidelines Protips 1. Use a CSS Reset 2. Inherit box-sizing 3. Use :not() to Apply/Unapply Borders on Navigation 4. Add line-height to body 5. Vertically-Center Anything 6. Comma-Separated Lists 7. Select Items Using Negative nth-child 8. Use SVG for Icons 9. Use the \"Lobotomized Owl\" Selector 10. Use max-height for Pure CSS Sliders 11. Equal-Width Table Cells 12. Get Rid of Margin Hacks With Flexbox 13. Use Attribute Selectors with Empty Links 14. Style \"Default\" Links 15. Consistent Vertical Rhythm 16. Intrinsic Ratio Boxes 17. Style Broken Images 18. Use rem for Global Sizing; Use em for Local Sizing 19. Hide Autoplay Videos That Aren't Muted 20. Use :root for Flexible Type 21. Set font-size on Form Elements for a Better Mobile Experience Use a CSS Reset CSS resets help enforce style consistency across different browsers with a clean slate for styling elements. You can use a CSS reset library like Normalize, et al., or you can use a more simplified reset approach: * { box-sizing: border-box; margin: 0; padding: 0; } Now elements will be stripped of margins and padding, and box-sizing lets you manage layouts with the CSS box model. Demo Note: If you follow the Inherit box-sizing tip below you might opt to not include the box-sizing property in your CSS reset. back to table of contents Inherit box-sizing Let box-sizing be inherited from html: html { box-sizing: border-box; } *, *::before, *::after { box-sizing: inherit; } This makes it easier to change box-sizing in plugins or other components that leverage other behavior. back to table of contents Use :not() to Apply/Unapply Borders on Navigation Instead of putting on the border... /* add border */ .nav li { border-right: 1px solid #666; } ...and then taking it off the last element... /* remove border */ .nav li:last-child { border-right: none; } ...use the :not() pseudo-class to only apply to the elements you want: .nav li:not(:last-child) { border-right: 1px solid #666; } Sure, you can use .nav li + li or even .nav li:first-child ~ li, but with :not() the intent is very clear and the CSS selector defines the border the way a human would describe it. Demo back to table of contents Add line-height to body You don't need to add line-height to each <p>, <h*>, et al. separately. Instead, add it to body: body { line-height: 1.5; } This way textual elements can inherit from body easily. Demo back to table of contents Vertically-Center Anything No, it's not black magic, you really can center elements vertically: html, body { height: 100%; margin: 0; } body { -webkit-align-items: center; -ms-flex-align: center; align-items: center; display: -webkit-flex; display: flex; } Want to center something else? Vertically, horizontally...anything, anytime, anywhere? CSS-Tricks has a nice write-up on doing all of that. Note: Watch for some buggy behavior with flexbox in IE11. Demo back to table of contents Comma-Separated Lists Make list items look like a real, comma-separated list: ul > li:not(:last-child)::after { content: \",\"; } Use the :not() pseudo-class so no comma is added to the last item. Note: This tip may not be ideal for accessibility, specifically screen readers. And copy/paste from the browser doesn't work with CSS-generated content. Proceed with caution. back to table of contents Select Items Using Negative nth-child Use negative nth-child in CSS to select items 1 through n. li { display: none; } /* select items 1 through 3 and display them */ li:nth-child(-n+3) { display: block; } Or, since you've already learned a little about using :not(), try: /* select all items except the first 3 and display them */ li:not(:nth-child(-n+3)) { display: none; } Well that was pretty easy. Demo back to table of contents Use SVG for Icons There's no reason not to use SVG for icons: .logo { background: url(\"logo.svg\"); } SVG scales well for all resolution types and is supported in all browsers back to IE9. So ditch your .png, .jpg, or .gif-jif-whatev files. Note: If you have SVG icon-only buttons for sighted users and the SVG fails to load, this will help maintain accessibility: .no-svg .icon-only:after { content: attr(aria-label); } back to table of contents Use the \"Lobotomized Owl\" Selector It may have a strange name but using the universal selector (*) with the adjacent sibling selector (+) can provide a powerful CSS capability: * + * { margin-top: 1.5em; } In this example, all elements in the flow of the document that follow other elements will receive margin-top: 1.5em. For more on the \"lobotomized owl\" selector, read Heydon Pickering's post on A List Apart. Demo back to table of contents Use max-height for Pure CSS Sliders Implement CSS-only sliders using max-height with overflow hidden: .slider { max-height: 200px; overflow-y: hidden; width: 300px; } .slider:hover { max-height: 600px; overflow-y: scroll; } The element expands to the max-height value on hover and the slider displays as a result of the overflow. back to table of contents Equal-Width Table Cells Tables can be a pain to work with so try using table-layout: fixed to keep cells at equal width: .calendar { table-layout: fixed; } Pain-free table layouts. Demo back to table of contents Get Rid of Margin Hacks With Flexbox When working with column gutters you can get rid of nth-, first-, and last-child hacks by using flexbox's space-between property: .list { display: flex; justify-content: space-between; } .list .person { flex-basis: 23%; } Now column gutters always appear evenly-spaced. back to table of contents Use Attribute Selectors with Empty Links Display links when the <a> element has no text value but the href attribute has a link: a[href^=\"http\"]:empty::before { content: attr(href); } That's pretty convenient. Demo back to table of contents Style \"Default\" Links Add a style for \"default\" links: a[href]:not([class]) { color: #008000; text-decoration: underline; } Now links that are inserted via a CMS, which don't usually have a class attribute, will have a distinction without generically affecting the cascade. back to table of contents Consistent Vertical Rhythm Use a universal selector (*) within an element to create a consistent vertical rhythm: .intro > * { margin-bottom: 1.25rem; } Consistent vertical rhythm provides a visual aesthetic that makes content far more readable. back to table of contents Intrinsic Ratio Boxes To create a box with an intrinsic ratio, all you need to do is apply top or bottom padding to a div: .container { height: 0; padding-bottom: 20%; position: relative; } .container div { border: 2px dashed #ddd; height: 100%; left: 0; position: absolute; top: 0; width: 100%; } Using 20% for padding makes the height of the box equal to 20% of its width. No matter the width of the viewport, the child div will keep its aspect ratio (100% / 20% = 5:1). Demo back to table of contents Style Broken Images Make broken images more aesthetically-pleasing with a little bit of CSS: img { display: block; font-family: Helvetica, Arial, sans-serif; font-weight: 300; height: auto; line-height: 2; position: relative; text-align: center; width: 100%; } Now add pseudo-elements rules to display a user message and URL reference of the broken image: img:before { content: \"We're sorry, the image below is broken :(\"; display: block; margin-bottom: 10px; } img:after { content: \"(url: \" attr(src) \")\"; display: block; font-size: 12px; } Learn more about styling for this pattern in Ire Aderinokun's original post. back to table of contents Use rem for Global Sizing; Use em for Local Sizing After setting the base font size at the root (html { font-size: 100%; }), set the font size for textual elements to em: h2 { font-size: 2em; } p { font-size: 1em; } Then set the font-size for modules to rem: article { font-size: 1.25rem; } aside .module { font-size: .9rem; } Now each module becomes compartmentalized and easier to style, more maintainable, and flexible. back to table of contents Hide Autoplay Videos That Aren't Muted This is a great trick for a custom user stylesheet. Avoid overloading a user with sound from a video that autoplays when the page is loaded. If the sound isn't muted, don't show the video: video[autoplay]:not([muted]) { display: none; } Once again, we're taking advantage of using the :not() pseudo-class. back to table of contents Use :root for Flexible Type The type font size in a responsive layout should be able to adjust with each viewport. You can calculate the font size based on the viewport height and width using :root: :root { font-size: calc(1vw + 1vh + .5vmin); } Now you can utilize the root em unit based on the value calculated by :root: body { font: 1rem/1.6 sans-serif; } Demo back to table of contents Set font-size on Form Elements for a Better Mobile Experience To avoid mobile browsers (iOS Safari, et al.) from zooming in on HTML form elements when a <select> drop-down is tapped, add font-size to the selector rule: input[type=\"text\"], input[type=\"number\"], select, textarea { font-size: 16px; } 💃 back to table of contents Support Current versions of Chrome, Firefox, Safari, Opera, Edge, and IE11. back to table of contents Translations - Español - Français - Italiano - 日本語 - Português do Brasil - Русский - 简体中文 back to table of contents - © 2017 GitHub, Inc. - Terms - Privacy - Security - Status - Help - Contact GitHub - API - Training - Shop - Blog - About You can't perform that action at this time. You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session."},{"url":"https://medium.freecodecamp.org/css-flexbox-explained-by-road-tripping-across-the-country-1217b69c390e?utm_source=mybridge&gi=90f20f50e484","text":"CSS Flexbox Explained by Road Tripping Across the Country{\"@context\":\"http://schema.org\",\"@type\":\"NewsArticle\",\"image\":{\"@type\":\"ImageObject\",\"width\":1920,\"height\":1357,\"url\":\"https://cdn-images-1.medium.com/max/2000/1*kwaAOW_ja_raNVgV3VgZ2g.jpeg\"},\"datePublished\":\"2016-10-22T05:34:28.001Z\",\"dateModified\":\"2017-11-07T13:57:43.744Z\",\"headline\":\"CSS Flexbox Explained by Road Tripping Across the Country\",\"name\":\"CSS Flexbox Explained by Road Tripping Across the Country\",\"keywords\":[\"CSS\",\"Web Development\",\"Design\",\"Web Design\",\"Programming\"],\"author\":{\"@type\":\"Person\",\"name\":\"Kevin Kononenko\",\"url\":\"https://medium.freecodecamp.org/@kevink\"},\"creator\":[\"Kevin Kononenko\"],\"publisher\":{\"@type\":\"Organization\",\"name\":\"freeCodeCamp\",\"url\":\"https://medium.freecodecamp.org\",\"logo\":{\"@type\":\"ImageObject\",\"width\":500,\"height\":60,\"url\":\"https://cdn-images-1.medium.com/max/1000/1*wViBNJ1o9rM5p6b-gf3vxg.png\"}},\"mainEntityOfPage\":\"https://medium.freecodecamp.org/css-flexbox-explained-by-road-tripping-across-the-country-1217b69c390e\"}if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener(\"error\", _onerror, true); else if (document.attachEvent) document.attachEvent(\"onerror\", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName(\"script\")[0], s = d.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName(\"script\")[0], s = d.createElement(\"link\"); s.rel = \"stylesheet\"; s.href = u; f.parentNode.insertBefore(s, f); return s}(new Image()).src = \"/_/stat?event=pixel.load&origin=\" + encodeURIComponent(location.origin);window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date; ga(\"create\", \"UA-24232453-2\", \"auto\", {\"allowLinker\": true, \"legacyCookieDomain\": window.location.hostname}); ga(\"send\", \"pageview\");ga(\"create\", \"UA-55446531-3\", \"auto\", 'tracker0'); ga(\"tracker0.send\", \"pageview\");(function () {var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight; var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; document.write(\"section.section-image--fullBleed.is-backgrounded {padding-top: \" + Math.round(1.1 * height) + \"px;}section.section-image--fullScreen.is-backgrounded, section.section-image--coverFade.is-backgrounded {min-height: \" + height + \"px; padding-top: \" + Math.round(0.5 * height) + \"px;}.u-sizeViewHeight100 {height: \" + height + \"px !important;}.u-sizeViewHeight110 {height: \" + Math.round(1.1 * height) + \"px !important;}.u-sizeViewHeightMin100 {min-height: \" + height + \"px !important;}.u-sizeViewHeightMax100 {max-height: \" + height + \"px !important;}section.section-image--coverFade {height: \" + height + \"px;}.section-aspectRatioViewportPlaceholder, .section-aspectRatioViewportCropPlaceholder {max-height: \" + height + \"px;}.section-aspectRatioViewportBottomSpacer, .section-aspectRatioViewportBottomPlaceholder {max-height: \" + Math.round(0.5 * height) + \"px;}.zoomable:before {top: \" + (-1 * height) + \"px; left: \" + (-1 * width) + \"px; padding: \" + height + \"px \" + width + \"px;}\");})()document.body.className = document.body.className.replace(/(^|\\s)is-noJs(\\s|$)/, \"$1is-js$2\") HomepageFollow Sign inGet started Homepage - Home - Dev - Design - Data - Learn to code for free - Kevin KononenkoBlockedUnblockFollowFollowingFounder of Manual (https://www.rtfmanual.io/). Self-taught web developer. Passionate about not making same mistakes twice. Only new mistakes!Oct 21, 2016CSS Flexbox Explained by Road Tripping Across the CountryIf you have ever been on a long roadtrip, then you can understand CSS Flexbox! The popular Flexbox model attempts to replace the giant pain known as CSS “floats”. Unfortunately, it also introduces yet another entirely new system into CSS. And you thought there were enough already! Actually, the grid-oriented nature of Flexbox makes much more sense than constantly juggling your “float” and “block/inline-block” values. There are already a couple good resources out there, like Flexbox Tower Defense and this more technical guide. In this article, I’ll take the route of explaining the Flexbox system through one of my favorite types of vacations… the road trip! That’s right — we’re going to use the entire United States in this analogy. The US actually has a grid-oriented interstate highway system that spans East-West and North-South. While this map is geographically accurate, it’s pretty hard to understand. So let’s try that again.https://betterexplained.com/articles/highway-math/ In this scenario, you must primarily travel along a one-directional path. For example, you might take the route from Seattle to Boston which only includes west to east. Or, you might take the route from Seattle to San Diego, which only covers north to south. Since the default position is top left, we’ll start from Seattle. You’ll get a chance to add side trips to your road trip towards the end! This is important because it imitates the flow of <div>s within their container. Let’s hit the road!flex-direction: The direction of your trip Flex-direction determines the direction of elements within a container <div> with “display:flex;”. The default value is “row”, which means from left to right. No surprises there. Let’s say you’re starting in Seattle, and taking a trip to Boston. That trip might look like this in HTML: This assumes that you’re making stops at Yellowstone, Mount Rushmore and Chicago. Here is a timeline view, assuming you stop for 2 days at each location. And what if you are using “flex-direction:column;”? That means that your <div>s will align from top to bottom. Now, you’re going from Seattle to San Diego. Stops along the way might be Portland, San Francisco and Los Angeles.justify-content: How you space your stops along the trip Alright, let’s return to the Seattle to Boston trip. With Flexbox, we can decide how our child <div>s spread out along the width of the container. So, if you are on a road trip, you may not necessarily evenly space out your stops. You might stop more frequently at the beginning, or at the end. The default value for justify-content is “flex-start”, which means your <div>s spread from the left-most side. This is similar to choosing to do all of your stops on the roadtrip at the beginning. This would include places like Glacier National Park, Yellowstone and Mount Rushmore. On a map: Okay, this is admittedly a little unrealistic. You probably would not want to drive 20 hours from South Dakota straight to Boston. The same could be said of “flex-end”, when all of the <div>s hug the right side of the container. This would include stops at places like the wonderful city of Cleveland, Niagara Falls and the MLB Hall of Fame. On map: Another example is “center”, where the <div>s align themselves to the middle of the container <div>. That would mean visits to Mount Rushmore, the Mall of America in Minnesota and Chicago.align-items: Which highway do you want to take across the country? Alright, so far we have mainly been discussing the northern route across the country. In HTML terms, that means we are just going along the top of the <div>. But, one magical property of Flexbox is that we can easily move to the middle or bottom of the <div> without any CSS trickery. The align-items property defaults to “flex-start”, but if we change that to “center”, our <div>s will vertically align to the center of the container. This is kind of like starting your road trip in San Francisco, heading over to Las Vegas, then Denver, then St. Louis and ending in Washington D.C. Here’s the map: And, in HTML: If you wanted to set your align-items value to “flex-end”, your <div>s would align to the bottom of the container. You would be taking the southern route across the United States, and stopping in places like Sedona, Austin and New Orleans before ending in Jacksonville.align-self: Have one stop on a different highway route You can apply “align-self” to individual child <div>s in order to have them move vertically within the container, regardless of the align-items property. So if you are taking the trip from Seattle to Boston, you can make a stop in Las Vegas, which is in the middle of the country. Then you can continue on to Mount Rushmore or wherever else on the normal horizontal flow.order: Make your stops in a specific order So far, every stop has corresponded with the order of the elements in the HTML. In other words, if the Mount Rushmore stop is specified third in the HTML, that means it will be the third stop on the road trip. The “order” property is a numerical value that allows us to change the order of the HTML elements. Without Flexbox, we would need to use a confusing series of floats, or just change the HTML. With “order”, we can turn around on our road trip and visit a place that is not on the way to the end point. Would you do this in real life? Only if you enjoy an extra 15 hours in the car! Let’s say we’re taking the northern trip, Seattle to Boston. Here’s that HTML again. But, after starting in Seattle, we want to first go to South Dakota for the world’s largest square dance festival. We would use the “order” property to make sure the Mount Rushmore visit comes right after Seattle. Order defaults to 0, so we might want to give seattleVisit a value of -2, and mountRushmoreVisit a value of -1 to make sure it comes 2nd. Then the rest of the elements will follow in a normal flow. Notice — this is now strictly a timeline view, not using the geographic order as the other maps were using.Conclusion Time for a little quiz! Here are some sample destinations, in HTML. But, if the following is your planned route… what would the CSS need to look like? - Start in San Francisco - 2nd stop: Las Vegas - 3rd Stop: Mount Rushmore - 4th Stop: Backtrack to Denver - End by driving all the way to Washington D.C The answer: Here’s the reasoning behind this: - 4 out of 5 items are along our central route, so we “align-items” to center. - The three stops are generally in the middle of the United States from a West-East perspective, so we “justify-content” to center as well. - Mount Rushmore is on the northern route, so we use align-self on that one <div>. - The order CSS property is why we must backtrack to Denver, and why our actual trip does not follow the order of the children <div>s in the HTML. Order allows us to change the sequence of <div>s. In this case, we move Denver to the second to last stop, so we must give it an order greater than 0, but less than the order of the final <div> so that we still end in D.C. If you enjoyed this post, you may also enjoy my other explanations of challenging CSS and JavaScript topics, such as positioning, Model-View-Controller, and callbacks. And if you think this might help other people in the same position as you, give it a “heart”! - CSS - Web Development - Design - Web Design - ProgrammingOne clap, two clap, three clap, forty? By clapping more or less, you can signal to us which stories really stand out. 569 7 BlockedUnblockFollowFollowingKevin Kononenko Founder of Manual (https://www.rtfmanual.io/). Self-taught web developer. Passionate about not making same mistakes twice. Only new mistakes!FollowfreeCodeCamp Our community publishes stories worth reading on development, design, and data science. - 569 - - - Never miss a story from freeCodeCamp, when you sign up for Medium. Learn moreNever miss a story from freeCodeCampGet updatesGet updates .u-accentColor--borderLight {border-color: #429A35 !important;} .u-accentColor--borderNormal {border-color: #429A35 !important;} .u-accentColor--borderDark {border-color: #3E8432 !important;} .u-accentColor--iconLight .svgIcon,.u-accentColor--iconLight.svgIcon {fill: #429A35 !important;} .u-accentColor--iconNormal .svgIcon,.u-accentColor--iconNormal.svgIcon {fill: #429A35 !important;} .u-accentColor--iconDark .svgIcon,.u-accentColor--iconDark.svgIcon {fill: #3E8432 !important;} .u-accentColor--textNormal {color: #3E8432 !important;} .u-accentColor--hoverTextNormal:hover {color: #3E8432 !important;} .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #3B7830 !important;} .u-accentColor--textDark {color: #3B7830 !important;} .u-accentColor--backgroundLight {background-color: #429A35 !important;} .u-accentColor--backgroundNormal {background-color: #429A35 !important;} .u-accentColor--backgroundDark {background-color: #3E8432 !important;} .u-accentColor--buttonDark {border-color: #3E8432 !important; color: #3B7830 !important;} .u-accentColor--buttonDark:hover {border-color: #3B7830 !important;} .u-accentColor--buttonDark .icon:before,.u-accentColor--buttonDark .svgIcon{color: #3E8432 !important; fill: #3E8432 !important;} .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: #429A35 !important; color: #3E8432 !important;} .u-accentColor--buttonNormal:hover {border-color: #3E8432 !important;} .u-accentColor--buttonNormal .icon:before,.u-accentColor--buttonNormal .svgIcon{color: #429A35 !important; fill: #429A35 !important;} .u-accentColor--buttonNormal.button--filled .icon:before,.u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-accentColor--buttonDark.button--filled,.u-accentColor--buttonDark.button--withChrome.is-active,.u-accentColor--fillWhenActive.is-active {background-color: #3E8432 !important; border-color: #3E8432 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: #429A35 !important; border-color: #429A35 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .postArticle.is-withAccentColors .markup--user,.postArticle.is-withAccentColors .markup--query {color: #3E8432 !important;}.u-tintBgColor {background-color: rgba(0, 100, 0, 1) !important;}.u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(0, 100, 0, 1) 0%, rgba(0, 100, 0, 0) 100%) !important;}.u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(0, 100, 0, 0) 0%, rgba(0, 100, 0, 1) 100%) !important;} .u-tintSpectrum .u-baseColor--borderLight {border-color: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--borderNormal {border-color: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--borderDark {border-color: #DFF8D4 !important;} .u-tintSpectrum .u-baseColor--iconLight .svgIcon,.u-tintSpectrum .u-baseColor--iconLight.svgIcon {fill: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--iconNormal .svgIcon,.u-tintSpectrum .u-baseColor--iconNormal.svgIcon {fill: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--iconDark .svgIcon,.u-tintSpectrum .u-baseColor--iconDark.svgIcon {fill: #DFF8D4 !important;} .u-tintSpectrum .u-baseColor--textNormal {color: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--textDark {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--textDarker {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--backgroundLight {background-color: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--backgroundNormal {background-color: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--backgroundDark {background-color: #DFF8D4 !important;} .u-tintSpectrum .u-baseColor--buttonLight {border-color: #8ABF7C !important; color: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--buttonLight:hover {border-color: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--buttonLight .icon:before,.u-tintSpectrum .u-baseColor--buttonLight .svgIcon {color: #8ABF7C !important; fill: #8ABF7C !important;} .u-tintSpectrum .u-baseColor--buttonDark {border-color: #DFF8D4 !important; color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--buttonDark:hover {border-color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--buttonDark .icon:before,.u-tintSpectrum .u-baseColor--buttonDark .svgIcon {color: #DFF8D4 !important; fill: #DFF8D4 !important;} .u-tintSpectrum .u-baseColor--buttonNormal {border-color: #B5DDA8 !important; color: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--buttonNormal:hover {border-color: #DFF8D4 !important;} .u-tintSpectrum .u-baseColor--buttonNormal .icon:before,.u-tintSpectrum .u-baseColor--buttonNormal .svgIcon {color: #B5DDA8 !important; fill: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--buttonDark.button--filled,.u-tintSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: #DFF8D4 !important; border-color: #DFF8D4 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;} .u-tintSpectrum .u-baseColor--buttonNormal.button--filled,.u-tintSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: #B5DDA8 !important; border-color: #B5DDA8 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;} .u-tintSpectrum .u-baseColor--link {color: #B5DDA8 !important;} .u-tintSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--link.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--darken:active {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--link.link--dark {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:active {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--link.link--darker {color: #F3FFEA !important;} .u-tintSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: #8ABF7C;} .u-tintSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: #8ABF7C;} .u-tintSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: #8ABF7C;} .u-tintSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: #458C39 !important;} .u-tintSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: #5D9E50 !important;} .u-tintSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: #8ABF7C !important;} .u-tintSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: #B5DDA8 !important;} .u-tintSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: #F3FFEA !important;} .u-tintSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: #F3FFEA !important;} .u-tintSpectrum .ui-heading,.u-tintSpectrum .ui-brandTitle,.u-tintSpectrum .ui-captionStrong {color: #F3FFEA !important; fill: #F3FFEA !important;} .u-tintSpectrum .ui-body,.u-tintSpectrum .ui-caps {color: #F3FFEA !important; fill: #F3FFEA !important;} .u-tintSpectrum .ui-summary,.u-tintSpectrum .ui-caption {color: #8ABF7C !important; fill: #8ABF7C !important;} .u-tintSpectrum .u-accentColor--borderLight {border-color: #8ABF7C !important;} .u-tintSpectrum .u-accentColor--borderNormal {border-color: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--borderDark {border-color: #DFF8D4 !important;} .u-tintSpectrum .u-accentColor--iconLight .svgIcon,.u-tintSpectrum .u-accentColor--iconLight.svgIcon {fill: #8ABF7C !important;} .u-tintSpectrum .u-accentColor--iconNormal .svgIcon,.u-tintSpectrum .u-accentColor--iconNormal.svgIcon {fill: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--iconDark .svgIcon,.u-tintSpectrum .u-accentColor--iconDark.svgIcon {fill: #DFF8D4 !important;} .u-tintSpectrum .u-accentColor--textNormal {color: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--hoverTextNormal:hover {color: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #F3FFEA !important;} .u-tintSpectrum .u-accentColor--textDark {color: #F3FFEA !important;} .u-tintSpectrum .u-accentColor--backgroundLight {background-color: #8ABF7C !important;} .u-tintSpectrum .u-accentColor--backgroundNormal {background-color: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--backgroundDark {background-color: #DFF8D4 !important;} .u-tintSpectrum .u-accentColor--buttonDark {border-color: #DFF8D4 !important; color: #F3FFEA !important;} .u-tintSpectrum .u-accentColor--buttonDark:hover {border-color: #F3FFEA !important;} .u-tintSpectrum .u-accentColor--buttonDark .icon:before,.u-tintSpectrum .u-accentColor--buttonDark .svgIcon{color: #DFF8D4 !important; fill: #DFF8D4 !important;} .u-tintSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: #B5DDA8 !important; color: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--buttonNormal:hover {border-color: #DFF8D4 !important;} .u-tintSpectrum .u-accentColor--buttonNormal .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal .svgIcon{color: #B5DDA8 !important; fill: #B5DDA8 !important;} .u-tintSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;} .u-tintSpectrum .u-accentColor--buttonDark.button--filled,.u-tintSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-tintSpectrum .u-accentColor--fillWhenActive.is-active {background-color: #DFF8D4 !important; border-color: #DFF8D4 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;} .u-tintSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-tintSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: #B5DDA8 !important; border-color: #B5DDA8 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;} .u-tintSpectrum .postArticle.is-withAccentColors .markup--user,.u-tintSpectrum .postArticle.is-withAccentColors .markup--query {color: #B5DDA8 !important;} .u-accentColor--highlightFaint {background-color: rgba(222, 250, 211, 1) !important;} .u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(172, 246, 153, 1) !important;} .postArticle.is-withAccentColors .markup--quote.is-other {background-color: rgba(222, 250, 211, 1) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(222, 250, 211, 1), rgba(222, 250, 211, 1));} .postArticle.is-withAccentColors .markup--quote.is-me {background-color: rgba(195, 248, 179, 1) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(195, 248, 179, 1), rgba(195, 248, 179, 1));} .postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: rgba(172, 246, 153, 1) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));} .postArticle.is-withAccentColors .markup--quote.is-selected {background-color: rgba(172, 246, 153, 1) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));} .postArticle.is-withAccentColors .markup--highlight {background-color: rgba(172, 246, 153, 1) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));}.u-baseColor--iconNormal.avatar-halo {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}.u-imageBgColor {background-color: rgba(0, 0, 0, 0.24705882352941178);} .u-imageSpectrum .u-baseColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;} .u-imageSpectrum .u-baseColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;} .u-imageSpectrum .u-baseColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--iconLight .svgIcon,.u-imageSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;} .u-imageSpectrum .u-baseColor--iconNormal .svgIcon,.u-imageSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--iconDark .svgIcon,.u-imageSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--textDark {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--textDarker {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;} .u-imageSpectrum .u-baseColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--buttonLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important; color: rgba(255, 255, 255, 0.8) !important;} .u-imageSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;} .u-imageSpectrum .u-baseColor--buttonLight .icon:before,.u-imageSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;} .u-imageSpectrum .u-baseColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--buttonDark .icon:before,.u-imageSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--buttonNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--buttonNormal .icon:before,.u-imageSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--buttonDark.button--filled,.u-imageSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;} .u-imageSpectrum .u-baseColor--buttonNormal.button--filled,.u-imageSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;} .u-imageSpectrum .u-baseColor--link {color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--link.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--darken:active {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--link.link--dark {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--link.link--darker {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(255, 255, 255, 0.8);} .u-imageSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(255, 255, 255, 0.8);} .u-imageSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(255, 255, 255, 0.8);} .u-imageSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(255, 255, 255, 0.4) !important;} .u-imageSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(255, 255, 255, 0.4980392156862745) !important;} .u-imageSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(255, 255, 255, 0.6980392156862745) !important;} .u-imageSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(255, 255, 255, 0.8980392156862745) !important;} .u-imageSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .ui-heading,.u-imageSpectrum .ui-brandTitle,.u-imageSpectrum .ui-captionStrong {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .ui-body,.u-imageSpectrum .ui-caps {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .ui-summary,.u-imageSpectrum .ui-caption {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;} .u-imageSpectrum .u-accentColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;} .u-imageSpectrum .u-accentColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;} .u-imageSpectrum .u-accentColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--iconLight .svgIcon,.u-imageSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;} .u-imageSpectrum .u-accentColor--iconNormal .svgIcon,.u-imageSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--iconDark .svgIcon,.u-imageSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--textDark {color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;} .u-imageSpectrum .u-accentColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--buttonDark .icon:before,.u-imageSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-imageSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--buttonNormal .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;} .u-imageSpectrum .u-accentColor--buttonDark.button--filled,.u-imageSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-imageSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;} .u-imageSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-imageSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;} .u-imageSpectrum .postArticle.is-withAccentColors .markup--user,.u-imageSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(255, 255, 255, 0.9490196078431372) !important;} .u-imageSpectrum .u-accentColor--highlightFaint {background-color: rgba(255, 255, 255, 0.2) !important;} .u-imageSpectrum .u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(255, 255, 255, 0.6) !important;} .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: rgba(255, 255, 255, 0.2) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2));} .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: rgba(255, 255, 255, 0.4) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4));} .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: rgba(255, 255, 255, 0.6) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));} .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: rgba(255, 255, 255, 0.6) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));} .postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: rgba(255, 255, 255, 0.6) !important;} body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}.u-resetSpectrum .u-tintBgColor {background-color: rgba(255, 255, 255, 1) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 100%) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%) !important;} .u-resetSpectrum .u-baseColor--borderLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--borderNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--borderDark {border-color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--iconLight .svgIcon,.u-resetSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--iconNormal .svgIcon,.u-resetSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--iconDark .svgIcon,.u-resetSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--textNormal {color: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--textDark {color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--textDarker {color: rgba(0, 0, 0, 0.8) !important;} .u-resetSpectrum .u-baseColor--backgroundLight {background-color: rgba(0, 0, 0, 0.09803921568627451) !important;} .u-resetSpectrum .u-baseColor--backgroundNormal {background-color: rgba(0, 0, 0, 0.2) !important;} .u-resetSpectrum .u-baseColor--backgroundDark {background-color: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonLight .icon:before,.u-resetSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonDark {border-color: rgba(0, 0, 0, 0.6) !important; color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(0, 0, 0, 0.8) !important;} .u-resetSpectrum .u-baseColor--buttonDark .icon:before,.u-resetSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--buttonNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important; color: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--buttonNormal .icon:before,.u-resetSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(0, 0, 0, 0.4980392156862745) !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--buttonDark.button--filled,.u-resetSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2980392156862745) !important; border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-resetSpectrum .u-baseColor--buttonNormal.button--filled,.u-resetSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2) !important; border-color: rgba(0, 0, 0, 0.2) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-resetSpectrum .u-baseColor--link {color: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--link.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--darken:active {color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--link.link--dark {color: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(0, 0, 0, 0.8) !important;} .u-resetSpectrum .u-baseColor--link.link--darker {color: rgba(0, 0, 0, 0.8) !important;} .u-resetSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);} .u-resetSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);} .u-resetSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);} .u-resetSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(0, 0, 0, 0.2) !important;} .u-resetSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(0, 0, 0, 0.4) !important;} .u-resetSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;} .u-resetSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .ui-heading,.u-resetSpectrum .ui-brandTitle,.u-resetSpectrum .ui-captionStrong {color: rgba(0, 0, 0, 0.8) !important; fill: rgba(0, 0, 0, 0.8) !important;} .u-resetSpectrum .ui-body,.u-resetSpectrum .ui-caps {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;} .u-resetSpectrum .ui-summary,.u-resetSpectrum .ui-caption {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;} .u-resetSpectrum .u-accentColor--borderLight {border-color: rgba(2, 184, 117, 1) !important;} .u-resetSpectrum .u-accentColor--borderNormal {border-color: rgba(2, 184, 117, 1) !important;} .u-resetSpectrum .u-accentColor--borderDark {border-color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--iconLight .svgIcon,.u-resetSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(2, 184, 117, 1) !important;} .u-resetSpectrum .u-accentColor--iconNormal .svgIcon,.u-resetSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--iconDark .svgIcon,.u-resetSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--textNormal {color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--textDark {color: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--backgroundLight {background-color: rgba(2, 184, 117, 1) !important;} .u-resetSpectrum .u-accentColor--backgroundNormal {background-color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--backgroundDark {background-color: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--buttonDark {border-color: rgba(0, 171, 107, 1) !important; color: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--buttonDark .icon:before,.u-resetSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(28, 153, 99, 1) !important; fill: rgba(28, 153, 99, 1) !important;} .u-resetSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(2, 184, 117, 1) !important; color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--buttonNormal .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(0, 171, 107, 1) !important; fill: rgba(0, 171, 107, 1) !important;} .u-resetSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-resetSpectrum .u-accentColor--buttonDark.button--filled,.u-resetSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-resetSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(28, 153, 99, 1) !important; border-color: rgba(28, 153, 99, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-resetSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-resetSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(0, 171, 107, 1) !important; border-color: rgba(0, 171, 107, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;} .u-resetSpectrum .postArticle.is-withAccentColors .markup--user,.u-resetSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(0, 171, 107, 1) !important;}// // //"},{"url":"http://www.tutorialspoint.com/python/","text":"<!-- Python Tutorial var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; googletag.cmd.push(function() { googletag.defineSlot('/60931893/tutorial_right_bottom', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-0').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_right_middle', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-1').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_right_top', [300, 250], 'div-gpt-ad-1510138782906-2').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_bottom_leader_board', [[600, 400], [300, 250], [480, 320], [468, 60], [336, 280], [600, 200], [580, 400]], 'div-gpt-ad-1510138782906-3').addService(googletag.pubads()); googletag.pubads().enableSingleRequest(); googletag.enableServices(); }); li a.videolink{ background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;} div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #fdbf00 url(/images/pattern.png) repeat center center !important;} .sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #fdbf00 !important;} .submenu-item{ border-bottom: 2px solid #fdbf00 !important; border-top: 2px solid #fdbf00 !important } .ace_scroller{overflow: auto!important;} a.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#fdbf00; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;} a.demo:hover{opacity:.8} pre.prettyprint { border: 1px solid #d6d6d6; background-color: #eee; width: 98%; border-radius: 0; padding: 5px; margin: 0; margin-bottom: 10px; margin-top:15px; font-size: 13px; overflow: auto; } $(document).ready(function() { $('input[name=\"q\"]').keydown(function(event){ if(event.keyCode == 13) { event.preventDefault(); return false; } }); }); - Jobs - Qries (Q/A) - Whiteboard - Net Meeting - Tools - Articles - Facebook Google+ Twitter Linkedin YouTube - Facebook - Google+ - Twitter - Linkedin - YouTube - Home - Tutorials Library - Coding Ground - Tutor Connect - Videos - Search li a.videolink { background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6; } .ts{ text-align:center !important; vertical-align:middle !important; } - - Python Basic Tutorial - Python - Home - Python - Overview - Python - Environment Setup - Python - Basic Syntax - Python - Variable Types - Python - Basic Operators - Python - Decision Making - Python - Loops - Python - Numbers - Python - Strings - Python - Lists - Python - Tuples - Python - Dictionary - Python - Date & Time - Python - Functions - Python - Modules - Python - Files I/O - Python - Exceptions - Python Advanced Tutorial - Python - Classes/Objects - Python - Reg Expressions - Python - CGI Programming - Python - Database Access - Python - Networking - Python - Sending Email - Python - Multithreading - Python - XML Processing - Python - GUI Programming - Python - Further Extensions - Python Useful Resources - Python - Questions and Answers - Python - Quick Guide - Python - Tools/Utilities - Python - Useful Resources - Python - Discussion - Selected Reading - Developer's Best Practices - Questions and Answers - Effective Resume Writing - HR Interview Questions - Computer Glossary - Who is Who Previous Page Next Page Python - Tutorial PDF Version Quick Guide Resources Job Search Discussion Python is a general-purpose interpreted, interactive, object-oriented, and high-level programming language. It was created by Guido van Rossum during 1985- 1990. Like Perl, Python source code is also available under the GNU General Public License (GPL). This tutorial gives enough understanding on Python programming language. Audience This tutorial is designed for software programmers who need to learn Python programming language from scratch. Prerequisites You should have a basic understanding of Computer Programming terminologies. A basic understanding of any of the programming languages is a plus. Python Offline Mobile App Execute Python Programs For most of the examples given in this tutorial you will find Try it option, so just make use of it and enjoy your learning. Try following example using Try it option available at the top right corner of the below sample code box − #!/usr/bin/python print \"Hello, Python!\" Previous Page Print Next Page Advertisements googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-3'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-2'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-1'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-0'); }); - Write for us - FAQ's - Helping - Contact © Copyright 2017. All Rights Reserved. go _uacct = \"UA-232293-6\"; urchinTracker(); $('.pg-icon').click(function(){ $('.wrapLoader').show(); }); var tryit = new $.TryIt('/python/try_python.php'); tryit.compile(); { \"@context\": \"https://schema.org\", \"@type\": \"Article\", \"headline\": \"\", \"name\": \"\", \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"https://www.tutorialspoint.com/python/python\" }, \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/python/images/python-mini.jpg\", \"width\": 255, \"height\": 194 }, \"author\": { \"@type\": \"Organization\", \"name\": \"Tutorials Point\", \"url\": \"https://www.tutorialspoint.com\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/images/logo60.png\", \"width\": 210, \"height\": 60 } }, \"datePublished\": \"December 31 1969 18:00:00.\", \"dateModified\": \"December 31 1969 18:00:00.\", \"publisher\": { \"@type\": \"Organization\", \"name\": \"Tutorials Point\", \"url\": \"https://www.tutorialspoint.com\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/images/logo60.png\", \"width\": 210, \"height\": 60 } }, \"description\": \"...\" } { \"@context\": \"https://schema.org\", \"@type\": \"BreadcrumbList\", \"itemListElement\": [ { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"name\": \"www.tutorialspoint.com\", \"@id\": \"https://www.tutorialspoint.com\" } }, { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"name\": \"Python\", \"@id\": \"https://www.tutorialspoint.com/python\" } }, { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"name\": \"Python - Overview\" } } ] }"},{"url":"https://www.tutorialspoint.com/python/python_basic_syntax.htm","text":"<!-- Python Basic Syntax var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; googletag.cmd.push(function() { googletag.defineSlot('/60931893/tutorial_right_bottom', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-0').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_right_middle', [[300, 250], [300, 600]], 'div-gpt-ad-1510138782906-1').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_right_top', [300, 250], 'div-gpt-ad-1510138782906-2').addService(googletag.pubads()); googletag.defineSlot('/60931893/tutorial_bottom_leader_board', [[600, 400], [300, 250], [480, 320], [468, 60], [336, 280], [600, 200], [580, 400]], 'div-gpt-ad-1510138782906-3').addService(googletag.pubads()); googletag.pubads().enableSingleRequest(); googletag.enableServices(); }); li a.videolink{ background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;} div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #fdbf00 url(/images/pattern.png) repeat center center !important;} .sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #fdbf00 !important;} .submenu-item{ border-bottom: 2px solid #fdbf00 !important; border-top: 2px solid #fdbf00 !important } .ace_scroller{overflow: auto!important;} a.demo{font-family: \"Open Sans\",Arial,sans-serif; background:#fdbf00; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;} a.demo:hover{opacity:.8} pre.prettyprint { border: 1px solid #d6d6d6; background-color: #eee; width: 98%; border-radius: 0; padding: 5px; margin: 0; margin-bottom: 10px; margin-top:15px; font-size: 13px; overflow: auto; } $(document).ready(function() { $('input[name=\"q\"]').keydown(function(event){ if(event.keyCode == 13) { event.preventDefault(); return false; } }); }); - Jobs - Qries (Q/A) - Whiteboard - Net Meeting - Tools - Articles - Facebook Google+ Twitter Linkedin YouTube - Facebook - Google+ - Twitter - Linkedin - YouTube - Home - Tutorials Library - Coding Ground - Tutor Connect - Videos - Search li a.videolink { background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6; } .ts{ text-align:center !important; vertical-align:middle !important; } - - Python Basic Tutorial - Python - Home - Python - Overview - Python - Environment Setup - Python - Basic Syntax - Python - Variable Types - Python - Basic Operators - Python - Decision Making - Python - Loops - Python - Numbers - Python - Strings - Python - Lists - Python - Tuples - Python - Dictionary - Python - Date & Time - Python - Functions - Python - Modules - Python - Files I/O - Python - Exceptions - Python Advanced Tutorial - Python - Classes/Objects - Python - Reg Expressions - Python - CGI Programming - Python - Database Access - Python - Networking - Python - Sending Email - Python - Multithreading - Python - XML Processing - Python - GUI Programming - Python - Further Extensions - Python Useful Resources - Python - Questions and Answers - Python - Quick Guide - Python - Tools/Utilities - Python - Useful Resources - Python - Discussion - Selected Reading - Developer's Best Practices - Questions and Answers - Effective Resume Writing - HR Interview Questions - Computer Glossary - Who is Who Python - Basic Syntax Advertisements Previous Page Next Page The Python language has many similarities to Perl, C, and Java. However, there are some definite differences between the languages. First Python Program Let us execute programs in different modes of programming. Interactive Mode Programming Invoking the interpreter without passing a script file as a parameter brings up the following prompt − $ python Python 2.4.3 (#1, Nov 11 2010, 13:34:43) [GCC 4.1.2 20080704 (Red Hat 4.1.2-48)] on linux2 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> Type the following text at the Python prompt and press the Enter − >>> print \"Hello, Python!\" If you are running new version of Python, then you would need to use print statement with parenthesis as in print (\"Hello, Python!\");. However in Python version 2.4.3, this produces the following result − Hello, Python! Script Mode Programming Invoking the interpreter with a script parameter begins execution of the script and continues until the script is finished. When the script is finished, the interpreter is no longer active. Let us write a simple Python program in a script. Python files have extension .py. Type the following source code in a test.py file − print \"Hello, Python!\" We assume that you have Python interpreter set in PATH variable. Now, try to run this program as follows − $ python test.py This produces the following result − Hello, Python! Let us try another way to execute a Python script. Here is the modified test.py file − #!/usr/bin/python print \"Hello, Python!\" We assume that you have Python interpreter available in /usr/bin directory. Now, try to run this program as follows − $ chmod +x test.py # This is to make file executable $./test.py This produces the following result − Hello, Python! Python Identifiers A Python identifier is a name used to identify a variable, function, class, module or other object. An identifier starts with a letter A to Z or a to z or an underscore (_) followed by zero or more letters, underscores and digits (0 to 9). Python does not allow punctuation characters such as @, $, and % within identifiers. Python is a case sensitive programming language. Thus, Manpower and manpower are two different identifiers in Python. Here are naming conventions for Python identifiers − - Class names start with an uppercase letter. All other identifiers start with a lowercase letter. - Starting an identifier with a single leading underscore indicates that the identifier is private. - Starting an identifier with two leading underscores indicates a strongly private identifier. - If the identifier also ends with two trailing underscores, the identifier is a language-defined special name. Reserved Words The following list shows the Python keywords. These are reserved words and you cannot use them as constant or variable or any other identifier names. All the Python keywords contain lowercase letters only. and exec not assert finally or break for pass class from print continue global raise def if return del import try elif in while else is with except lambda yield Lines and Indentation Python provides no braces to indicate blocks of code for class and function definitions or flow control. Blocks of code are denoted by line indentation, which is rigidly enforced. The number of spaces in the indentation is variable, but all statements within the block must be indented the same amount. For example − if True: print \"True\" else: print \"False\" However, the following block generates an error − if True: print \"Answer\" print \"True\" else: print \"Answer\" print \"False\" Thus, in Python all the continuous lines indented with same number of spaces would form a block. The following example has various statement blocks − Note − Do not try to understand the logic at this point of time. Just make sure you understood various blocks even if they are without braces. #!/usr/bin/python import sys try: # open file stream file = open(file_name, \"w\") except IOError: print \"There was an error writing to\", file_name sys.exit() print \"Enter '\", file_finish, print \"' When finished\" while file_text != file_finish: file_text = raw_input(\"Enter text: \") if file_text == file_finish: # close the file file.close break file.write(file_text) file.write(\"\\n\") file.close() file_name = raw_input(\"Enter filename: \") if len(file_name) == 0: print \"Next time please enter something\" sys.exit() try: file = open(file_name, \"r\") except IOError: print \"There was an error reading file\" sys.exit() file_text = file.read() file.close() print file_text Multi-Line Statements Statements in Python typically end with a new line. Python does, however, allow the use of the line continuation character (\\) to denote that the line should continue. For example − total = item_one + \\ item_two + \\ item_three Statements contained within the [], {}, or () brackets do not need to use the line continuation character. For example − days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'] Quotation in Python Python accepts single ('), double (\") and triple (''' or \"\"\") quotes to denote string literals, as long as the same type of quote starts and ends the string. The triple quotes are used to span the string across multiple lines. For example, all the following are legal − word = 'word' sentence = \"This is a sentence.\" paragraph = \"\"\"This is a paragraph. It is made up of multiple lines and sentences.\"\"\" Comments in Python A hash sign (#) that is not inside a string literal begins a comment. All characters after the # and up to the end of the physical line are part of the comment and the Python interpreter ignores them. #!/usr/bin/python # First comment print \"Hello, Python!\" # second comment This produces the following result − Hello, Python! You can type a comment on the same line after a statement or expression − name = \"Madisetti\" # This is again comment You can comment multiple lines as follows − # This is a comment. # This is a comment, too. # This is a comment, too. # I said that already. Using Blank Lines A line containing only whitespace, possibly with a comment, is known as a blank line and Python totally ignores it. In an interactive interpreter session, you must enter an empty physical line to terminate a multiline statement. Waiting for the User The following line of the program displays the prompt, the statement saying “Press the enter key to exit”, and waits for the user to take action − #!/usr/bin/python raw_input(\"\\n\\nPress the enter key to exit.\") Here, \"\\n\\n\" is used to create two new lines before displaying the actual line. Once the user presses the key, the program ends. This is a nice trick to keep a console window open until the user is done with an application. Multiple Statements on a Single Line The semicolon ( ; ) allows multiple statements on the single line given that neither statement starts a new code block. Here is a sample snip using the semicolon − import sys; x = 'foo'; sys.stdout.write(x + '\\n') Multiple Statement Groups as Suites A group of individual statements, which make a single code block are called suites in Python. Compound or complex statements, such as if, while, def, and class require a header line and a suite. Header lines begin the statement (with the keyword) and terminate with a colon ( : ) and are followed by one or more lines which make up the suite. For example − if expression : suite elif expression : suite else : suite Command Line Arguments Many programs can be run to provide you with some basic information about how they should be run. Python enables you to do this with -h − $ python -h usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ... Options and arguments (and corresponding environment variables): -c cmd : program passed in as string (terminates option list) -d : debug output from parser (also PYTHONDEBUG=x) -E : ignore environment variables (such as PYTHONPATH) -h : print this help message and exit [ etc. ] You can also program your script in such a way that it should accept various options. Command Line Arguments is an advanced topic and should be studied a bit later once you have gone through rest of the Python concepts. Previous Page Print Next Page Advertisements googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-3'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-2'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-1'); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-1510138782906-0'); }); - Write for us - FAQ's - Helping - Contact © Copyright 2017. All Rights Reserved. go _uacct = \"UA-232293-6\"; urchinTracker(); $('.pg-icon').click(function(){ $('.wrapLoader').show(); }); var tryit = new $.TryIt('/python/try_python.php'); tryit.compile(); { \"@context\": \"https://schema.org\", \"@type\": \"Article\", \"headline\": \"Python Basic Syntax\", \"name\": \"Python Basic Syntax\", \"mainEntityOfPage\": { \"@type\": \"WebPage\", \"@id\": \"https://www.tutorialspoint.com/python/python_basic_syntax.htm\" }, \"image\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/python/images/python-mini.jpg\", \"width\": 255, \"height\": 194 }, \"author\": { \"@type\": \"Organization\", \"name\": \"Tutorials Point\", \"url\": \"https://www.tutorialspoint.com\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/images/logo60.png\", \"width\": 210, \"height\": 60 } }, \"datePublished\": \"October 11 2017 08:15:24.\", \"dateModified\": \"October 05 2017 23:29:20.\", \"publisher\": { \"@type\": \"Organization\", \"name\": \"Tutorials Point\", \"url\": \"https://www.tutorialspoint.com\", \"logo\": { \"@type\": \"ImageObject\", \"url\": \"https://www.tutorialspoint.com/images/logo60.png\", \"width\": 210, \"height\": 60 } }, \"description\": \"The Python language has many similarities to Perl, C, and Java. However, there are some definite differences between the languages....\" } { \"@context\": \"https://schema.org\", \"@type\": \"BreadcrumbList\", \"itemListElement\": [ { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"name\": \"www.tutorialspoint.com\", \"@id\": \"https://www.tutorialspoint.com\" } }, { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"name\": \"Python\", \"@id\": \"https://www.tutorialspoint.com/python\" } }, { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"name\": \"Python - Basic Syntax\" } } ] }"},{"url":"http://www.vetstreet.com/dogs/","text":"<!-- var _sf_startpt = (new Date()).getTime() Complete Guide to Caring for Dogs | Dog Breed Information, Dog Training, Dog Grooming var urls = { \"login_override\": \"\", \"badge_url\": \"/badge\", \"login\": \"/login\", \"logout\": \"/logout\", \"find_vet_json\": \"/ContentAjaxServlet/findVetByZip\", \"find_vet_json_reg\": \"/ContentAjaxServlet/findVetForReg\", \"dog_breed_json\": \"/ContentAjaxServlet/getDogBreedList\", \"search_specie_json\": \"/ContentAjaxServlet/getSpecieList\", \"search_breed_json\": \"/ContentAjaxServlet/getBreedList\", \"ip_address_proxy\": \"/proxy\", \"styles\": \"/css/global.css\", \"print_preview_css\": \"/css/print-preview.css\", \"ad_iframe\": \"/jsp/ad_iframe.jsp\", \"calculator\": \"/js/calculator.js\", \"find_us_on_fb\": \"http://www.facebook.com/plugins/activity.php?site=http://www.vetstreet.com&width=300&height=300&header=true&colorscheme=light&font&border_color&recommendations=false\", \"update_verification\": \"/RegAuthAjaxServlet/updateEmail\", \"resend_verification\": \"/RegAuthAjaxServlet/resendEmail2\", \"send_verification\": \"/RegAuthAjaxServlet/sendConfirmEmail\", \"registration\": \"/RegAuthAjaxServlet/registration\", \"confirm_registration\": \"/RegAuthAjaxServlet/updateConfirm\", \"breed_selector\": \"/ContentAjaxServlet/breedSelector\", \"pet_search\": \"/ContentAjaxServlet/petSearch\" }; var kaltura_player_id = \"29020932\"; var kaltura_player_id_enhancement = \"29033621\"; var kaltura_player_id_right_rail = \"28219921\"; var kaltura_player_wid = \"\"; var kaltura_partner_id = \"641622\"; var autoplayKaltura = false; var share_text = { \"prepend\": \" \", \"email_body\": \" \" }; var ip_address = \"68.230.173.128\"; var user = null; var radius_param = \"\"; window.jQuery || document.write(\"\") // Facebook Pixel Code VSCONSUMER-725 !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function() {n.callMethod? n.callMethod.apply(n,arguments):n.queue.push(arguments)}; if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];console.log('e='+e);t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0]; s.parentNode.insertBefore(t,s)}(window,document,'script','//connect.facebook.net/en_US/fbevents.js'); fbq('init', '1728592934040849'); fbq('track', \"PageView\"); a{ padding: 0px; vertical-align: top; } #breedFinderModuleBody .breed-form-medium .footer .advanced-med-wrap div.infoWrap, #breedFinderModuleBody .advanced-wrap div.infoWrap{ margin: 0; margin-top: -6px !important; line-height: 19px; padding: 0px; } #breedFinderModuleBody .breed-form-narrow .legend{ bottom: 15px; } #breedFinderModuleBody .breed-form .fs-subtitle{ padding-bottom: 12px !important; } } .slideShow .endcardThumbs { width: 593px !important; } .slideShow .endcardThumbs .thumbs { padding: 25px 26px 15px !important; } @media only screen and (max-width: 768px){ #breedFinderModuleBody .next-button { margin-top: 10px; margin-right: 0px; } #breedFinderModuleBody .breed-form-narrow fieldset { min-height: 1px; } } @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) { #breedFinderModuleBody .breed-form-narrow fieldset { min-height: 1px; } } @media only screen and (max-width: 635px){ .slideShow div.endcardThumbs { width: auto !important; } } #content h1 { text-align: left; } #content .sponsored { margin: 20px 0 15px -10px !important; } @media screen and (min-width: 636px) and (max-width: 768px) { #content .sponsored .sponsored-info .sponsored-by img{ top: 20px; } #breedFinderModuleBody .next-button { margin-right: 2px; } } @media (max-width: 479px) and (min-width: 320px){ #content .sponsored .sponsored-info .sponsored-by .sponsored-text p { font-size: 9px; } #content .sponsored .sponsored-info .sponsored-by img { width: 50%; margin-top: -20px; } #content .sponsored .sponsored-info .sponsored-by .sponsored-text { width: 50%; } #content .sponsored .sponsored-info .sponsored-by { width: 37%; } #content .sponsored { margin: 20px 0 10px -10px !important; } #content .sponsored .sponsored-message { padding: 25px 0 0 10px !important; } #content .sponsored .sponsored-info .sponsored-by { margin-right: 0px !important; -webkit-transform: translateY(0); -moz-transform: translateY(0); -o-transform: translateY(0); -ms-transform: translateY(0); transform: translateY(0); } .sponsored-info { padding-bottom: 10px; } #content .sponsored .sponsored-info .slogan { top: 0 !important; } } #content .sponsored .sponsored-message { padding: 45px 0 0 10px; } .breed-characteristics .infoWrap { color: #c1c1c5; } @media only screen and (max-width: 635px) { #breedFinderModuleBody .toggle-btn-grp.cssonly div input:hover + label { background: #8BC63E; } } #breedFinderModuleBody .breed-large-wrapper #breedFinderForm .options .toggle-btn-grp-medium { text-align:center; padding:0; margin-top:-20px; } @media (max-width: 635px) { .sidebar-border { display: block !important; } } .breed-characteristics .info-tooltip.left:after { border-left: none !important; border-bottom: none !important; } .breed-characteristics .info-tooltip.left { border: none !important; } #footer-newsletter .newsletterSubscribeButton { background-color: #FF8633; border: none; border-radius: 5px; padding: 5px 14px; text-transform: uppercase; color: #fff; font-size: 13px; } .url.is.newsletter{display:none;} /* After install fixes 02/23/2016 */ /*PHV-54 */ .package .card.card-lead {height: 408px;} .package .card {box-shadow: none;} /*PHV-55 */ .layout-3x1 .owl-carousel.owl-loaded {margin-top:1px;} /*PHV-56 */ /*#login-section{ margin-bottom: 1px;}*/ /*PHV-58 */ #main div.ad-module-container-leaderboard {margin-bottom: 2px;} vsgoogle_dfp_gpt.loadScript('4975085'); //GA_googleAddAttr(\"auth-link\", \"N\"); vsgoogle_dfp_gpt.setTargeting(\"auth-link\", \"N\"); var _comscore = _comscore || []; _comscore.push({c1: \"2\", c2: \"10477202\"}); (function() { var s = document.createElement(\"script\"), el = document.getElementsByTagName(\"script\")[0]; s.async = true; s.src = (document.location.protocol == \"https:\" ? \"https://sb\" : \"http://b\") + \".scorecardresearch.com/beacon.js\"; el.parentNode.insertBefore(s, el); })(); Toggle Navigation Vetstreet Search Vetstreet - Home - FIND - Dogs - Cats - LEARN GUIDES TO PET WELLNESS - CARE KEEPING YOUR PET HEALTHY - TRAIN UNDERSTANDING PET BEHAVIOR - HealthyPet Magazine Current Issue Photo Contest - Current Issue - Photo Contest - Marketplace Subscribe to Petwire Newsletter - About Us - Privacy Policy - Terms of Use - Contact Us - Media Kit - Newsletter Subscription - Veterinary Services - Shop Your Vet - © 2001-2017 Vetstreet. All rights reserved. Powered by Brightspot. Vetstreet does not provide medical advice, diagnosis, or treatment. See Additional Information › Vetstreet - DOGS - CATS - Marketplace - ALL NEW! FIND YOUR VET - LEARN GUIDES TO PET WELLNESS - CARE KEEPING YOUR PET HEALTHY - TRAIN UNDERSTANDING PET BEHAVIOR - HealthyPet Magazine Current Issue Photo Contest - Current Issue - Photo Contest Home › Dogs vsgoogle_dfp_gpt.defineSlot('Vetstreet/Dogs/homepage_728x90', [[728, 90], [320, 50]], 'leaderboard-ad'); vsgoogle_dfp_gpt.display('leaderboard-ad'); Advertisement Dogs Menu Dogs Main Dog Breeds Why Does My Dog... - ◄ - - ► .cms-textAlign-left{text-align:left;}.cms-textAlign-center{text-align:center;}.cms-textAlign-right{text-align:right;}.cms-customHeadings-h2{font-size: 17px; color: #AB483A; margin-top: 15px; padding: 0px; line-height: 1.5;}.cms-customHeadings-h2a{font-size: 17px; color: #000000; margin-top: 15px; padding: 0px; line-height: 1.5;}.cms-customHeadings-healthypet-h2{font-size: 17px; color: #000000; margin-top: 15px; padding: 0px; line-height: 1.5;}.cms-customHeadings-rimadyl-h2{font-size: 17px; color: #006633; margin-top: 15px; padding: 0px; line-height: 1.5;}.cms-customHeadings-big-h2{font-size: 25px; color: #AB483A; margin-top: 15px; padding: 0px; line-height: 2.5;} Thinkstock CANINE BEHAVIOR 6 Common Dog Behavior Myths Get Busted Ever heard that old dogs can’t learn new tricks? Or that canines are only truly happy running off leash? Read More: The truth about letting dogs on furniture - New Puppy - Adult Dog - Senior Dog Your New Puppy - Selecting the Right Puppy - How to Care for a New Pup - What to Know About Feeding - Puppy Socialization View more › Your Adult Dog - Benefits of Adopting an Adult - The Best Way to Introduce a Dog and a Cat - How to Keep His Teeth Clean - A Trick for Keeping Dogs Healthy View more › Your Senior Dog - Caring for Senior Dogs - Making Older Dogs More Comfortable - Help an Arthritic Dog - The Aging Brain View more › Popular Dog Breeds - Beagle - Boston Terrier - Boxer - Bulldog - Cavalier King Charles Spaniel - Chihuahua - Cocker Spaniel - Dachshund - German Shepherd - Havanese - Jack Russell Terrier / Parson Russell Terrier - Labrador Retriever - Pomeranian - Poodle - Rhodesian Ridgeback - Rottweiler - Shih Tzu - Siberian Husky - West Highland White Terrier - Yorkshire Terrier Choose a Breed Beagle Boston Terrier Boxer Bulldog Cavalier King Charles Spaniel Chihuahua Cocker Spaniel Dachshund German Shepherd Havanese Jack Russell Terrier / Parson Russell Terrier Labrador Retriever Pomeranian Poodle Rhodesian Ridgeback Rottweiler Shih Tzu Siberian Husky West Highland White Terrier Yorkshire Terrier View All Dog Breeds › Dog Health Why Does My Dog... Who hasn’t wondered, “Why does my dog cock her head?” There are many reasons your dog tilts her head. When you should worry › Popular Dog Topics - Common Potty Problems Solved - Teach Your Dog to Stop Barking - Vaccine Recommendations - Why Dogs Pant? - Teach Your Dog to Stop Begging Choose a Topic Common Potty Problems Solved Teach Your Dog to Stop Barking Vaccine Recommendations Why Dogs Pant? Teach Your Dog to Stop Begging Select Dog or Cat. FIND YOUR PERFECT BREED Take our breed finder quiz to learn which dog or cat breed is the best match for you. Step 1: Do you want a dog or a cat? Dog Cat Ask Dr. Andy RoarkView All Experts » My Pet Has Cancer. Now What? Answer: Telling people their pets have cancer is probably the worst part of my job. Unfortunately, I have to do it with some regularity. Full answer › More From Dr. Roark: The World Is a Scary Place for Pets The parasites and diseases that pets can get are downright terrifying. When I think about what it would be like to be covered in fleas... Find out more › View All Experts » TRICK OF THE DAY Teaching your dog to speak on cue isn't just a cute trick; your dog needs to know the speak command before he can learn to be quiet when asked. When you should reward him › If the video doesn't start playing momentarily, please install the latest version of Flash. You need JavaScript enabled to view this video. $(document).ready(function() { //site setting var kaltura_player_id_for_this_enhancement = kaltura_player_id_enhancement; psd.video.createUniversal('vs-vid-player-i16afab3875fe4330a537d3d8b2be8073', '1_1bbpt0e6', kaltura_player_id_for_this_enhancement,\"enhancement\"); }); General Veterinary Hospital: The Case of the Poop-Eating Dog - - Twitter - - - Email Your Guide to Dogs - Dogs Main - Dog Breeds - Why Does My Dog... var dimm = [[300, 600],[300, 250]]; //var id = 'Vetstreet/Dogs/homepage_300x600'; //vsgoogle_dfp_gpt.defineSlot(id, dimm, 'adVetstreet-Dogs-homepage_300x600'); googletag.cmd.push(function() { var id = vsgoogle_dfp_gpt.defaults.account + '/Vetstreet/Dogs/homepage_300x600'; googletag.defineSlot(id, dimm, 'adVetstreet-Dogs-homepage_300x600').addService(googletag.companionAds()).addService(googletag.pubads()); googletag.companionAds().setRefreshUnfilledSlots(true); googletag.pubads().enableVideoAds(); googletag.enableServices(); }); vsgoogle_dfp_gpt.display('adVetstreet-Dogs-homepage_300x600'); Advertisement Find a Veterinarian Near... Please enter an address, city and/or zip code $(document).ready(function() { //console.log(\"find_vet module\", \"user:\",user, 'user[\"postalCode\"]:', user[\"postalCode\"]); find_vet.init(); }); Today on Vetstreet Another Reason to Banish Parasites Bartonella is a type bacteria that can be transmitted to cats, dogs and humans from exposure to infected fleas and… Why diagnosis can be difficult › The Best Fruits and Veggies for Dogs Want to give your pup yummy, low-calorie treats? We’ve got the skinny on which foods are OK to feed him. Watch our new video › Food Puzzles Are Worth the Effort Not sure about food puzzles? Our veterinarian reveals why the payoff for your pet is well worth any extra work. How to get started › 5 Ways to Care for Your Pet's Teeth With these simple dental care tips, you can help keep your canine’s adorable smile shiny and healthy for life. This treat helps reduce bad breath › You'll Love This Curly-Coated Kitty The friendly and inquisitive LaPerm has an easy-care coat that comes in a variety of colors and patterns. See if this cat is right for you › Watch the Latest Vetstreet Videos Check out our collection of more than 250 videos about pet training, animal behavior, dog and cat breeds and more. See the newest clips › Take Our Breed Finder Quiz Wonder which dog or cat best fits your lifestyle? Our new tool will narrow down more than 300 breeds for you. Find out which pets are your best… › -1) { href += \"&\" + TOV_TrackingParam; } else { href += \"?\" + TOV_TrackingParam; } $(item).attr(\"href\", href); }); }); Breed Spotlight Working - Leonberger - Breed Group: Working - Height: 25.5 to 31.5 inches at the shoulder - Weight: 120 to 170 pounds - Life Span: 6 to 8 years View More on Leonberger › Toy - Papillon - Breed Group: Toy - Height: 8 to 11 inches at the shoulder - Weight: 3 to 12 pounds - Life Span: 13 to 17 years View More on Papillon › Toy - Havanese - Breed Group: Toy - Height: 8.5 to 11.5 inches at the shoulder - Weight: 7 to 13 pounds - Life Span: 14 to 15 years View More on Havanese › Non-Sporting - Lhasa Apso - Breed Group: Non-Sporting - Height: 10 to 11 inches at the shoulder - Weight: 12 to 18 pounds - Life Span: 12 to 15 or more years View More on Lhasa Apso › Sporting - Labrador Retriever - Breed Group: Sporting - Height: 21.5 to 24.5 inches at shoulder - Weight: 55 to 80 pounds - Life Span: 10 to 13 years View More on Labrador Retriever › Working - Mastiff - Breed Group: Working - Height: 27.5 to 30 inches or more at the shoulder - Weight: 120 to 230 pounds - Life Span: 8 to 10 years View More on Mastiff › Working - Newfoundland - Breed Group: Working - Height: 26 to 28 inches at the shoulder - Weight: 100 to 150 pounds - Life Span: 8 to 10 years View More on Newfoundland › Herding - Old English Sheepdog - Breed Group: Herding - Height: 21 inches and up at the shoulder - Weight: 60 to 100 pounds - Life Span: 10 to 12 years View More on Old English Sheepdog › Working - Great Dane - Breed Group: Working - Height: 28 to 32 inches or more at the shoulder - Weight: 110 to 190 pounds - Life Span: 7 to 10 years View More on Great Dane › Toy - Italian Greyhound - Breed Group: Toy - Height: 13 to 15 inches at the shoulder - Weight: 7 to 15 pounds - Life Span: 12 to 15 years View More on Italian Greyhound › var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; googletag.cmd.push(function() { var id = vsgoogle_dfp_gpt.defaults.account + '/Vetstreet/Dogs/300x250_Sticky'; var dimm = [[300, 250], [320, 50]]; googletag.defineSlot(id, dimm, 'div-gpt-ad-0000015a-43d7-d861-a35e-c7f792e30000').addService(googletag.pubads()); googletag.enableServices(); }); googletag.cmd.push(function() { googletag.display('div-gpt-ad-0000015a-43d7-d861-a35e-c7f792e30000'); }); = 800) { var ceiling = $('#sticky').offset().top; if ($('#footer-social-media') != null) { var floor = $('#footer-social-media').offset().top; } else { var floor = $('#footer').offset().top; } var moduleHeight = sticky.height(); if ((floor - moduleHeight) <= ceiling) { sticky.css('position', 'static'); sticky.css('top', ceiling); } else { var windowTop = $(window).scrollTop(); if (ceiling < windowTop && windowTop < (floor - moduleHeight)) { sticky.css('position', 'fixed'); sticky.css({'top': '0'}); } else { sticky.css('position', 'static'); sticky.css('top', ceiling); } } $(window).scroll(function () { if ((floor - moduleHeight) <= ceiling) { sticky.css('position', 'static'); sticky.css('top', ceiling); } else { var windowTop = $(window).scrollTop(); if (ceiling < windowTop && windowTop < (floor - moduleHeight)) { sticky.css('position', 'fixed'); sticky.css({'top': '0'}); } else { sticky.css('position', 'static'); sticky.css('top', ceiling); } } }); } else { var ceiling = $('#sticky').offset().top; var floor = ceiling + $('#sticky').height(); var windowTop = $(window).scrollTop(); var footerTop = $('#footer-mobile').offset().top; var footerHeight = $('#footer-mobile').height(); sticky.css('position', 'fixed'); sticky.css('bottom', '0'); sticky.css('-webkit-backface-visibility', 'hidden'); var flag = true; if (((footerTop - windowTop) ($(window).height() - footerHeight)) && (flag)) { $('#page-wrapper').height(function (index, height) { return height + 50; }); flag = false; } $(window).scroll(function () { var windowTop = $(window).scrollTop(); if (((footerTop - windowTop) ($(window).height() - footerHeight)) && (flag)) { $('#page-wrapper').height(function (index, height) { return height + 50; }); flag = false; } }); } }); Thank you for subscribing. Subscribe <!-- Click here FOLLOW US ON TWITTER FOLLOW US ON FACEBOOK Vetstreet Site Map - Find a Vet - Learn - Care - Train - HealthyPet - Find Your Breed - Site Map Links - About Us - Privacy Policy - Terms of Use - Contact Us - Media Kit - Newsletter Subscription - Veterinary Services - Shop Your Vet - Follow Us - Facebook - Twitter - Google+ - Pinterest - Instagram - YouTube - RSS © 2001-2017 Vetstreet. All rights reserved. Powered by Brightspot.Vetstreet does not provide medical advice, diagnosis, or treatment. See Additional Information › Top of Page Find a Veterinarian Near... Vetstreet - FIND - Dogs - Cats - LEARN - CARE - TRAIN - SHOP - Marketplace Subscribe to Petwire Newsletter © 2001-2017 Vetstreet. All rights reserved. Powered by Brightspot. Vetstreet does not provide medical advice, diagnosis, or treatment. See Additional Information › (function () { var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true; po.src = 'https://apis.google.com/js/plusone.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s); })(); (function () { if (window.location.protocol != \"https:\") { BF_WIDGET_JS = document.createElement(\"script\"); BF_WIDGET_JS.type = \"text/javascript\"; BF_WIDGET_SRC = \"http://ct.buzzfeed.com/wd/UserWidget?u=vetstreet.com&to=1&or=vb&wid=1&cb=\" + (new Date()).getTime(); setTimeout(function () { document.getElementById(\"BF_WIDGET_1\").appendChild(BF_WIDGET_JS); BF_WIDGET_JS.src = BF_WIDGET_SRC }, 1); } })(); var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-27368494-1']); _gaq.push(['_setDomainName', 'vetstreet.com']); _gaq.push(['_trackPageview']); (function () { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); var _sf_async_config = {uid: 36331, domain: 'vetstreet.com'}; (function () { function loadChartbeat() { window._sf_endpt = (new Date()).getTime(); var e = document.createElement('script'); e.setAttribute('language', 'javascript'); e.setAttribute('type', 'text/javascript'); e.setAttribute('src', ((\"https:\" == document.location.protocol) ? \"https://a248.e.akamai.net/chartbeat.download.akamai.com/102508/\" : \"http://static.chartbeat.com/\") + \"js/chartbeat.js\"); document.body.appendChild(e); } ; var oldonload = window.onload; window.onload = (typeof window.onload != 'function') ? loadChartbeat : function () { oldonload(); loadChartbeat(); }; })(); $(document).ready( function() { if ( $( \".layout-3x1 .owl-carousel\" ).length ) { $('.layout-3x1 .owl-carousel').css('height', $(\".owl-carousel .owl-item.active img\").attr(\"height\")); $('.layout-3x1 .owl-carousel').css('background-size', '100%'); $('.layout-3x1 .owl-carousel').css('box-shadow', '0 0 10px #999'); $('.layout-3x1 .owl-carousel').css('border', '3px solid white'); $('.layout-3x1 .owl-carousel').css('background-image', 'url(' + $(\".owl-carousel .owl-item.active img\").attr(\"src\") + ')'); } /*fix misplced dom elements - sidebar + footer*/ if($('#content').children('#sidebar').length){ var sidebar = $('#sidebar'); var content= $('#content'); sidebar.insertAfter(content); } if($('#content').children('.footer-alignment').length){ var footer = $('.footer-alignment'); var sidebar = $('#sidebar'); footer.insertAfter(sidebar); } /*PHV-53 */ $('#hp-dropdown li a').first().text('From Our Magazine'); $('#hp-dropdown-mob li a').first().text('From Our Magazine'); /*PHV-60*/ $('li#hp-magazine a:first').click(function(){ window.location.replace('/healthypet'); }); /*PHV-62 */ $('#addContestEntryForm .submit.btn').on('click', function(){ if($('#addContestEntryForm').valid()){ $('#addContestEntryForm #submit').val('Loading Image ...'); } }); $(\".pin-it-button\").each( function() { var pin_url = \"http://pinterest.com/pin/create/button/?url=\"+ encodeURIComponent(document.location.toString()) + \"&media=\"+ encodeURIComponent($(\"meta[property='og:image']\").attr(\"content\")) + \"&description=\" + encodeURIComponent($(\"meta[itemprop='description']\").attr(\"content\")); $(this).attr(\"href\", pin_url); }); if (window.location.pathname == \"/our-pet-experts/kristen-seymour-bio\"){ $(\"#facebook-wall\").hide(); } $(\"#site-search-mobile #search\").attr('placeholder','Search Vetstreet'); // ****** Slideshow height fix ******// if ($(window).width() 1){ var prevSelector = \".prev-answer.back-button.\"+qIndex; $(prevSelector).click(function(){ var dcsuri = '/TakeQuiz-prev-answer-from-question-'+qIndex; dcsMultiTrack('DCS.dcsuri',dcsuri, 'WT.si_n', si_n, 'WT.si_x', '2', 'WT.dl', '99'); }); } if (qIndex == 1){ var prevSelector = \".prev-answer.back-button.\"+qIndex; $(prevSelector).click(function(){ var dcsuri = '/TakeQuiz-back-from-question-'+qIndex; dcsMultiTrack('DCS.dcsuri',dcsuri, 'WT.si_n', si_n, 'WT.si_x', '2', 'WT.dl', '99'); }); } var ansSelector = \".show-answer.question-\"+qIndex; $(ansSelector).click(function(){ var dcsuri = '/TakeQuiz-show-answer-to-question-'+qIndex; dcsMultiTrack('DCS.dcsuri',dcsuri, 'WT.si_n', si_n, 'WT.si_x', '2', 'WT.dl', '99'); }); var prevQSelector = \".prev-question.back-button.\"+qIndex; $(prevQSelector).click(function(){ var dcsuri = '/TakeQuiz-back-to-question-'+qIndex; dcsMultiTrack('DCS.dcsuri',dcsuri, 'WT.si_n', si_n, 'WT.si_x', '2', 'WT.dl', '99'); }); }); }); //*********END temp webtrends fix*****// $(document).ready(function () { $(\"#newsletterSubscribeFormFooter\").validate({ errorClass: 'error', validClass: 'success', highlight: function (element, errorClass, validClass) { $(element).addClass(errorClass).removeClass(validClass); }, unhighlight: function (element, errorClass, validClass) { $(element).closest(\".error\").removeClass(errorClass).addClass(validClass); }, rules: { email: { required: true, email: true } }, submitHandler: function (form) { console.log('submit'); e.preventDefault(); var $form = $('#newsletterSubscribeFormFooter'); var formData = $form.serialize(); $.post(\"/ExactTargetServlet/newsletterSubscribe\", formData, function (data) { var htmlStr = \"\"; var count = 0; $.each(JSON.parse(data), function (idx, obj) { if (obj.success == \"false\") { htmlStr += \"there was a problem, please try again later\"; $('#footer-newsletter-success').html(htmlStr); } }); $('.newsletterSubscribeFormFooter').hide(); $('#footer-newsletter-success').show(); }); return false; }, invalidHandler: function (form, validator) { console.log('invalid form'); } }); $(\"#newsletterSubscribeForm\").validate({ errorClass: 'error', validClass: 'success', highlight: function (element, errorClass, validClass) { $(element).addClass(errorClass).removeClass(validClass); }, unhighlight: function (element, errorClass, validClass) { $(element).closest(\".error\").removeClass(errorClass).addClass(validClass); }, rules: { email: { required: true, email: true } }, submitHandler: function (form) { e.preventDefault(); var $form = $('#newsletterSubscribeForm'); var formData = $form.serialize(); $.post(\"/ExactTargetServlet/newsletterSubscribe\", formData, function (data) { var htmlStr = \"\"; var count = 0; $.each(JSON.parse(data), function (idx, obj) { if (obj.success == \"false\") { //htmlStr += \"there was a problem, please try again later\"; $('#newsletter-success').html(htmlStr); } }); $('#newsletter-initial-rr').hide(); $('#newsletter-success').show(); }); return false; }, invalidHandler: function (form, validator) { console.log('invalid form'); } }); });"},{"url":"https://www.npmjs.com/package/natural","text":"natural .marketing { margin: 0px; margin-bottom: 40px; padding: 0.7em; font-size: 20px; font-style: normal; font-variant: normal; font-weight: normal; background: rgba(0, 0, 0, 0.02); border-radius: 0px 0px 2px 2px; border-bottom: 1px solid rgba(0, 0, 0, 0.2); color: #666; text-decoration: none; text-align: center; } .marketing .inline-hed { font-weight: 600; } .marketing .inline-message { font-weight: 300; padding: 0em 0.5em; } .marketing a { font-weight: 400; text-decoration: none; color: #cb3837; white-space: nowrap; } Search - sign up or log in - log in node package manager Toggle Navigation - npm Enterprise - features - pricing - documentation - support Easy collaboration. Discover, share, and reuse code in your team. Create a free org » natural natural \"Natural\" is a general natural language facility for nodejs. Tokenizing, stemming, classification, phonetics, tf-idf, WordNet, string similarity, and some inflections are currently supported. It's still in the early stages, so we're very interested in bug reports, contributions and the like. Note that many algorithms from Rob Ellis's node-nltools are being merged into this project and will be maintained from here onward. At the moment, most of the algorithms are English-specific, but in the long-term, some diversity will be in order. Thanks to Polyakov Vladimir, Russian stemming has been added!, Thanks to David Przybilla, Spanish stemming has been added!. Aside from this README, the only documentation is this DZone article, this free course on Egghead.io, and here on my blog, which is a bit older. TABLE OF CONTENTS - Installation - Tokenizers - String Distance - Stemmers - Classifiers - Phonetics - Inflectors - N-Grams - tf-idf - Tries - EdgeWeightedDigraph - ShortestPathTree - LongestPathTree - WordNet - Spellcheck - POS Tagger - Acknowledgements/references - Development - License Installation If you're just looking to use natural without your own node application, you can install via NPM like so: npm install natural If you're interested in contributing to natural, or just hacking on it, then by all means fork away! Tokenizers Word, Regexp, and Treebank tokenizers are provided for breaking text up into arrays of tokens: var natural = require('natural');var tokenizer = new natural.WordTokenizer();console.log(tokenizer.tokenize(\"your dog has fleas.\"));// [ 'your', 'dog', 'has', 'fleas' ] The other tokenizers follow a similar pattern: tokenizer = new natural.TreebankWordTokenizer();console.log(tokenizer.tokenize(\"my dog hasn't any fleas.\"));// [ 'my', 'dog', 'has', 'n\\'t', 'any', 'fleas', '.' ] tokenizer = new natural.RegexpTokenizer({pattern: /\\-/});console.log(tokenizer.tokenize(\"flea-dog\"));// [ 'flea', 'dog' ] tokenizer = new natural.WordPunctTokenizer();console.log(tokenizer.tokenize(\"my dog hasn't any fleas.\"));// [ 'my', 'dog', 'hasn', '\\'', 't', 'any', 'fleas', '.' ] String Distance Natural provides an implementation of the Jaro–Winkler string distance measuring algorithm. This will return a number between 0 and 1 which tells how closely the strings match (0 = not at all, 1 = exact match): var natural = require('natural');console.log(natural.JaroWinklerDistance(\"dixon\",\"dicksonx\"))console.log(natural.JaroWinklerDistance('not', 'same')); Output: 0.74666666666666660 Natural also offers support for Levenshtein distances: var natural = require('natural');console.log(natural.LevenshteinDistance(\"ones\",\"onez\"));console.log(natural.LevenshteinDistance('one', 'one')); Output: 10 The cost of the three edit operations are modifiable for Levenshtein: console.log(natural.LevenshteinDistance(\"ones\",\"onez\", { insertion_cost: 1, deletion_cost: 1, substitution_cost: 1})); Output: 1 And Dice's co-efficient: var natural = require('natural');console.log(natural.DiceCoefficient('thing', 'thing'));console.log(natural.DiceCoefficient('not', 'same')); Output: 10 Stemmers Currently stemming is supported via the Porter and Lancaster (Paice/Husk) algorithms. var natural = require('natural'); This example uses a Porter stemmer. \"word\" is returned. console.log(natural.PorterStemmer.stem(\"words\")); // stem a single word in Russian: console.log(natural.PorterStemmerRu.stem(\"падший\")); in Spanish: console.log(natural.PorterStemmerEs.stem(\"jugaría\")); attach() patches stem() and tokenizeAndStem() to String as a shortcut to PorterStemmer.stem(token). tokenizeAndStem() breaks text up into single words and returns an array of stemmed tokens. natural.PorterStemmer.attach();console.log(\"i am waking up to the sounds of chainsaws\".tokenizeAndStem());console.log(\"chainsaws\".stem()); the same thing can be done with a Lancaster stemmer: natural.LancasterStemmer.attach();console.log(\"i am waking up to the sounds of chainsaws\".tokenizeAndStem());console.log(\"chainsaws\".stem()); Classifiers Two classifiers are currently supported, Naive Bayes and logistic regression. The following examples use the BayesClassifier class, but the LogisticRegressionClassifier class could be substituted instead. var natural = require('natural');var classifier = new natural.BayesClassifier(); You can train the classifier on sample text. It will use reasonable defaults to tokenize and stem the text. classifier.addDocument('i am long qqqq', 'buy');classifier.addDocument('buy the q\\'s', 'buy');classifier.addDocument('short gold', 'sell');classifier.addDocument('sell gold', 'sell'); classifier.train(); Outputs \"sell\" console.log(classifier.classify('i am short silver')); Outputs \"buy\" console.log(classifier.classify('i am long copper')); You have access to the set of matched classes and the associated value from the classifier. Outputs: [ { label: 'buy', value: 0.39999999999999997 }, { label: 'sell', value: 0.19999999999999998 } ] From this: console.log(classifier.getClassifications('i am long copper')); The classifier can also be trained with and can classify arrays of tokens, strings, or any mixture of the two. Arrays let you use entirely custom data with your own tokenization/stemming, if you choose to implement it. classifier.addDocument(['sell', 'gold'], 'sell'); The training process can be monitored by subscribing to the event trainedWithDocument that's emitted by the classifier, this event's emitted each time a document is finished being trained against: classifier.events.on('trainedWithDocument', function (obj) { console.log(obj); /* { * total: 23 // There are 23 total documents being trained against * index: 12 // The index/number of the document that's just been trained against * doc: {...} // The document that has just been indexed * } */ }); A classifier can also be persisted and recalled so you can reuse a training classifier.save('classifier.json', function(err, classifier) { // the classifier is saved to the classifier.json file! }); To recall from the classifier.json saved above: natural.BayesClassifier.load('classifier.json', null, function(err, classifier) { console.log(classifier.classify('long SUNW')); console.log(classifier.classify('short SUNW'));}); A classifier can also be serialized and deserialized like so: var classifier = new natural.BayesClassifier();classifier.addDocument(['sell', 'gold'], 'sell');classifier.addDocument(['buy', 'silver'], 'buy'); // serialize var raw = JSON.stringify(classifier);// deserialize var restoredClassifier = natural.BayesClassifier.restore(JSON.parse(raw));console.log(restoredClassifier.classify('i should sell that')); Note: if using the classifier for languages other than English you may need to pass in the stemmer to use. In fact, you can do this for any stemmer including alternate English stemmers. The default is the PorterStemmer. const PorterStemmerRu = require('./node_modules/natural/lib/natural/stemmers/porter_stemmer_ru');var classifier = new natural.BayesClassifier(PorterStemmerRu); Phonetics Phonetic matching (sounds-like) matching can be done with the SoundEx, Metaphone or DoubleMetaphone algorithms var natural = require('natural');var metaphone = natural.Metaphone;var soundEx = natural.SoundEx; var wordA = 'phonetics';var wordB = 'fonetix'; To test the two words to see if they sound alike: if(metaphone.compare(wordA, wordB)) console.log('they sound alike!'); The raw phonetics are obtained with process(): console.log(metaphone.process('phonetics')); A maximum code length can be supplied: console.log(metaphone.process('phonetics', 3)); DoubleMetaphone deals with two encodings returned in an array. This feature is experimental and subject to change: var natural = require('natural');var dm = natural.DoubleMetaphone; var encodings = dm.process('Matrix');console.log(encodings[0]);console.log(encodings[1]); Attaching will patch String with useful methods: metaphone.attach(); soundsLike is essentially a shortcut to Metaphone.compare: if(wordA.soundsLike(wordB)) console.log('they sound alike!'); The raw phonetics are obtained with phonetics(): console.log('phonetics'.phonetics()); Full text strings can be tokenized into arrays of phonetics (much like how tokenization-to-arrays works for stemmers): console.log('phonetics rock'.tokenizeAndPhoneticize()); Same module operations applied with SoundEx: if(soundEx.compare(wordA, wordB)) console.log('they sound alike!'); The same String patches apply with soundEx: soundEx.attach(); if(wordA.soundsLike(wordB)) console.log('they sound alike!'); console.log('phonetics'.phonetics()); Inflectors Nouns Nouns can be pluralized/singularized with a NounInflector: var natural = require('natural');var nounInflector = new natural.NounInflector(); To pluralize a word (outputs \"radii\"): console.log(nounInflector.pluralize('radius')); To singularize a word (outputs \"beer\"): console.log(nounInflector.singularize('beers')); Like many of the other features, String can be patched to perform the operations directly. The \"Noun\" suffix on the methods is necessary, as verbs will be supported in the future. nounInflector.attach();console.log('radius'.pluralizeNoun());console.log('beers'.singularizeNoun()); Numbers Numbers can be counted with a CountInflector: var countInflector = natural.CountInflector; Outputs \"1st\": console.log(countInflector.nth(1)); Outputs \"111th\": console.log(countInflector.nth(111)); Present Tense Verbs Present Tense Verbs can be pluralized/singularized with a PresentVerbInflector. This feature is still experimental as of 0.0.42, so use with caution, and please provide feedback. var verbInflector = new natural.PresentVerbInflector(); Outputs \"becomes\": console.log(verbInflector.singularize('become')); Outputs \"become\": console.log(verbInflector.pluralize('becomes')); Like many other natural modules, attach() can be used to patch strings with handy methods. verbInflector.attach();console.log('walk'.singularizePresentVerb());console.log('walks'.pluralizePresentVerb()); N-Grams n-grams can be obtained for either arrays or strings (which will be tokenized for you): var NGrams = natural.NGrams; bigrams console.log(NGrams.bigrams('some words here'));console.log(NGrams.bigrams(['some', 'words', 'here'])); Both of the above output: [ [ 'some', 'words' ], [ 'words', 'here' ] ] trigrams console.log(NGrams.trigrams('some other words here'));console.log(NGrams.trigrams(['some', 'other', 'words', 'here'])); Both of the above output: [ [ 'some', 'other', 'words' ], [ 'other', 'words', 'here' ] ] arbitrary n-grams console.log(NGrams.ngrams('some other words here for you', 4));console.log(NGrams.ngrams(['some', 'other', 'words', 'here', 'for', 'you'], 4)); The above outputs: [ [ 'some', 'other', 'words', 'here' ], [ 'other', 'words', 'here', 'for' ], [ 'words', 'here', 'for', 'you' ] ] padding n-grams can also be returned with left or right padding by passing a start and/or end symbol to the bigrams, trigrams or ngrams. console.log(NGrams.ngrams('some other words here for you', 4, '[start]', '[end]')); The above will output: [ [ '[start]', '[start]', '[start]', 'some' ], [ '[start]', '[start]', 'some', 'other' ], [ '[start]', 'some', 'other', 'words' ], [ 'some', 'other', 'words', 'here' ], [ 'other', 'words', 'here', 'for' ], [ 'words', 'here', 'for', 'you' ], [ 'here', 'for', 'you', '[end]' ], [ 'for', 'you', '[end]', '[end]' ], [ 'you', '[end]', '[end]', '[end]' ] ] For only end symbols, pass null for the start symbol, for instance: console.log(NGrams.ngrams('some other words here for you', 4, null, '[end]')); Will output: [ [ 'some', 'other', 'words', 'here' ], [ 'other', 'words', 'here', 'for' ], [ 'words', 'here', 'for', 'you' ], [ 'here', 'for', 'you', '[end]' ], [ 'for', 'you', '[end]', '[end]' ], [ 'you', '[end]', '[end]', '[end]' ] ] NGramsZH For Chinese like languages, you can use NGramsZH to do a n-gram, and all apis are the same: var NGramsZH = natural.NGramsZH;console.log(NGramsZH.bigrams('中文测试'));console.log(NGramsZH.bigrams(['中', '文', '测', '试']));console.log(NGramsZH.trigrams('中文测试'));console.log(NGramsZH.trigrams(['中', '文', '测', '试']));console.log(NGramsZH.ngrams('一个中文测试', 4));console.log(NGramsZH.ngrams(['一', '个', '中', '文', '测', '试'], 4)); tf-idf Term Frequency–Inverse Document Frequency (tf-idf) is implemented to determine how important a word (or words) is to a document relative to a corpus. The following example will add four documents to a corpus and determine the weight of the word \"node\" and then the weight of the word \"ruby\" in each document. var natural = require('natural');var TfIdf = natural.TfIdf;var tfidf = new TfIdf(); tfidf.addDocument('this document is about node.');tfidf.addDocument('this document is about ruby.');tfidf.addDocument('this document is about ruby and node.');tfidf.addDocument('this document is about node. it has node examples'); console.log('node --------------------------------');tfidf.tfidfs('node', function(i, measure) { console.log('document #' + i + ' is ' + measure);}); console.log('ruby --------------------------------');tfidf.tfidfs('ruby', function(i, measure) { console.log('document #' + i + ' is ' + measure);}); The above outputs: node -------------------------------- document #0 is 1 document #1 is 0 document #2 is 1 document #3 is 2 ruby -------------------------------- document #0 is 0 document #1 is 1.2876820724517808 document #2 is 1.2876820724517808 document #3 is 0 This approach can also be applied to individual documents. The following example measures the term \"node\" in the first and second documents. console.log(tfidf.tfidf('node', 0));console.log(tfidf.tfidf('node', 1)); A TfIdf instance can also load documents from files on disk. var tfidf = new TfIdf();tfidf.addFileSync('data_files/one.txt');tfidf.addFileSync('data_files/two.txt'); Multiple terms can be measured as well, with their weights being added into a single measure value. The following example determines that the last document is the most relevant to the words \"node\" and \"ruby\". var natural = require('natural');var TfIdf = natural.TfIdf;var tfidf = new TfIdf(); tfidf.addDocument('this document is about node.');tfidf.addDocument('this document is about ruby.');tfidf.addDocument('this document is about ruby and node.'); tfidf.tfidfs('node ruby', function(i, measure) { console.log('document #' + i + ' is ' + measure);}); The above outputs: document #0 is 1 document #1 is 1 document #2 is 2 The examples above all use strings, which case natural to automatically tokenize the input. If you wish to perform your own tokenization or other kinds of processing, you can do so, then pass in the resultant arrays later. This approach allows you to bypass natural's default preprocessing. var natural = require('natural');var TfIdf = natural.TfIdf;var tfidf = new TfIdf(); tfidf.addDocument(['document', 'about', 'node']);tfidf.addDocument(['document', 'about', 'ruby']);tfidf.addDocument(['document', 'about', 'ruby', 'node']);tfidf.addDocument(['document', 'about', 'node', 'node', 'examples']); tfidf.tfidfs(['node', 'ruby'], function(i, measure) { console.log('document #' + i + ' is ' + measure);}); It's possible to retrieve a list of all terms in a document, sorted by their importance. tfidf.listTerms(0 /*document index*/).forEach(function(item) { console.log(item.term + ': ' + item.tfidf);}); A TfIdf instance can also be serialized and deserialized for save and recall. var tfidf = new TfIdf();tfidf.addDocument('document one', 'un');tfidf.addDocument('document Two', 'deux');var s = JSON.stringify(tfidf);// save \"s\" to disk, database or otherwise // assuming you pulled \"s\" back out of storage. var tfidf = new TfIdf(JSON.parse(s)); Tries Tries are a very efficient data structure used for prefix-based searches. Natural comes packaged with a basic Trie implementation which can support match collection along a path, existence search and prefix search. Building The Trie You need to add words to build up the dictionary of the Trie, this is an example of basic Trie set up: var natural = require('natural');var Trie = natural.Trie; var trie = new Trie(); // Add one string at a time trie.addString(\"test\"); // Or add many strings trie.addStrings([\"string1\", \"string2\", \"string3\"]); Searching Contains The most basic operation on a Trie is to see if a search string is marked as a word in the Trie. console.log(trie.contains(\"test\")); // true console.log(trie.contains(\"asdf\")); // false Find Prefix The find prefix search will find the longest prefix that is identified as a word in the trie. It will also return the remaining portion of the string which it was not able to match. console.log(trie.findPrefix(\"tester\")); // ['test', 'er'] console.log(trie.findPrefix(\"string4\")); // [null, '4'] console.log(trie.findPrefix(\"string3\")); // ['string3', ''] All Prefixes on Path This search will return all prefix matches along the search string path. trie.addString(\"tes\");trie.addString(\"est\");console.log(trie.findMatchesOnPath(\"tester\")); // ['tes', 'test']; All Keys with Prefix This search will return all of the words in the Trie with the given prefix, or [ ] if not found. console.log(trie.keysWithPrefix(\"string\")); // [\"string1\", \"string2\", \"string3\"] Case-Sensitivity By default the trie is case-sensitive, you can use it in case-_in_sensitive mode by passing false to the Trie constructor. trie.contains(\"TEST\"); // false var ciTrie = new Trie(false);ciTrie.addString(\"test\");ciTrie.contains(\"TEsT\"); // true In the case of the searches which return strings, all strings returned will be in lower case if you are in case-_in_sensitive mode. EdgeWeightedDigraph EdgeWeightedDigraph represents a digraph, you can add an edge, get the number vertexes, edges, get all edges and use toString to print the Digraph. initialize a digraph: var EdgeWeightedDigraph = natural.EdgeWeightedDigraph;var digraph = new EdgeWeightedDigraph();digraph.add(5,4,0.35);digraph.add(5,1,0.32);digraph.add(1,3,0.29);digraph.add(6,2,0.40);digraph.add(3,6,0.52);digraph.add(6,4,0.93); the api used is: add(from, to, weight). get the number of vertexes: console.log(digraph.v()); you will get 5. get the number of edges: console.log(digraph.e()); you will get 5. ShortestPathTree ShortestPathTree represents a data type for solving the single-source shortest paths problem in edge-weighted directed acyclic graphs (DAGs). The edge weights can be positive, negative, or zero. There are three APIs: getDistTo(vertex), hasPathTo(vertex), pathTo(vertex). var ShortestPathTree = natural.ShortestPathTree;var spt = new ShortestPathTree(digraph, 5); digraph is an instance of EdgeWeightedDigraph, the second param is the start vertex of DAG. getDistTo(vertex) Will return the dist to vertex. console.log(spt.getDistTo(4)); the output will be: 0.35 hasDistTo(vertex) console.log(spt.hasDistTo(4));console.log(spt.hasDistTo(5)); output will be: truefalse pathTo(vertex) this will return a shortest path: console.log(spt.pathTo(4)); output will be: [5, 4] LongestPathTree LongestPathTree represents a data type for solving the single-source longest paths problem in edge-weighted directed acyclic graphs (DAGs). The edge weights can be positive, negative, or zero. There are three APIs same as ShortestPathTree: getDistTo(vertex), hasPathTo(vertex), pathTo(vertex). var ShortestPathTree = natural.ShortestPathTree;var spt = new ShortestPathTree(digraph, 5); digraph is an instance of EdgeWeightedDigraph, the second param is the start vertex of DAG. getDistTo(vertex) Will return the dist to vertex. console.log(spt.getDistTo(4)); the output will be: 2.06 hasDistTo(vertex) console.log(spt.hasDistTo(4));console.log(spt.hasDistTo(5)); output will be: truefalse pathTo(vertex) this will return a longest path: console.log(spt.pathTo(4)); output will be: [5, 1, 3, 6, 4] WordNet One of the newest and most experimental features in natural is WordNet integration. Here's an example of using natural to look up definitions of the word node. To use the WordNet module, first install the WordNet database files using wordnet-db: npm install wordnet-db Keep in mind that the WordNet integration is to be considered experimental at this point, and not production-ready. The API is also subject to change. For an implementation with vastly increased performance, as well as a command-line interface, see wordpos. Here's an example of looking up definitions for the word \"node\". var wordnet = new natural.WordNet(); wordnet.lookup('node', function(results) { results.forEach(function(result) { console.log('------------------------------------'); console.log(result.synsetOffset); console.log(result.pos); console.log(result.lemma); console.log(result.synonyms); console.log(result.pos); console.log(result.gloss); });}); Given a synset offset and a part of speech, a definition can be looked up directly. var wordnet = new natural.WordNet(); wordnet.get(4424418, 'n', function(result) { console.log('------------------------------------'); console.log(result.lemma); console.log(result.pos); console.log(result.gloss); console.log(result.synonyms);}); If you have manually downloaded the WordNet database files, you can pass the folder to the constructor: var wordnet = new natural.WordNet('/my/wordnet/dict'); As of v0.1.11, WordNet data files are no longer automatically downloaded. Princeton University \"About WordNet.\" WordNet. Princeton University. 2010. http://wordnet.princeton.edu Spellcheck A probabilistic spellchecker based on http://norvig.com/spell-correct.html This is best constructed with an array of tokens from a corpus, but a simple list of words from a dictionary will work. var corpus = ['something', 'soothing'];var spellcheck = new natural.Spellcheck(corpus); It uses the trie datastructure for fast boolean lookup of a word spellcheck.isCorrect('cat'); // false It suggests corrections (sorted by probability in descending order) that are up to a maximum edit distance away from the input word. According to Norvig, a max distance of 1 will cover 80% to 95% of spelling mistakes. After a distance of 2, it becomes very slow. spellcheck.getCorrections('soemthing', 1); // ['something'] spellcheck.getCorrections('soemthing', 2); // ['something', 'soothing'] POS Tagger This is a part-of-speech tagger based on Eric Brill's transformational algorithm. Transformation rules are specified in external files. Usage var natural = require(\"natural\");var path = require(\"path\"); var base_folder = path.join(path.dirname(require.resolve(\"natural\")), \"brill_pos_tagger\");var rulesFilename = base_folder + \"/data/English/tr_from_posjs.txt\";var lexiconFilename = base_folder + \"/data/English/lexicon_from_posjs.json\";var defaultCategory = 'N'; var lexicon = new natural.Lexicon(lexiconFilename, defaultCategory);var rules = new natural.RuleSet(rulesFilename);var tagger = new natural.BrillPOSTagger(lexicon, rules); var sentence = [\"I\", \"see\", \"the\", \"man\", \"with\", \"the\", \"telescope\"];console.log(JSON.stringify(tagger.tag(sentence)));// [[\"I\",\"NN\"],[\"see\",\"VB\"],[\"the\",\"DT\"],[\"man\",\"NN\"],[\"with\",\"IN\"],[\"the\",\"DT\"],[\"telescope\",\"NN\"]] Lexicon The lexicon is either a JSON file that has the following structure: { \"word1\": [\"cat1\"], \"word2\": [\"cat2\", \"cat3\"], ...} or a text file: word1 cat1 cat2 word2 cat3 ... Words may have multiple categories in the lexicon file. The tagger uses only the first category specified. Specifying transformation rules Transformation rules are specified as follows: OLD_CAT NEW_CAT PREDICATE PARAMETER This means that if the category of the current position is OLD_CAT and the predicate is true, the category is replaced by NEW_CAT. The predicate may use the parameter in different ways: sometimes the parameter is used for specifying the outcome of the predicate: NN CD CURRENT-WORD-IS-NUMBER YES This means that if the outcome of predicate CURRENT-WORD-IS-NUMBER is YES, the category is replaced by CD. The parameter can also be used to check the category of a word in the sentence: VBD NN PREV-TAG DT Here the category of the previous word must be DT for the rule to be applied. Algorithm The tagger applies transformation rules that may change the category of words. The input sentence must be split into words which are assigned with categories. The tagged sentence is then processed from left to right. At each step all rules are applied once; rules are applied in the order in which they are specified. Algorithm: function(sentence) { var tagged_sentence = new Array(sentence.length); // snip // Apply transformation rules for (var i = 0, size = sentence.length; i < size; i++) { this.transformation_rules.forEach(function(rule) { rule.apply(tagged_sentence, i); }); } return(tagged_sentence);} Adding a predicate Predicates are defined in module lib/RuleTemplates.js. In that file predicate names are mapped to metadata for generaring transformation rules. The following properties must be supplied: - Name of the predicate - A function that evaluates the predicate (should return a boolean) - A window [i, j] that defines the span of the predicate in the sentence relative to the current position - The number of parameter the predicate needs: 0, 1 or 2 - If relevant, a function for parameter 1 that returns its possible values at the current position in the sentence (for generating rules in training) - If relevant, a function for parameter 2 that returns its possible values at the current position in the sentence (for training) A typical entry for a rule templates looks like this: \"NEXT-TAG\": { // maps to the predicate function \"function\": next_tag_is, // Minimum required window before or after current position to be a relevant predicate \"window\": [0, 1], // The number of parameters the predicate takes \"nrParameters\": 1, // Function that returns relevant values for parameter 1 \"parameter1Values\": nextTagParameterValues } A predicate function accepts a tagged sentence, the current position in the sentence that should be tagged, and the outcome(s) of the predicate. An example of a predicate that checks the category of the current word: function next_tag_is(tagged_sentence, i, parameter) { if (i < tagged_sentence.length - 1) { return(tagged_sentence[i+1][1] === parameter); } else { return(false); }} A values function for a parameter returns an array all possible parameter values given a location in a tagged sentence. function nextTagParameterValues(sentence, i) { if (i < sentence.length - 1) { return [sentence[i + 1].tag]; } else { return []; }} Please note that these functions work with a different data type. Here, a sentence is an array of tokens and tokens are maps that have at least a token (word) and a tag. Training The trainer allows to learn a new set of transformation rules from a corpus. It takes as input a tagged corpus and a set of rule templates. The algorithm generates positive rules (rules that apply at some location in the corpus) from the templates and iteratively extends and optimises the rule set. First, a corpus should be loaded. Currently, the format of Brown corpus is supported. Then a lexicon can be created from the corpus. The lexicon is needed for tagging the sentences before the learning algorithm is applied. var natural = require(natural);var text = fs.readFileSync(brownCorpusFile, 'utf8');var corpus = new natural.Corpus(text, 1);var lexicon = corpus.buildLexicon(); The next step is to create a set of rule templates from which the learning algorithm can generate transformation rules. Rule templates are defined in PredicateMapping.js. var natural require('natural');var templateNames = [ \"NEXT-TAG\", \"NEXT-WORD-IS-CAP\", \"PREV-1-OR-2-OR-3-TAG\", \"...\",];var templates = templateNames.map(function(name) { return new natural.RuleTemplate(name);}); Using lexicon and rule templates we can now start the trainer as follows. var natural require('natural');var Tester = require('natural.BrillPOSTrainer');var trainer = new Trainer(/* optional threshold */);var ruleSet = trainer.train(corpus, templates, lexicon); A threshold value can be passed to constructor. Transformation rules with a score below the threshold are removed after training. The train method returns a set of transformation rules that can be used to create a POS tagger as usual. Also you can output the rule set in the right format for later usage. console.log(ruleSet.prettyPrint()); Testing Now we can apply the lexicon and rule set to a test set. var tester = new natural.BrillPOSTester();var tagger = new natural.BrillPOSTagger(lexicon, ruleSet);var scores = tester.test(corpora[1], tagger); The test method returns an array of two percentages: first percentage is the ratio of right tags after tagging with the lexicon; second percentage is the ratio of right tags after applying the transformation rules. console.log(\"Test score lexicon \" + scores[0] + \"%\");console.log(\"Test score after applying rules \" + scores[1] + \"%\"); Acknowledgements and References - Part of speech tagger by Percy Wegmann, https://code.google.com/p/jspos/ - Node.js version of jspos: https://github.com/neopunisher/pos-js - A simple rule-based part of speech tagger, Eric Brill, Published in: Proceeding ANLC '92 Proceedings of the third conference on Applied natural language processing, Pages 152-155. http://dl.acm.org/citation.cfm?id=974526 - Exploring the Statistical Derivation of Transformational Rule Sequences for Part-of-Speech Tagging, Lance A. Ramshaw and Mitchell P. Marcus. http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d4/data/pdf/anthology-PDF/W/W94/W94-0111.pdf - Brown Corpus, https://en.wikipedia.org/wiki/Brown_Corpus Development When developing, please: - Write unit tests - Make sure your unit tests pass The current configuration of the unit tests requires the following environment variable to be set: export NODE_PATH=. License Copyright (c) 2011, 2012 Chris Umbel, Rob Ellis, Russell Mull Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. WordNet License This license is available as the file LICENSE in any downloaded version of WordNet. WordNet 3.0 license: (Download) WordNet Release 3.0 This software and database is being provided to you, the LICENSEE, by Princeton University under the following license. By obtaining, using and/or copying this software and database, you agree that you have read, understood, and will comply with these terms and conditions.: Permission to use, copy, modify and distribute this software and database and its documentation for any purpose and without fee or royalty is hereby granted, provided that you agree to comply with the following copyright notice and statements, including the disclaimer, and that the same appear on ALL copies of the software, database and documentation, including modifications that you make for internal use or for distribution. WordNet 3.0 Copyright 2006 by Princeton University. All rights reserved. THIS SOFTWARE AND DATABASE IS PROVIDED \"AS IS\" AND PRINCETON UNIVERSITY MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. BY WAY OF EXAMPLE, BUT NOT LIMITATION, PRINCETON UNIVERSITY MAKES NO REPRESENTATIONS OR WARRANTIES OF MERCHANT- ABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE, DATABASE OR DOCUMENTATION WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS. The name of Princeton University or Princeton may not be used in advertising or publicity pertaining to distribution of the software and/or database. Title to copyright in this software, database and any associated documentation shall at all times remain with Princeton University and LICENSEE agrees to preserve same. how? learn more - kkoch986 published 2017-06-22T13:36:23.250Z - 0.5.4 is the latest of 54 releases - github.com/NaturalNode/natural - MIT Collaborators list - - Stats - 2074 downloads in the last day - 42504 downloads in the last week - 179209 downloads in the last month - Have an issue? File it. on GitHub - on GitHub Try it out - Test natural in your browser. Keywords natural, language, porter, lancaster, stemmer, bayes, classifier, phonetic, metaphone, inflector, wordnet, tf-idf, logistic, regression, doublemetaphone, double, jaro-winkler, levenshtein, distance, tagger Dependencies (4) apparatus, sylvester, underscore, webworker-threads Dependents (287) tldr, liverecord, deeptea, spotd, nala-stream, subz-hero, @exoplay/exobot-plugin-spam, sentence-similarity, undertherules, bankbot, deviceprofiler, bigweld, bot-kit, superscript-zh, gender-prediction, @alana/core, hubot-quizbot, mesbot, git-soccer, nodame, @dynatrace/davis, text-miner, gladys, jser-classifier-item-category, markovski, sqlite-bayes, @buxlabs/categorizer, jser-stat, text-summary, app.io, schenkerian, disruptor, jaccard-similarity-sentences, initai-dev-server, triplie, botler, simple-summary, opkit, kypseli, sra-dedupe, mongoose-search-plugin, inverted-index, fg-license-sniffer, kevio, hubot-react-fork, yunodb, gramophone, mysam-extract, kss-pug, pennyworth, and more { \"@context\": \"http://schema.org\", \"@type\": \"SoftwareApplication\", \"name\": \"natural\", \"description\": \"General natural language (tokenizing, stemming (English, Russian, Spanish), classification, inflection, phonetics, tfidf, WordNet, jaro-winkler, Levenshtein distance, Dice's Coefficient) facilities for node.\", \"url\": \"https://www.npmjs.com/package/natural\", \"keywords\": \"natural,language,porter,lancaster,stemmer,bayes,classifier,phonetic,metaphone,inflector,wordnet,tf-idf,logistic,regression,doublemetaphone,double,jaro-winkler,levenshtein,distance,tagger\", \"applicationCategory\": \"DeveloperApplication\", \"offers\": { \"@type\": \"Offer\", \"price\": \"0.00\" } } You Need Help - Documentation - Support / Contact Us - Registry Status - Website Issues - CLI Issues - Security About npm - About npm, Inc - Jobs - npm Weekly - Blog - Twitter - GitHub Legal Stuff - Terms of Use - Code of Conduct - Package Name Disputes - Privacy Policy - Reporting Abuse - Other policies npm loves you"},{"url":"https://en.wikipedia.org/wiki/Dog","text":"Dog - Wikipedia document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" ); (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Dog\",\"wgTitle\":\"Dog\",\"wgCurRevisionId\":810855143,\"wgRevisionId\":810855143,\"wgArticleId\":4269567,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"CS1 Latin-language sources (la)\",\"Webarchive template wayback links\",\"CS1 maint: Multiple names: authors list\",\"Wikipedia articles needing page number citations from September 2010\",\"CS1 German-language sources (de)\",\"CS1 maint: Extra text: authors list\",\"Wikipedia indefinitely semi-protected pages\",\"Wikipedia indefinitely move-protected pages\",\"Articles with 'species' microformats\",\"Articles containing Old English-language text\",\"All articles with unsourced statements\",\"Articles with unsourced statements from October 2017\",\"All articles lacking reliable references\",\"Articles lacking reliable references from July 2017\",\"All Wikipedia articles needing clarification\",\"Wikipedia articles needing clarification from November 2016\",\"Articles with unsourced statements from November 2016\",\"All articles with failed verification\",\"Articles with failed verification from April 2016\",\"Commons category with local link different than on Wikidata\",\"Use dmy dates from July 2017\",\"Wikipedia articles with GND identifiers\",\"Domesticated animals\",\"Dogs\",\"Cosmopolitan vertebrates\",\"Scavengers\",\"Vertebrate animal models\",\"Extant Late Pleistocene first appearances\",\"Mammals described in 1758\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Dog\",\"wgRelevantArticleId\":4269567,\"wgRequestId\":\"Wg9ZzApAEKcAAAawdkQAAABG\",\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[\"autoconfirmed\"],\"wgRestrictionMove\":[\"sysop\"],\"wgFlaggedRevsParams\":{\"tags\":{}},\"wgStableRevisionId\":null,\"wgWikiEditorEnabledModules\":{\"toolbar\":true,\"preview\":false,\"publish\":false},\"wgBetaFeaturesFeatures\":[],\"wgMediaViewerOnClick\":true,\"wgMediaViewerEnabledByDefault\":true,\"wgPopupsShouldSendModuleToUser\":true,\"wgPopupsConflictsWithNavPopupGadget\":false,\"wgVisualEditor\":{\"pageLanguageCode\":\"en\",\"pageLanguageDir\":\"ltr\",\"pageVariantFallbacks\":\"en\",\"usePageImages\":true,\"usePageDescriptions\":true},\"wgPreferredVariant\":\"en\",\"wgMFExpandAllSectionsUserOption\":false,\"wgMFDisplayWikibaseDescriptions\":{\"search\":true,\"nearby\":true,\"watchlist\":true,\"tagline\":false},\"wgRelatedArticles\":null,\"wgRelatedArticlesUseCirrusSearch\":true,\"wgRelatedArticlesOnlyUseCirrusSearch\":false,\"wgULSCurrentAutonym\":\"English\",\"wgNoticeProject\":\"wikipedia\",\"wgCentralNoticeCookiesToDelete\":[],\"wgCentralNoticeCategoriesUsingLegacy\":[\"Fundraising\",\"fundraising\"],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\",\"wgWikibaseItemId\":\"Q144\",\"wgCentralAuthMobileDomain\":false,\"wgCodeMirrorEnabled\":false,\"wgVisualEditorToolbarScrollOffset\":0,\"wgVisualEditorUnsupportedEditParams\":[\"undo\",\"undoafter\",\"veswitched\"],\"wgEditSubmitButtonLabelPublish\":false});mw.loader.state({\"ext.gadget.charinsert-styles\":\"ready\",\"ext.globalCssJs.user.styles\":\"ready\",\"ext.globalCssJs.site.styles\":\"ready\",\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"ext.cite.styles\":\"ready\",\"wikibase.client.init\":\"ready\",\"ext.visualEditor.desktopArticleTarget.noscript\":\"ready\",\"ext.uls.interlanguage\":\"ready\",\"ext.wikimediaBadges\":\"ready\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.sectionAnchor\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"ext.globalCssJs.site\":\"ready\"});mw.loader.implement(\"user.tokens@1dqfd7l\",function ( $, jQuery, require, module ) { mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});/*@nomin*/ });mw.loader.load([\"ext.cite.a11y\",\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.watchlist-notice\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.extra-toolbar-buttons\",\"ext.gadget.switcher\",\"ext.centralauth.centralautologin\",\"mmv.head\",\"mmv.bootstrap.autostart\",\"ext.popups\",\"ext.visualEditor.desktopArticleTarget.init\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents\",\"ext.navigationTiming\",\"ext.uls.eventlogger\",\"ext.uls.init\",\"ext.uls.interface\",\"ext.centralNotice.geoIP\",\"ext.centralNotice.startUp\",\"skins.vector.js\"]);}); Dog From Wikipedia, the free encyclopedia Jump to: navigation, search This article is about the domestic dog. For related species known as \"dogs\", see Canidae. For other uses, see Dog (disambiguation). \"Doggie\" redirects here. For the Danish artist, see Doggie (artist). Domestic dog Temporal range: Late Pleistocene – Present (14,700–0 years BP) Selection of the different breeds of dog Conservation status Domesticated Scientific classification Kingdom: Animalia Phylum: Chordata Class: Mammalia Order: Carnivora Suborder: Caniformia Family: Canidae Genus: Canis Species: C. lupus Subspecies: C. l. familiaris[1] Trinomial name Canis lupus familiaris[1] Synonyms Canis familiaris (Linnaeus,1758)[2][3] Montage showing the morphological variation of the dog. The domestic dog (Canis lupus familiaris or Canis familiaris)[4] is a member of genus Canis (canines) that forms part of the wolf-like canids,[5] and is the most widely abundant carnivore.[6][7][8] The dog and the extant gray wolf are sister taxa,[9][10][11] with modern wolves not closely related to the wolves that were first domesticated,[10][11] which implies that the direct ancestor of the dog is extinct.[12] The dog was the first domesticated species[11][13] and has been selectively bred over millennia for various behaviors, sensory capabilities, and physical attributes.[14] New research seems to show that the dog's high sociability may be affected by \"the same genes as in humans.\"[15][16] Their long association with humans has led dogs to be uniquely attuned to human behavior[17] and they are able to thrive on a starch-rich diet that would be inadequate for other canid species.[18] Dogs vary widely in shape, size and colours.[19] Dogs perform many roles for people, such as hunting, herding, pulling loads, protection, assisting police and military, companionship and, more recently, aiding handicapped individuals and therapeutic roles. This influence on human society has given them the sobriquet \"man's best friend\". Contents - 1 Etymology - 2 Terminology - 3 Taxonomy - 4 Origin - 5 Biology 5.1 Anatomy 5.1.1 Size and weight 5.1.2 Senses 5.1.3 Coat 5.1.4 Tail 5.2 Health 5.2.1 Lifespan 5.3 Reproduction 5.3.1 Neutering 5.4 Inbreeding depression - 5.1 Anatomy 5.1.1 Size and weight 5.1.2 Senses 5.1.3 Coat 5.1.4 Tail - 5.1.1 Size and weight - 5.1.2 Senses - 5.1.3 Coat - 5.1.4 Tail - 5.2 Health 5.2.1 Lifespan - 5.2.1 Lifespan - 5.3 Reproduction 5.3.1 Neutering - 5.3.1 Neutering - 5.4 Inbreeding depression - 6 Intelligence, behavior and communication 6.1 Intelligence 6.2 Behavior 6.3 Communication - 6.1 Intelligence - 6.2 Behavior - 6.3 Communication - 7 Comparison with wolves 7.1 Physical characteristics 7.2 Behavioral differences - 7.1 Physical characteristics - 7.2 Behavioral differences - 8 Ecology 8.1 Population and habitat 8.2 Competitors 8.3 Diet - 8.1 Population and habitat - 8.2 Competitors - 8.3 Diet - 9 Breeds - 10 Roles with humans 10.1 Early roles 10.2 As pets 10.3 Work 10.4 Sports and shows 10.5 As food 10.6 Health risks to humans 10.7 Health benefits for humans 10.8 Medical detection dogs 10.9 Shelters - 10.1 Early roles - 10.2 As pets - 10.3 Work - 10.4 Sports and shows - 10.5 As food - 10.6 Health risks to humans - 10.7 Health benefits for humans - 10.8 Medical detection dogs - 10.9 Shelters - 11 Cultural depictions 11.1 Mythology 11.2 Literature 11.3 Religion 11.4 Art - 11.1 Mythology - 11.2 Literature - 11.3 Religion - 11.4 Art - 12 See also - 13 Notes - 14 References - 15 Bibliography - 16 Further reading - 17 External links Etymology The term \"domestic dog\" is generally used for both domesticated and feral varieties. The English word dog comes from Middle English dogge, from Old English docga, a \"powerful dog breed\".[20] The term may possibly derive from Proto-Germanic *dukkōn, represented in Old English finger-docce (\"finger-muscle\").[21] The word also shows the familiar petname diminutive -ga also seen in frogga \"frog\", picga \"pig\", stagga \"stag\", wicga \"beetle, worm\", among others.[22] Piotr Gąsiorowski has suggested that Old English *docga is actually derived from Old English colour adjective dox.[23] In 14th-century England, hound (from Old English: hund) was the general word for all domestic canines, and dog referred to a subtype of hound, a group including the mastiff. It is believed this \"dog\" type was so common, it eventually became the prototype of the category \"hound\".[24] By the 16th century, dog had become the general word, and hound had begun to refer only to types used for hunting.[25] The word \"hound\" is ultimately derived from the Proto-Indo-European word *kwon-, \"dog\".[26] This semantic shift may be compared with in German, where the corresponding words Dogge and Hund kept their original meanings. The term *ḱwon- may ultimately derive from the earliest layer of Proto-Indo-European vocabulary.[27] A male canine is referred to as a \"dog\", while a female is traditionally called a \"bitch\" (derived from Middle English bicche, from Old English bicce, ultimately from Old Norse bikkja. Since the word \"bitch\" has taken on derogatory connotations, nowadays it is less commonly used to refer to dogs).[citation needed] The father of a litter is called the sire, and the mother is called the dam. The process of birth is \"whelping\", from the Old English word hwelp; the modern English word \"whelp\" is an alternative term for puppy.[28] A litter refers to the multiple offspring at one birth which are called puppies or pups from the French poupée, \"doll\", which has mostly replaced the older term \"whelp\".[29] Terminology - The term dog typically is applied both to the species (or subspecies) as a whole, and any adult male member of the same. - An adult female is a bitch. - An adult male capable of reproduction is a stud. - An adult female capable of reproduction is a brood bitch, or brood mother. - Immature males or females (that is, animals that are incapable of reproduction) are pups or puppies. - A group of pups from the same gestation period is a litter. - The father of a litter is a sire. It is possible for one litter to have multiple sires. - The mother of a litter is a dam. - A group of any three or more adults is a pack. Taxonomy In 1758, the taxonomist Linnaeus published in his Systema Naturae the classification of species. Canis is a Latin word meaning dog,[30] and under this genus he listed the dog-like carnivores including domestic dogs, wolves, and jackals. He classified the domestic dog as Canis familiaris (Linnaeus, 1758) and on the next page as a separate species he classified the wolf as Canis lupus (Linnaeus, 1758).[2] In 1926, the International Commission on Zoological Nomenclature (ICZN) ruled in Opinion 91 that the domestic dog Canis familiaris (Linnaeus, 1758) be placed on its official list.[3] In 1957, the ICZN ruled in Opinion 451 that Canis dingo (Meyer, 1793) was the name to be used for the dingo and that this be placed on its official list.[31] These are the scientific names for the dog and dingo that appear on the Official Lists and Indexes of Names in Zoology of the ICZN.[32] In 1978, a review to reduce the number species listed under genus Canis proposed that \"Canis dingo is now generally regarded as a distinctive feral domestic dog. Canis familiaris is used for domestic dogs, although taxonomically it should probably be synonymous with Canis lupus.\"[33] In 1982, the first edition of Mammal Species of the World included a note under Canis lupus with the comment: \"Probably ancestor of and conspecific with the domestic dog, familiaris. Canis familiaris has page priority over Canis lupus, but both were published simultaneously in Linnaeus (1758), and Canis lupus has been universally used for this species\".[34] In the same year, an application was made to the ICZN to reclassify the dingo to Canis lupus dingo because it was proposed that the wolf (Canis lupus) was the ancestor of dogs and dingoes, however the application was rejected.[35] In 2003, the ICZN ruled in its Opinion 2027 that the \"name of a wild species...is not invalid by virtue of being predated by the name based on a domestic form.\" Additionally, the ICZN placed the taxon Canis lupus as a conserved name on the official list under this opinion.[36] In the third edition of Mammal Species of the World published in 2005, the mammalogist W. Christopher Wozencraft listed under the wolf Canis lupus what he proposed to be two subspecies: \"familiaris Linneaus, 1758 [domestic dog]\" and \"dingo Meyer, 1793 [domestic dog]\",[a] with the comment \"Includes the domestic dog as a subspecies, with the dingo provisionally separate – artificial variants created by domestication and selective breeding. Although this may stretch the subspecies concept, it retains the correct allocation of synonyms.\"[1] Although the earliest use of the name \"dingo\" was Canis familiaris dingo (Blumenbach, 1780),[37] Wozencraft attributed it to Meyer from 1793 without comment.[38] This classification by Wozencraft is hotly debated by zoologists.[35] Mathew Crowther, Stephen Jackson and Colin Groves disagree with Wozencraft and argue that based on ICZN Opinion 2027, the implication is that a domestic animal cannot be a subspecies.[39][40] Crowther, Juliet Clutton-Brock and others argue that because the dingo differs from wolves by behavior, morphology, and that the dingo and dog do not fall genetically within any extant wolf clade, that the dingo should be considered the distinct taxon Canis dingo.[41][35][40] Jackson and Groves regard the dog Canis familiaris as a taxonomic synonym for the wolf Canis lupus with them both equally ranked at the species level. They also disagree with Crowther, based on the overlap between dogs and dingoes in their morphology, in their ability to easily hybridize with each other, and that they show the signs of domestication by both having a cranium of smaller capacity than their progenitor, the wolf. Given that Canis familiaris (Linnaeus, 1758) has date priority over Canis dingo (Meyer, 1793), they regard the dingo as a junior taxonomic synonym for the dog Canis familiaris.[39] Gheorghe Benga and others support the dingo as a subspecies of the dog from the earlier Canis familiaris dingo (Blumenbach, 1780).[42][43][44] Xiaoming Wang and Richard H. Tedford proposed that the dog should be classified as Canis lupus familiaris under the Biological Species Concept and Canis familiaris under the Evolutionary Species Concept.[4] Origin Main article: Origin of the domestic dog The origin of the domestic dog is not clear. It is known that the dog was the first domesticated species.[11][13] The domestic dog is a member of genus Canis (canines) that forms part of the wolf-like canids,[5] and is the most widely abundant carnivore.[6][7][8] The closest living relative of the dog is the gray wolf and there is no evidence of any other canine contributing to its genetic lineage.[6][7][45][9] The dog and the extant gray wolf form two sister clades,[9][10][11] with modern wolves not closely related to the wolves that were first domesticated.[10][11] The archaeological record shows the first undisputed dog remains buried beside humans 14,700 years ago,[46] with disputed remains occurring 36,000 years ago.[47] These dates imply that the earliest dogs arose in the time of human hunter-gatherers and not agriculturists.[7][10] Where the genetic divergence of dog and wolf took place remains controversial, with the most plausible proposals spanning Western Europe,[48][7] Central Asia,[48][49] and East Asia.[48][50] This has been made more complicated by the most recent proposal that fits the available evidence, which is that an initial wolf population split into East and West Eurasian wolves, these were then domesticated independently before going extinct into two distinct dog populations between 14,000-6,400 years ago, and then the Western Eurasian dog population was partially and gradually replaced by East Asian dogs that were brought by humans at least 6,400 years ago.[48][51][52] Biology Lateral view of skeleton. \"Five different types of dogs,\" c. 1547. Anatomy Main article: Dog anatomy Domestic dogs have been selectively bred for millennia for various behaviors, sensory capabilities, and physical attributes.[14] Modern dog breeds show more variation in size, appearance, and behavior than any other domestic animal.[14] Dogs are predators and scavengers, and like many other predatory mammals, the dog has powerful muscles, fused wrist bones, a cardiovascular system that supports both sprinting and endurance, and teeth for catching and tearing. Size and weight Dogs are highly variable in height and weight. The smallest known adult dog was a Yorkshire Terrier, that stood only 6.3 cm (2.5 in) at the shoulder, 9.5 cm (3.7 in) in length along the head-and-body, and weighed only 113 grams (4.0 oz). The largest known dog was an English Mastiff which weighed 155.6 kg (343 lb) and was 250 cm (98 in) from the snout to the tail.[53] The tallest dog is a Great Dane that stands 106.7 cm (42.0 in) at the shoulder.[54] Senses The dog's senses include vision, hearing, sense of smell, sense of taste, touch and sensitivity to the earth's magnetic field. Another study suggested that dogs can see the earth's magnetic field.[55][56] See further: Dog anatomy-senses Coat Main article: Coat (dog) Montage showing the coat variation of the dog. A Golden Retriever with a golden shade of coat. Shades of coat colors can vary within breeds of dogs. For example, some Golden Retrievers have light, almost cream colored coats, and others may have dark, brownish shades of coat. [57] The coats of domestic dogs are of two varieties: \"double\" being common with dogs (as well as wolves) originating from colder climates, made up of a coarse guard hair and a soft down hair, or \"single\", with the topcoat only. Domestic dogs often display the remnants of countershading, a common natural camouflage pattern. A countershaded animal will have dark coloring on its upper surfaces and light coloring below,[58] which reduces its general visibility. Thus, many breeds will have an occasional \"blaze\", stripe, or \"star\" of white fur on their chest or underside.[59] Tail See also: Docking There are many different shapes for dog tails: straight, straight up, sickle, curled, or cork-screw. As with many canids, one of the primary functions of a dog's tail is to communicate their emotional state, which can be important in getting along with others. In some hunting dogs, however, the tail is traditionally docked to avoid injuries.[60] In some breeds, such as the Braque du Bourbonnais, puppies can be born with a short tail or no tail at all.[61] Health Main article: Dog health There are many household plants that are poisonous to dogs including begonia, Poinsettia and aloe vera.[62] Some breeds of dogs are prone to certain genetic ailments such as elbow and hip dysplasia, blindness, deafness, pulmonic stenosis, cleft palate, and trick knees. Two serious medical conditions particularly affecting dogs are pyometra, affecting unspayed females of all types and ages, and gastric dilatation volvulus (bloat), which affects the larger breeds or deep-chested dogs. Both of these are acute conditions, and can kill rapidly. Dogs are also susceptible to parasites such as fleas, ticks, and mites, as well as hookworms, tapeworms, roundworms, and heartworms. A number of common human foods and household ingestibles are toxic to dogs, including chocolate solids (theobromine poisoning), onion and garlic (thiosulphate, sulfoxide or disulfide poisoning),[63] grapes and raisins, macadamia nuts, xylitol,[64] as well as various plants and other potentially ingested materials.[65][66] The nicotine in tobacco can also be dangerous. Dogs can be exposed to the substance by scavenging garbage or ashtrays; eating cigars and cigarettes. Signs can be vomiting of large amounts (e.g., from eating cigar butts) or diarrhea. Some other signs are abdominal pain, loss of coordination, collapse, or death.[67] Dogs are highly susceptible to theobromine poisoning, typically from ingestion of chocolate. Theobromine is toxic to dogs because, although the dog's metabolism is capable of breaking down the chemical, the process is so slow that even small amounts of chocolate can be fatal, especially dark chocolate. Dogs are also vulnerable to some of the same health conditions as humans, including diabetes, dental and heart disease, epilepsy, cancer, hypothyroidism, and arthritis.[68] Lifespan Further information: Aging in dogs A mixed-breed terrier. Mixed-breed dogs have been found to run faster and live longer than their pure-bred parents (See heterosis) In 2013, a study found that mixed breeds live on average 1.2 years longer than pure breeds, and that increasing body-weight was negatively correlated with longevity (i.e. the heavier the dog the shorter its lifespan).[69] The typical lifespan of dogs varies widely among breeds, but for most the median longevity, the age at which half the dogs in a population have died and half are still alive, ranges from 10 to 13 years.[70][71][72][73] Individual dogs may live well beyond the median of their breed. The breed with the shortest lifespan (among breeds for which there is a questionnaire survey with a reasonable sample size) is the Dogue de Bordeaux, with a median longevity of about 5.2 years, but several breeds, including Miniature Bull Terriers, Bloodhounds, and Irish Wolfhounds are nearly as short-lived, with median longevities of 6 to 7 years.[73] The longest-lived breeds, including Toy Poodles, Japanese Spitz, Border Terriers, and Tibetan Spaniels, have median longevities of 14 to 15 years.[73] The median longevity of mixed-breed dogs, taken as an average of all sizes, is one or more years longer than that of purebred dogs when all breeds are averaged.[71][72][73][74] The dog widely reported to be the longest-lived is \"Bluey\", who died in 1939 and was claimed to be 29.5 years old at the time of his death. On 5 December 2011, Pusuke, the world's oldest living dog recognized by Guinness Book of World Records, died aged 26 years and 9 months.[75] Reproduction Main article: Canine reproduction Dog nursing newborn puppies In domestic dogs, sexual maturity begins to happen around age six to twelve months for both males and females,[14][76] although this can be delayed until up to two years old for some large breeds. This is the time at which female dogs will have their first estrous cycle. They will experience subsequent estrous cycles semiannually, during which the body prepares for pregnancy. At the peak of the cycle, females will come into estrus, being mentally and physically receptive to copulation.[14] Because the ova survive and are capable of being fertilized for a week after ovulation, it is possible for a female to mate with more than one male.[14] Fertilization typically occurs 2–5 days after ovulation; 14–16 days after ovulation, the embryo attaches to the uterus, and after 7-8 more days the heart beat is detectable.[77][78] Dogs bear their litters roughly 58 to 68 days after fertilization,[14][79] with an average of 63 days, although the length of gestation can vary. An average litter consists of about six puppies,[80] though this number may vary widely based on the breed of dog. In general, toy dogs produce from one to four puppies in each litter, while much larger breeds may average as many as twelve. Some dog breeds have acquired traits through selective breeding that interfere with reproduction. Male French Bulldogs, for instance, are incapable of mounting the female. For many dogs of this breed, the female must be artificially inseminated in order to reproduce.[81] Neutering A feral dog from Sri Lanka nursing her four puppies Neutering refers to the sterilization of animals, usually by removal of the male's testicles or the female's ovaries and uterus, in order to eliminate the ability to procreate and reduce sex drive. Because of the overpopulation of dogs in some countries, many animal control agencies, such as the American Society for the Prevention of Cruelty to Animals (ASPCA), advise that dogs not intended for further breeding should be neutered, so that they do not have undesired puppies that may have to later be euthanized.[82] According to the Humane Society of the United States, 3–4 million dogs and cats are put down each year in the United States and many more are confined to cages in shelters because there are many more animals than there are homes. Spaying or castrating dogs helps keep overpopulation down.[83] Local humane societies, SPCAs, and other animal protection organizations urge people to neuter their pets and to adopt animals from shelters instead of purchasing them. Neutering reduces problems caused by hypersexuality, especially in male dogs.[84] Spayed female dogs are less likely to develop some forms of cancer, affecting mammary glands, ovaries, and other reproductive organs.[85] However, neutering increases the risk of urinary incontinence in female dogs,[86] and prostate cancer in males,[87] as well as osteosarcoma, hemangiosarcoma, cruciate ligament rupture, obesity, and diabetes mellitus in either sex.[88] Inbreeding depression A common breeding practice for pet dogs is mating between close relatives (e.g. between half- and full siblings).[89] In a study of seven different French breeds of dogs (Bernese mountain dog, basset hound, Cairn terrier, Epagneul Breton, German Shepherd dog, Leonberger, and West Highland white terrier) it was found that inbreeding decreases litter size and survival.[90] Another analysis of data on 42,855 dachshund litters, found that as the inbreeding coefficient increased, litter size decreased and the percentage of stillborn puppies increased, thus indicating inbreeding depression.[91] About 22% of boxer puppies die before reaching 7 weeks of age.[92] Stillbirth is the most frequent cause of death, followed by infection. Mortality due to infection was found to increase significantly with increases in inbreeding.[92] Inbreeding depression is considered to be due largely to the expression of homozygous deleterious recessive mutations.[93] Outcrossing between unrelated individuals, including dogs of different breeds, results in the beneficial masking of deleterious recessive mutations in progeny.[94] Intelligence, behavior and communication Intelligence Main article: Dog intelligence Dog intelligence is the ability of the dog to perceive information and retain it as knowledge for applying to solve problems. Dogs have been shown to learn by inference. A study with Rico showed that he knew the labels of over 200 different items. He inferred the names of novel items by exclusion learning and correctly retrieved those novel items immediately and also 4 weeks after the initial exposure. Dogs have advanced memory skills. A study documented the learning and memory capabilities of a border collie, \"Chaser\", who had learned the names and could associate by verbal command over 1,000 words. Dogs are able to read and react appropriately to human body language such as gesturing and pointing, and to understand human voice commands. Dogs demonstrate a theory of mind by engaging in deception. An experimental study showed compelling evidence that Australian dingos can outperform domestic dogs in non-social problem-solving, indicating that domestic dogs may have lost much of their original problem-solving abilities once they joined humans.[95] Another study indicated that after undergoing training to solve a simple manipulation task, dogs that are faced with an insoluble version of the same problem look at the human, while socialized wolves do not.[96] Modern domestic dogs use humans to solve their problems for them.[97][98] Behavior Main article: Dog behavior Dog behavior is the internally coordinated responses (actions or inactions) of the domestic dog (individuals or groups) to internal and/or external stimuli.[99] As the oldest domesticated species, with estimates ranging from 9,000–30,000 years BCE, the minds of dogs inevitably have been shaped by millennia of contact with humans. As a result of this physical and social evolution, dogs, more than any other species, have acquired the ability to understand and communicate with humans, and they are uniquely attuned to human behaviors.[17] Behavioral scientists have uncovered a surprising set of social-cognitive abilities in the domestic dog. These abilities are not possessed by the dog's closest canine relatives nor by other highly intelligent mammals such as great apes but rather parallel some of the social-cognitive skills of human children.[100] Traits of high sociability and lack of fear in dogs may include genetic modifications related to Williams-Beuren syndrome in humans, which cause hypersociability at the expense of problem solving ability.[101] Communication Main article: Dog communication Dog communication is about how dogs \"speak\" to each other, how they understand messages that humans send to them, and how humans can translate the ideas that dogs are trying to transmit.[102]:xii These communication behaviors include eye gaze, facial expression, vocalization, body posture (including movements of bodies and limbs) and gustatory communication (scents, pheromones and taste). Humans communicate with dogs by using vocalization, hand signals and body posture. Comparison with wolves The Saarloos wolfdog carries more gray wolf DNA than any other dog breed[103] Physical characteristics Despite their close genetic relationship and the ability to inter-breed, there are a number of diagnostic features to distinguish the gray wolves from domestic dogs. Domesticated dogs are clearly distinguishable from wolves by starch gel electrophoresis of red blood cell acid phosphatase.[104] The tympanic bullae are large, convex and almost spherical in gray wolves, while the bullae of dogs are smaller, compressed and slightly crumpled.[105] Compared with equally sized wolves, dogs tend to have 20% smaller skulls and 30% smaller brains.[106]:35 The teeth of gray wolves are also proportionately larger than those of dogs.[107] Dogs have a more domed forehead and a distinctive \"stop\" between forehead and nose.[108] The temporalis muscle that closes the jaws is more robust in wolves.[4]:p158 Wolves do not have dewclaws on their back legs, unless there has been admixture with dogs that had them.[109] Most dogs lack a functioning pre-caudal gland and enter estrus twice yearly, unlike gray wolves which only do so once a year.[110] So-called primitive dogs such as Dingoes and Basenjis retain the yearly estrus cycle.[111] Dogs generally have brown eyes and wolves almost always have amber or light colored eyes.[112] The skin of domestic dogs tends to be thicker than that of wolves, with some Inuit tribes favoring the former for use as clothing due to its greater resistance to wear and tear in harsh weather.[113] The paws of a dog are half the size of those of a wolf, and their tails tend to curl upwards, another trait not found in wolves[114] The dog has developed into hundreds of varied breeds, and shows more behavioral and morphological variation than any other land mammal.[115] For example, height measured to the withers ranges from a 6 inches (150 mm) in the Chihuahua to 3.3 feet (1.0 m) in the Irish Wolfhound; color varies from white through grays (usually called \"blue\") to black, and browns from light (tan) to dark (\"red\" or \"chocolate\") in a wide variation of patterns; coats can be short or long, coarse-haired to wool-like, straight, curly, or smooth.[116] It is common for most breeds to shed their coat. Behavioral differences See also: Dog behavior § Behavior compared with other canids Unlike other domestic species which were primarily selected for production-related traits, dogs were initially selected for their behaviors.[117][118] In 2016, a study found that there were only 11 fixed genes that showed variation between wolves and dogs. These gene variations were unlikely to have been the result of natural evolution, and indicate selection on both morphology and behavior during dog domestication. These genes have been shown to affect the catecholamine synthesis pathway, with the majority of the genes affecting the fight-or-flight response[118][119] (i.e. selection for tameness), and emotional processing.[118] Dogs generally show reduced fear and aggression compared with wolves.[118][120] Some of these genes have been associated with aggression in some dog breeds, indicating their importance in both the initial domestication and then later in breed formation.[118] Ecology Population and habitat The global dog population is estimated at 900 million and rising.[121][122] Although it is said that the \"dog is man's best friend\"[123] regarding 17–24% of dogs in developed countries, in the developing world they are feral, village or community dogs, with pet dogs uncommon.[113] These live their lives as scavengers and have never been owned by humans, with one study showing their most common response when approached by strangers was to run away (52%) or respond with aggression (11%).[124] We know little about these dogs, nor about the dogs that live in developed countries that are feral, stray or are in shelters, as the great majority of modern research on dog cognition has focused on pet dogs living in human homes.[125] Competitors Being the most abundant carnivore, feral and free-ranging dogs have the greatest potential to compete with wolves. A review of the studies in the competitive effects of dogs on sympatric carnivores did not mention any research on competition between dogs and wolves.[122][126] Competition would favor the wolf that is known to kill dogs, however wolves tend to live in pairs or in small packs in areas where they are highly persecuted, giving them a disadvantage facing large dog groups.[122][127] Wolves kill dogs wherever the two canids occur.[128] One survey claims that in Wisconsin in 1999 more compensation had been paid for dog losses than livestock, however in Wisconsin wolves will often kill hunting dogs, perhaps because they are in the wolf's territory.[128] Some wolf pairs have been reported to prey on dogs by having one wolf lure the dog out into heavy brush where the second animal waits in ambush.[129] In some instances, wolves have displayed an uncharacteristic fearlessness of humans and buildings when attacking dogs, to the extent that they have to be beaten off or killed.[130] Although the numbers of dogs killed each year are relatively low, it induces a fear of wolves entering villages and farmyards to take dogs. In many cultures, there are strong social and emotional bonds between humans and their dogs that can be seen as family members or working team members. The loss of a dog can lead to strong emotional responses with demands for more liberal wolf hunting regulations.[122] Coyotes and big cats have also been known to attack dogs. Leopards in particular are known to have a predilection for dogs, and have been recorded to kill and consume them regardless of the dog's size or ferocity.[131] Tigers in Manchuria, Indochina, Indonesia, and Malaysia are reputed to kill dogs with the same vigor as leopards.[132] Striped hyenas are major predators of village dogs in Turkmenistan, India, and the Caucasus.[133] The spiked collar common on working and pet dogs is no mere ornament: it originated as a protection of the vulnerable neck of a dog from wolves, but also protects dogs from attacks by other dogs.[134][better source needed] Diet See also: Dog food Golden Retriever gnawing a pig's foot Despite their descent from wolves and classification as Carnivora, dogs are variously described in scholarly and other writings as carnivores[135][136] or omnivores.[14][137][138][139] Unlike obligate carnivores, dogs can adapt to a wide-ranging diet, and are not dependent on meat-specific protein nor a very high level of protein in order to fulfill their basic dietary requirements. Dogs will healthily digest a variety of foods, including vegetables and grains, and can consume a large proportion of these in their diet, however all-meat diets are not recommended for dogs due to their lack of calcium and iron.[14] Comparing dogs and wolves, dogs have adaptations in genes involved in starch digestion that contribute to an increased ability to thrive on a starch-rich diet.[18] Breeds Main article: Dog breed Further information: Dog type Cavalier King Charles Spaniels demonstrate different colored coats within the one breed Most breeds of dog are at most a few hundred years old, having been artificially selected for particular morphologies and behaviors by people for specific functional roles. Through this selective breeding, the dog has developed into hundreds of varied breeds, and shows more behavioral and morphological variation than any other land mammal.[115] For example, height measured to the withers ranges from 15.2 centimetres (6.0 in) in the Chihuahua to about 76 cm (30 in) in the Irish Wolfhound; color varies from white through grays (usually called \"blue\") to black, and browns from light (tan) to dark (\"red\" or \"chocolate\") in a wide variation of patterns; coats can be short or long, coarse-haired to wool-like, straight, curly, or smooth.[116] It is common for most breeds to shed this coat. While all dogs are genetically very similar,[140] natural selection and selective breeding have reinforced certain characteristics in certain populations of dogs, giving rise to dog types and dog breeds. Dog types are broad categories based on function, genetics, or characteristics.[141] Dog breeds are groups of animals that possess a set of inherited characteristics that distinguishes them from other animals within the same species.[vague][citation needed] Modern dog breeds are non-scientific classifications of dogs kept by modern kennel clubs. Purebred dogs of one breed are genetically distinguishable from purebred dogs of other breeds,[142] but the means by which kennel clubs classify dogs is unsystematic. DNA microsatellite analyses of 85 dog breeds showed they fell into four major types of dogs that were statistically distinct.[142] These include the \"old world dogs\" (e.g., Malamute and Shar Pei), \"Mastiff\"-type (e.g., English Mastiff), \"herding\"-type (e.g., Border Collie), and \"all others\" (also called \"modern\"- or \"hunting\"-type).[142][143] Roles with humans Gunnar Kaasen and Balto, the lead dog on the last relay team of the 1925 serum run to Nome. Domestic dogs inherited complex behaviors, such as bite inhibition, from their wolf ancestors, which would have been pack hunters with complex body language. These sophisticated forms of social cognition and communication may account for their trainability, playfulness, and ability to fit into human households and social situations, and these attributes have given dogs a relationship with humans that has enabled them to become one of the most successful species on the planet today.[144]:pages95-136 The dogs' value to early human hunter-gatherers led to them quickly becoming ubiquitous across world cultures. Dogs perform many roles for people, such as hunting, herding, pulling loads, protection, assisting police and military, companionship, and, more recently, aiding handicapped individuals. This influence on human society has given them the nickname \"man's best friend\" in the Western world. In some cultures, however, dogs are also a source of meat.[145][146] Early roles Wolves, and their dog descendants, would have derived significant benefits from living in human camps—more safety, more reliable food, lesser caloric needs, and more chance to breed.[147] They would have benefited from humans' upright gait that gives them larger range over which to see potential predators and prey, as well as better color vision that, at least by day, gives humans better visual discrimination.[147] Camp dogs would also have benefited from human tool use, as in bringing down larger prey and controlling fire for a range of purposes.[147] The dogs of Thibet are twice the size of those seen in India, with large heads and hairy bodies. They are powerful animals, and are said to be able to kill a tiger. During the day they are kept chained up, and are let loose at night to guard their masters' house.[148] Humans would also have derived enormous benefit from the dogs associated with their camps.[149] For instance, dogs would have improved sanitation by cleaning up food scraps.[149] Dogs may have provided warmth, as referred to in the Australian Aboriginal expression \"three dog night\" (an exceptionally cold night), and they would have alerted the camp to the presence of predators or strangers, using their acute hearing to provide an early warning.[149] Anthropologists believe the most significant benefit would have been the use of dogs' robust sense of smell to assist with the hunt.[149] The relationship between the presence of a dog and success in the hunt is often mentioned as a primary reason for the domestication of the wolf, and a 2004 study of hunter groups with and without a dog gives quantitative support to the hypothesis that the benefits of cooperative hunting was an important factor in wolf domestication.[150] The cohabitation of dogs and humans would have greatly improved the chances of survival for early human groups, and the domestication of dogs may have been one of the key forces that led to human success.[151] Emigrants from Siberia that walked across the Bering land bridge into North America may have had dogs in their company, and one writer[152] suggests that the use of sled dogs may have been critical to the success of the waves that entered North America roughly 12,000 years ago,[152] although the earliest archaeological evidence of dog-like canids in North America dates from about 9,400 years ago.[144]:104[153] Dogs were an important part of life for the Athabascan population in North America, and were their only domesticated animal. Dogs also carried much of the load in the migration of the Apache and Navajo tribes 1,400 years ago. Use of dogs as pack animals in these cultures often persisted after the introduction of the horse to North America.[154] As pets Siberian Husky—pack animal A British Bulldog shares a day at the park. Green velvet dog collar, dates from 1670 to 1690. It is estimated that three-quarters of the world's dog population lives in the developing world as feral, village, or community dogs, with pet dogs uncommon.[113] \"The most widespread form of interspecies bonding occurs between humans and dogs\"[149] and the keeping of dogs as companions, particularly by elites, has a long history.[155] (As a possible example, at the Natufian culture site of Ain Mallaha in Israel, dated to 12,000 BC, the remains of an elderly human and a four-to-five-month-old puppy were found buried together).[156] However, pet dog populations grew significantly after World War II as suburbanization increased.[155] In the 1950s and 1960s, dogs were kept outside more often than they tend to be today[157] (using the expression \"in the doghouse\" to describe exclusion from the group signifies the distance between the doghouse and the home) and were still primarily functional, acting as a guard, children's playmate, or walking companion. From the 1980s, there have been changes in the role of the pet dog, such as the increased role of dogs in the emotional support of their human guardians.[158] People and dogs have become increasingly integrated and implicated in each other's lives,[159] to the point where pet dogs actively shape the way a family and home are experienced.[160] There have been two major trends in the changing status of pet dogs. The first has been the 'commodification' of the dog, shaping it to conform to human expectations of personality and behaviour.[160] The second has been the broadening of the concept of the family and the home to include dogs-as-dogs within everyday routines and practices.[160] There are a vast range of commodity forms available to transform a pet dog into an ideal companion.[161] The list of goods, services and places available is enormous: from dog perfumes, couture, furniture and housing, to dog groomers, therapists, trainers and caretakers, dog cafes, spas, parks and beaches, and dog hotels, airlines and cemeteries.[161] While dog training as an organized activity can be traced back to the 18th century, in the last decades of the 20th century it became a high-profile issue as many normal dog behaviors such as barking, jumping up, digging, rolling in dung, fighting, and urine marking (which dogs do to establish territory through scent), became increasingly incompatible with the new role of a pet dog.[162] Dog training books, classes and television programs proliferated as the process of commodifying the pet dog continued.[163] The majority of contemporary people with dogs describe their pet as part of the family,[160] although some ambivalence about the relationship is evident in the popular reconceptualization of the dog–human family as a pack.[160] A dominance model of dog–human relationships has been promoted by some dog trainers, such as on the television program Dog Whisperer. However it has been disputed that \"trying to achieve status\" is characteristic of dog–human interactions.[164] Pet dogs play an active role in family life; for example, a study of conversations in dog–human families showed how family members use the dog as a resource, talking to the dog, or talking through the dog, to mediate their interactions with each other.[165] Increasingly, human family members are engaging in activities centered on the perceived needs and interests of the dog, or in which the dog is an integral partner, such as dog dancing and dog yoga.[161] According to statistics published by the American Pet Products Manufacturers Association in the National Pet Owner Survey in 2009–2010, it is estimated there are 77.5 million people with pet dogs in the United States.[166] The same survey shows nearly 40% of American households own at least one dog, of which 67% own just one dog, 25% two dogs and nearly 9% more than two dogs. There does not seem to be any gender preference among dogs as pets, as the statistical data reveal an equal number of female and male dog pets. Yet, although several programs are ongoing to promote pet adoption, less than a fifth of the owned dogs come from a shelter. The latest study using magnetic resonance imaging (MRI) comparing humans and dogs showed that dogs have same response to voices and use the same parts of the brain as humans do. This gives dogs the ability to recognize emotional human sounds, making them friendly social pets to humans.[167] Work Dogs have lived and worked with humans in so many roles that they have earned the unique nickname, \"man's best friend\",[168] a phrase used in other languages as well. They have been bred for herding livestock,[169] hunting (e.g. pointers and hounds),[106] rodent control,[14] guarding, helping fishermen with nets, detection dogs, and pulling loads, in addition to their roles as companions.[14] In 1957, a husky-terrier mix named Laika became the first animal to orbit the Earth.[170][171] Service dogs such as guide dogs, utility dogs, assistance dogs, hearing dogs, and psychological therapy dogs provide assistance to individuals with physical or mental disabilities.[172][173] Some dogs owned by epileptics have been shown to alert their handler when the handler shows signs of an impending seizure, sometimes well in advance of onset, allowing the guardian to seek safety, medication, or medical care.[174] Dogs included in human activities in terms of helping out humans are usually called working dogs. Sports and shows See also: Conformation show Dogs come in a range of sizes. People often enter their dogs in competitions[175] such as breed-conformation shows or sports, including racing, sledding and agility competitions. In conformation shows, also referred to as breed shows, a judge familiar with the specific dog breed evaluates individual purebred dogs for conformity with their established breed type as described in the breed standard. As the breed standard only deals with the externally observable qualities of the dog (such as appearance, movement, and temperament), separately tested qualities (such as ability or health) are not part of the judging in conformation shows. As food Main article: Dog meat Gaegogi (dog meat) stew being served in a Korean restaurant Dog meat is consumed in some East Asian countries, including Korea, China[145] and Vietnam,[146] a practice that dates back to antiquity.[176] It is estimated that 13–16 million dogs are killed and consumed in Asia every year.[177] Other cultures, such as Polynesia and pre-Columbian Mexico, also consumed dog meat in their history. However, Western, South Asian, African, and Middle Eastern cultures, in general, regard consumption of dog meat as taboo. In some places, however, such as in rural areas of Poland, dog fat is believed to have medicinal properties—being good for the lungs for instance.[178] Dog meat is also consumed in some parts of Switzerland.[179] Proponents of eating dog meat have argued that placing a distinction between livestock and dogs is western hypocrisy, and that there is no difference with eating the meat of different animals.[180][181][182][183] In Korea, the primary dog breed raised for meat, the nureongi (누렁이), differs from those breeds raised for pets that Koreans may keep in their homes.[184] The most popular Korean dog dish is gaejang-guk (also called bosintang), a spicy stew meant to balance the body's heat during the summer months; followers of the custom claim this is done to ensure good health by balancing one's gi, or vital energy of the body. A 19th century version of gaejang-guk explains that the dish is prepared by boiling dog meat with scallions and chili powder. Variations of the dish contain chicken and bamboo shoots. While the dishes are still popular in Korea with a segment of the population, dog is not as widely consumed as beef, chicken, and pork.[184] Health risks to humans Further information: Dog attack and Canine vector-borne disease Further information: Dog bite prevention In 2005, the WHO reported that 55,000 people died in Asia and Africa from rabies, a disease for which dogs are the most important vector.[185] Citing a 2008 study, the U.S. Center for Disease Control estimated in 2015 that 4.5 million people in the USA are bitten by dogs each year.[186] A 2015 study estimated that 1.8% of the U.S. population is bitten each year.[187] In the 1980s and 1990s the US averaged 17 fatalities per year, while in the 2000s this has increased to 26.[188] 77% of dog bites are from the pet of family or friends, and 50% of attacks occur on the property of the dog's legal owner.[188] A Colorado study found bites in children were less severe than bites in adults.[189] The incidence of dog bites in the US is 12.9 per 10,000 inhabitants, but for boys aged 5 to 9, the incidence rate is 60.7 per 10,000. Moreover, children have a much higher chance to be bitten in the face or neck.[190] Sharp claws with powerful muscles behind them can lacerate flesh in a scratch that can lead to serious infections.[191] In the UK between 2003 and 2004, there were 5,868 dog attacks on humans, resulting in 5,770 working days lost in sick leave.[192] In the United States, cats and dogs are a factor in more than 86,000 falls each year.[193] It has been estimated around 2% of dog-related injuries treated in UK hospitals are domestic accidents. The same study found that while dog involvement in road traffic accidents was difficult to quantify, dog-associated road accidents involving injury more commonly involved two-wheeled vehicles.[194] Toxocara canis (dog roundworm) eggs in dog feces can cause toxocariasis. In the United States, about 10,000 cases of Toxocara infection are reported in humans each year, and almost 14% of the U.S. population is infected.[195] In Great Britain, 24% of soil samples taken from public parks contained T. canis eggs.[196][not in citation given] Untreated toxocariasis can cause retinal damage and decreased vision.[196] Dog feces can also contain hookworms that cause cutaneous larva migrans in humans.[197][198][199][200] Health benefits for humans A human cuddles a Doberman puppy. The scientific evidence is mixed as to whether companionship of a dog can enhance human physical health and psychological wellbeing.[201] Studies suggesting that there are benefits to physical health and psychological wellbeing[202] have been criticised for being poorly controlled,[203] and finding that \"[t]he health of elderly people is related to their health habits and social supports but not to their ownership of, or attachment to, a companion animal.\" Earlier studies have shown that people who keep pet dogs or cats exhibit better mental and physical health than those who do not, making fewer visits to the doctor and being less likely to be on medication than non-guardians.[204] A 2005 paper states \"recent research has failed to support earlier findings that pet ownership is associated with a reduced risk of cardiovascular disease, a reduced use of general practitioner services, or any psychological or physical benefits on health for community dwelling older people. Research has, however, pointed to significantly less absenteeism from school through sickness among children who live with pets.\"[201] In one study, new guardians reported a highly significant reduction in minor health problems during the first month following pet acquisition, and this effect was sustained in those with dogs through to the end of the study.[205] In addition, people with pet dogs took considerably more physical exercise than those with cats and those without pets. The results provide evidence that keeping pets may have positive effects on human health and behaviour, and that for guardians of dogs these effects are relatively long-term.[205] Pet guardianship has also been associated with increased coronary artery disease survival, with human guardians being significantly less likely to die within one year of an acute myocardial infarction than those who did not own dogs.[206] The health benefits of dogs can result from contact with dogs in general, and not solely from having dogs as pets. For example, when in the presence of a pet dog, people show reductions in cardiovascular, behavioral, and psychological indicators of anxiety.[207] Other health benefits are gained from exposure to immune-stimulating microorganisms, which, according to the hygiene hypothesis, can protect against allergies and autoimmune diseases. The benefits of contact with a dog also include social support, as dogs are able to not only provide companionship and social support themselves, but also to act as facilitators of social interactions between humans.[208] One study indicated that wheelchair users experience more positive social interactions with strangers when they are accompanied by a dog than when they are not.[209] In 2015, a study found that pet owners were significantly more likely to get to know people in their neighborhood than non-pet owners.[210] The practice of using dogs and other animals as a part of therapy dates back to the late 18th century, when animals were introduced into mental institutions to help socialize patients with mental disorders.[211] Animal-assisted intervention research has shown that animal-assisted therapy with a dog can increase social behaviors, such as smiling and laughing, among people with Alzheimer's disease.[212] One study demonstrated that children with ADHD and conduct disorders who participated in an education program with dogs and other animals showed increased attendance, increased knowledge and skill objectives, and decreased antisocial and violent behavior compared with those who were not in an animal-assisted program.[213] Medical detection dogs Medical detection dogs are capable of detecting diseases by sniffing a person directly or samples of urine or other specimens. Dogs can detect odour in one part per trillion, as their brain's olfactory cortex is (relative to total brain size) 40 times larger than humans. Dogs may have as many as 300 million odour receptors in their nose, while humans may have only 5 million. Each dog is trained specifically for the detection of single disease from the blood glucose level indicative to diabetes to cancer. The process of training a cancer dog requires six months. A Labrador Retriever called Daisy has detected 551 cancer patients with an accuracy of 93 percent and received the Blue Cross (for pets) Medal for her life-saving skills.[214] Shelters Main article: Animal shelter Every year, between 6 and 8 million dogs and cats enter US animal shelters.[215] The Humane Society of the United States (HSUS) estimates that approximately 3 to 4 million of those dogs and cats are euthanized yearly in the United States.[216] However, the percentage of dogs in US animal shelters that are eventually adopted and removed from the shelters by their new legal owners has increased since the mid-1990s from around 25% to a 2012 average of 40% among reporting shelters[217] (with many shelters reporting 60–75%).[218] Cultural depictions Spread of Seuso, dogs at Lake Balaton Main article: Cultural depictions of dogs Dogs have been viewed and represented in different manners by different cultures and religions, over the course of history. Mythology See also: Category:Mythological dogs In mythology, dogs often serve as pets or as watchdogs.[219] In Greek mythology, Cerberus is a three-headed watchdog who guards the gates of Hades.[219] In Norse mythology, a bloody, four-eyed dog called Garmr guards Helheim.[219] In Persian mythology, two four-eyed dogs guard the Chinvat Bridge.[219] In Philippine mythology, Kimat who is the pet of Tadaklan, god of thunder, is responsible for lightning. In Welsh mythology, Annwn is guarded by Cŵn Annwn.[219] In Hindu mythology, Yama, the god of death owns two watch dogs who have four eyes. They are said to watch over the gates of Naraka.[220] Hunter god Muthappan from North Malabar region of Kerala has a hunting dog as his mount. Dogs are found in and out of the Muthappan Temple and offerings at the shrine take the form of bronze dog figurines.[221] The role of the dog in Chinese mythology includes a position as one of the twelve animals which cyclically represent years (the zodiacal dog). Literature In Homer's epic poem the Odyssey, when the disguised Odysseus returns home after 20 years he is recognized only by his faithful dog, Argos, who has been waiting for his return. Religion In Islam, dogs are viewed as unclean because they are viewed as scavengers.[219] Jewish law does not prohibit keeping dogs and other pets.[222] Jewish law requires Jews to feed dogs (and other animals that they own) before themselves, and make arrangements for feeding them before obtaining them.[222] In Christianity, dogs represent faithfulness.[219] In China, Korea, and Japan, dogs are viewed as kind protectors.[219] Art Main article: Cultural depictions of dogs in Western art Wikimedia Commons has media related to Dogs in art. Cultural depictions of dogs in art extend back thousands of years to when dogs were portrayed on the walls of caves. Representations of dogs became more elaborate as individual breeds evolved and the relationships between human and canine developed. Hunting scenes were popular in the Middle Ages and the Renaissance. Dogs were depicted to symbolize guidance, protection, loyalty, fidelity, faithfulness, watchfulness, and love.[223] Ancient Greek rhyton in the shape of a dog's head, made by Brygos, early 5th century BC. Jérôme Carcopino Museum, Department of Archaeology, Aleria Decameron hunting scene, Davide Ghirlandaio, c.1485 Brooklyn Museum Figure of a Recumbent Dog, China, 4th century, Brooklyn Museum See also - Dogs portal - Mammals portal - Book: Dog - Aging in dogs - Toy Group - Animal track - Argos (dog) - Dog in Chinese mythology - Dogs in art - Dog odor - Dognapping - Ethnocynology - Hachikō–a notable example of dog loyalty - Pet recovery service - Mountain dog - Wolfdog Lists - List of fictional dogs - List of individual dogs Notes 1. ^ The addition of [domestic dog] against dingo and familiaris is inferred to mean that these two taxons form the \"domestic dog clade\" within Canis lupus, as opposed to its wild \"wolf clade\". References 1. ^ a b Wozencraft, W.C. (2005). \"Order Carnivora\". In Wilson, D.E.; Reeder, D.M. Mammal Species of the World: A Taxonomic and Geographic Reference (3rd ed.). Johns Hopkins University Press. pp. 575–577. ISBN 978-0-8018-8221-0. OCLC 62265494. url=https://books.google.com/books?id=JgAMbNSt8ikC&pg=PA576 2. ^ a b Linnæus, Carl (1758). Systema naturæ per regna tria naturæ, secundum classes, ordines, genera, species, cum characteribus, differentiis, synonymis, locis. Tomus I (in Latin) (10 ed.). Holmiæ (Stockholm): Laurentius Salvius. pp. 38–40. Retrieved 11 February 2017. 3. ^ a b \"Opinions and Declarations Rendered by the International Commission on Zoological Nomenclature - Opinion 91\". Smithsonian Miscellaneous Collections. Smithsonian Institution, City of Washington. 73 (4). 1926. 4. ^ a b c Wang, Xiaoming; Tedford, Richard H.; Dogs: Their Fossil Relatives and Evolutionary History. New York: Columbia University Press, 2008, page 1 5. ^ a b Lindblad-Toh, K.; Wade, C. M.; Mikkelsen, T. S.; Karlsson, E. K.; Jaffe, D. B.; Kamal, M.; Clamp, M.; Chang, J. L.; Kulbokas, E. J.; Zody, M. C.; Mauceli, E.; Xie, X.; Breen, M.; Wayne, R. K.; Ostrander, E. A.; Ponting, C. P.; Galibert, F.; Smith, D. R.; Dejong, P. J.; Kirkness, E.; Alvarez, P.; Biagi, T.; Brockman, W.; Butler, J.; Chin, C. W.; Cook, A.; Cuff, J.; Daly, M. J.; Decaprio, D.; et al. (2005). \"Genome sequence, comparative analysis and haplotype structure of the domestic dog\". Nature. 438 (7069): 803–819. Bibcode:2005Natur.438..803L. doi:10.1038/nature04338. PMID 16341006. 6. ^ a b c Fan, Zhenxin; Silva, Pedro; Gronau, Ilan; Wang, Shuoguo; Armero, Aitor Serres; Schweizer, Rena M.; Ramirez, Oscar; Pollinger, John; Galaverni, Marco; Ortega Del-Vecchyo, Diego; Du, Lianming; Zhang, Wenping; Zhang, Zhihe; Xing, Jinchuan; Vilà, Carles; Marques-Bonet, Tomas; Godinho, Raquel; Yue, Bisong; Wayne, Robert K. (2016). \"Worldwide patterns of genomic variation and admixture in gray wolves\". Genome Research. 26 (2): 163–73. doi:10.1101/gr.197517.115. PMID 26680994. 7. ^ a b c d e Thalmann, O.; Shapiro, B.; Cui, P.; Schuenemann, V. J.; Sawyer, S. K.; Greenfield, D. L.; Germonpre, M. B.; Sablin, M. V.; Lopez-Giraldez, F.; Domingo-Roura, X.; Napierala, H.; Uerpmann, H.-P.; Loponte, D. M.; Acosta, A. A.; Giemsch, L.; Schmitz, R. W.; Worthington, B.; Buikstra, J. E.; Druzhkova, A.; Graphodatsky, A. S.; Ovodov, N. D.; Wahlberg, N.; Freedman, A. H.; Schweizer, R. M.; Koepfli, K.- P.; Leonard, J. A.; Meyer, M.; Krause, J.; Paabo, S.; et al. (2013). \"Complete Mitochondrial Genomes of Ancient Canids Suggest a European Origin of Domestic Dogs\". Science. 342 (6160): 871. doi:10.1126/science.1243650. PMID 24233726. 8. ^ a b Vila, C.; Amorim, I. R.; Leonard, J. A.; Posada, D.; Castroviejo, J.; Petrucci-Fonseca, F.; Crandall, K. A.; Ellegren, H.; Wayne, R. K. (1999). \"Mitochondrial DNA phylogeography and population history of the grey wolf Canis lupus\". Molecular Ecology. 8 (12): 2089–103. doi:10.1046/j.1365-294x.1999.00825.x. PMID 10632860. 9. ^ a b c Vila, C. (1997). \"Multiple and ancient origins of the domestic dog\". Science. 276 (5319): 1687–9. doi:10.1126/science.276.5319.1687. PMID 9180076. 10. ^ a b c d e Freedman, Adam H.; Gronau, Ilan; Schweizer, Rena M.; Ortega-Del Vecchyo, Diego; Han, Eunjung; Silva, Pedro M.; Galaverni, Marco; Fan, Zhenxin; Marx, Peter; Lorente-Galdos, Belen; Beale, Holly; Ramirez, Oscar; Hormozdiari, Farhad; Alkan, Can; Vilà, Carles; Squire, Kevin; Geffen, Eli; Kusak, Josip; Boyko, Adam R.; Parker, Heidi G.; Lee, Clarence; Tadigotla, Vasisht; Siepel, Adam; Bustamante, Carlos D.; Harkins, Timothy T.; Nelson, Stanley F.; Ostrander, Elaine A.; Marques-Bonet, Tomas; Wayne, Robert K.; Novembre, John (16 January 2014). \"Genome Sequencing Highlights Genes Under Selection and the Dynamic Early History of Dogs\". PLOS Genetics. PLOS Org. 10 (1): e1004016. doi:10.1371/journal.pgen.1004016. PMC 3894170 . PMID 24453982. Retrieved 8 December 2014. 11. ^ a b c d e f Larson G, Bradley DG (2014). \"How Much Is That in Dog Years? The Advent of Canine Population Genomics\". PLOS Genetics. 10 (1): e1004093. doi:10.1371/journal.pgen.1004093. PMC 3894154 . PMID 24453989. 12. ^ vonHoldt, Bridgett M.; Driscoll, Carlos A. (2016). \"3-Origins of the dog:Genetic insights into dog domestication\". In James Serpell. The Domestic Dog: Its Evolution, Behavior and Interactions with People (2 ed.). Cambridge University Press. pp. 22–41. ISBN 978-1-107-02414-4. 13. ^ a b Perri, Angela (2016). \"A wolf in dog's clothing: Initial dog domestication and Pleistocene wolf variation\". Journal of Archaeological Science. 68: 1. doi:10.1016/j.jas.2016.02.003. 14. ^ a b c d e f g h i j k Dewey, T. and S. Bhagat. 2002. \"Canis lupus familiaris Archived 23 October 2014 at the Wayback Machine.\", Animal Diversity Web. Retrieved 6 January 2009. 15. ^ Bridgett M. von Holdt, Emily Shuldiner, Ilana Janowitz Koch, Rebecca Y. Kartzinel, Andrew Hogan, Lauren Brubaker, Shelby Wanser4, Daniel Stahler, Clive D. L. Wynne, Elaine A. Ostrander, Janet S. Sinsheimer and Monique A. R. Udell (19 Jul 2017). \"Structural variants in genes associated with human Williams-Beuren syndrome underlie stereotypical hypersociability in domestic dogs\". Science Advances. 3 (7): e1700398. doi:10.1126/sciadv.1700398. CS1 maint: Multiple names: authors list (link) 16. ^ Mira Abed (2017-07-21). \"Scientists find key 'friendliness' genes that distinguish dogs from wolves\". L.A. Times. 17. ^ a b Berns, G. S.; Brooks, A. M.; Spivak, M. (2012). Neuhauss, Stephan C. F, ed. \"Functional MRI in Awake Unrestrained Dogs\". PLoS ONE. 7 (5): e38027. Bibcode:2012PLoSO...738027B. doi:10.1371/journal.pone.0038027. PMC 3350478 . PMID 22606363. 18. ^ a b Axelsson, E.; Ratnakumar, A.; Arendt, M. L.; Maqbool, K.; Webster, M. T.; Perloski, M.; Liberg, O.; Arnemo, J. M.; Hedhammar, Å.; Lindblad-Toh, K. (2013). \"The genomic signature of dog domestication reveals adaptation to a starch-rich diet\". Nature. 495 (7441): 360–364. Bibcode:2013Natur.495..360A. doi:10.1038/nature11837. PMID 23354050. 19. ^ Why are different breeds of dogs all considered the same species? - Scientific American Archived 10 October 2016 at the Wayback Machine.. Nikhil Swaminathan. Accessed on 28 August 2016. 20. ^ \"Domestic PetDog Classified By Linnaeus In 1758 As Canis Familiaris And Canis Familiarus Domesticus\". www.encyclocentral.com. Archived from the original on 21 May 2013. Retrieved 18 June 2008. 21. ^ Seebold, Elmar (2002). Kluge. Etymologisches Wörterbuch der deutschen Sprache. Berlin/New York: Walter de Gruyter. p. 207. ISBN 3-11-017473-1. 22. ^ \"Dictionary of Etymology\", Dictionary.com, s.v. dog, encyclopedia.com retrieved on 27 May 2009. 23. ^ Gąsiorowski, Piotr (2006). \"The etymology of Old English *docga\" (PDF). Indogermanische Forschungen. 111: 275–284. doi:10.1515/IDGF.2006.015. Retrieved 18 June 2017. 24. ^ Broz, Vlatko (2008). \"Diachronic Investigations of False Friends\". Contemporary Linguistics (Suvremena lingvistika). 66 (2): 199–222. 25. ^ René Dirven; Marjolyn Verspoor (2004). Cognitive exploration of language and linguistics. John Benjamins Publishing Company. pp. 215–216. ISBN 978-90-272-1906-0. 26. ^ \"The American Heritage Dictionary of the English Language: Fourth Edition\". www.bartleby.com. Archived from the original on 18 October 2006. Retrieved 30 November 2006. 27. ^ Mallory, J. R. (1991). In search of the Indo-Europeans: language, archaeology and myth. London: Thames and Hudson. ISBN 0-500-27616-1. [page needed] 28. ^ Gould, Jean (1978). All about dog breeding for quality and soundness. London, Eng: Pelham. ISBN 0-7207-1064-2. [page needed] 29. ^ \"Dog\". Dictionary.com. 30. ^ Harper, Douglas. \"canine\". Online Etymology Dictionary. 31. ^ Francis Hemming, ed. (1957). \"Opinion 451\". Opinions and Declarations Rendered by the International Commission on Zoological Nomenclature. 15. Order of the International Trust for Zoological Nomenclature. pp. 331–333. 32. ^ Official Lists and Indexes of Names in Zoology (PDF). International Commission on Zoological Nomenclature. 2014. pp. 126, 225. 33. ^ Van Gelder, Richard G. (1978). \"A Review of Canid Classification\" (PDF). 2646. American Museum of Natural History, Central Park West, 79th Street, New York: 2. 34. ^ Honaki, J, ed. (1982). Mammal species of the world: A taxonomic and geographic reference (First Edition). Allen Press and the Association of Systematics Collections. p. 245. 35. ^ a b c Smith, Bradley (2015). \"Chapter 1:The Dingo Debate\". In Bradley Smith. The Dingo Debate: Origins, Behaviour and Conservation. CSIRO Publishing, Melbourne, Australia. pp. 2–3. ISBN 9781486300303. 36. ^ \"Opinion 2027\". Opinions and Declarations Rendered by the International Commission on Zoological Nomenclature. 60. Order of the International Trust for Zoological Nomenclature. 2003. pp. 81–84. 37. ^ Handbuch der Naturgeschichte. Blumenbach, J.F. 1799. Sechste Auflage. Johann Christian Dieterich, Göttingen. [ref page 100, under Canis, under familiaris, under Dingo. Translation: \"Dingo. The New Holland dog. Is similar, especially in the head and shoulders, as a fox.] 38. ^ Gardner, Alfred L. (2017). \"ITIS Report - Canis dingo Blumenbach, 1780\". www.itis.gov. Integrated Taxonomic Information System. 39. ^ a b Jackson, Stephen; Groves, Colin (2015). Taxonomy of Australian Mammals. CSIRO Publishing, Clayton, Victoria, Australia. pp. 287–290. ISBN 9781486300136. 40. ^ a b Crowther, M. S.; M. Fillios; N. Colman; M. Letnic (2014). \"An updated description of the Australian dingo (Canis dingo Meyer, 1793)\". Journal of Zoology. 293 (3): 192–203. doi:10.1111/jzo.12134. 41. ^ Clutton-Brock, Juliet (2015). \"Chapter 9. Naming the scale of nature\". In Alison M Behie; Marc F Oxenham. Taxonomic Tapestries: The Threads of Evolutionary, Behavioural and Conservation Research (PDF). ANU Press, The Australian National University, Canberra, Australia. pp. 171–182. 42. ^ Benga, Gheorghe; Chapman, Bogdan E; Matei, Horea; Cox, Guy C; Romeo, Tony; Mironescu, Eugen; Kuchel, Philip W (2010). \"Comparative NMR studies of diffusional water permeability of red blood cells from different species: XVI Dingo (Canis familiaris dingo) and dog (Canis familiaris)\". Cell Biology International. 34 (4): 373. doi:10.1042/CBI20090006. PMID 19947930. 43. ^ Elledge, Amanda E.; Leung, Luke K.-P.; Allen, LEE R.; Firestone, Karen; Wilton, Alan N. (2006). \"Assessing the taxonomic status of dingoes Canis familiaris dingo for conservation\". Mammal Review. 36 (2): 142. doi:10.1111/j.1365-2907.2006.00086.x. 44. ^ Jones. F. W. (1925). 'The Mammals of South Australia.' Pt. I11 (Government Printer: Adelaide.) 45. ^ vonHoldt, B. (2010). \"Genome-wide SNP and haplotype analyses reveal a rich history underlying dog domestication\". Nature. 464 (7290): 898–902. doi:10.1038/nature08837. PMC 3494089 . PMID 20237475. 46. ^ Liane Giemsch, Susanne C. Feine, Kurt W. Alt, Qiaomei Fu, Corina Knipper, Johannes Krause, Sarah Lacy, Olaf Nehlich, Constanze Niess, Svante Pääbo, Alfred Pawlik, Michael P. Richards, Verena Schünemann, Martin Street, Olaf Thalmann, Johann Tinnes, Erik Trinkaus & Ralf W. Schmitz. \"Interdisciplinary investigations of the late glacial double burial from Bonn-Oberkassel\". Hugo Obermaier Society for Quaternary Research and Archaeology of the Stone Age: 57th Annual Meeting in Heidenheim, 7th – 11 April 2015, 36–37 47. ^ Germonpre, M. (2009). \"Fossil dogs and wolves from Palaeolithic sites in Belgium, the Ukraine and Russia: Osteometry, ancient DNA and stable isotopes\". Journal of Archaeological Science. 36 (2): 473–490. doi:10.1016/j.jas.2008.09.033. 48. ^ a b c d Machugh, David E.; Larson, Greger; Orlando, Ludovic (2016). \"Taming the Past: Ancient DNA and the Study of Animal Domestication\". Annual Review of Animal Biosciences. 5: 329–351. doi:10.1146/annurev-animal-022516-022747. PMID 27813680. 49. ^ Shannon, L (2015). \"Genetic structure in village dogs reveals a Central Asian domestication origin\". Proceedings of the National Academy of Sciences. 112 (44): 201516215. doi:10.1073/pnas.1516215112. PMC 4640804 . PMID 26483491. 50. ^ Wang, G (2015). \"Out of southern East Asia: the natural history of domestic dogs across the world\". Cell Research. 26 (1): 21–33. doi:10.1038/cr.2015.147. PMC 4816135 . PMID 26667385. 51. ^ Frantz, L. A. F.; Mullin, V. E.; Pionnier-Capitan, M.; Lebrasseur, O.; Ollivier, M.; Perri, A.; Linderholm, A.; Mattiangeli, V.; Teasdale, M. D.; Dimopoulos, E. A.; Tresset, A.; Duffraisse, M.; McCormick, F.; Bartosiewicz, L.; Gal, E.; Nyerges, E. A.; Sablin, M. V.; Brehard, S.; Mashkour, M.; b l Escu, A.; Gillet, B.; Hughes, S.; Chassaing, O.; Hitte, C.; Vigne, J.-D.; Dobney, K.; Hanni, C.; Bradley, D. G.; Larson, G. (2016). \"Genomic and archaeological evidence suggest a dual origin of domestic dogs\". Science. 352 (6290): 1228. doi:10.1126/science.aaf3161. PMID 27257259. 52. ^ Grimm, David (2016). \"Dogs may have been domesticated more than once\". Science. doi:10.1126/science.aaf5755. 53. ^ \"World's Largest Dog\". Retrieved 7 January 2008. 54. ^ \"Guinness World Records – Tallest Dog Living\". Guinness World Records. 31 August 2004. Archived from the original on 11 July 2011. Retrieved 7 January 2009. 55. ^ Nießner, Christine; Denzau, Susanne; Malkemper, Erich Pascal; Gross, Julia Christina; Burda, Hynek; Winklhofer, Michael; Peichl, Leo (2016). \"Cryptochrome 1 in Retinal Cone Photoreceptors Suggests a Novel Functional Role in Mammals\". Scientific Reports. 6: 21848. doi:10.1038/srep21848. PMC 4761878 . PMID 26898837. 56. ^ Magnetoreception molecule found in the eyes of dogs and primates Archived 23 December 2016 at the Wayback Machine. MPI Brain Research, 22 February 2016 57. ^ Club, American Kennel. \"Golden Retriever History & Training/Temperament\". American Kennel Club. Retrieved 2017-09-13. 58. ^ Klappenbach, Laura (2008). \"What is Counter Shading?\". About.com. Retrieved 22 October 2008. 59. ^ Cunliffe, Juliette (2004). \"Coat Types, Colours and Markings\". The Encyclopedia of Dog Breeds. Paragon Publishing. pp. 20–23. ISBN 0-7525-8276-3. 60. ^ \"The Case for Tail Docking\". Council of Docked Breeds. Retrieved 22 October 2008. 61. ^ \"Bourbonnais pointer or 'short tail pointer'\". Braquedubourbonnais.info. Retrieved 19 December 2012. 62. ^ \"Plants poisonous to dogs – Sunset\". Sunset. 63. ^ Sources vary on which of these are considered the most significant toxic item. 64. ^ Murphy, L. A.; Coleman, A. E. (2012). \"Xylitol Toxicosis in Dogs\". Veterinary Clinics of North America: Small Animal Practice. 42 (2): 307–312. doi:10.1016/j.cvsm.2011.12.003. 65. ^ \"Toxic Foods and Plants for Dogs\". entirelypets.com. Retrieved 24 June 2010. 66. ^ Drs. Foster & Smith. \"Foods to Avoid Feeding Your Dog\". peteducation.com. Retrieved 24 June 2010. 67. ^ Fogle, Bruce (1974). Caring For Your Dog. 68. ^ Ward, Ernie. \"Diseases shared by humans and pets\". Dogtime.com. Retrieved 2 October 2010. 69. ^ O'Neill, D. G.; Church, D. B.; McGreevy, P. D.; Thomson, P. C.; Brodbelt, D. C. (2013). \"Longevity and mortality of owned dogs in England\". The Veterinary Journal. 198 (3): 638–643. doi:10.1016/j.tvjl.2013.09.020. PMID 24206631. 70. ^ \"Kennel Club/British Small Animal Veterinary Association Scientific Committee\". 2004. Retrieved 5 July 2007. 71. ^ a b Proschowsky, H. F.; H. Rugbjerg & A. K. Ersbell (2003). \"Mortality of purebred and mixed-breed dogs in Denmark\". Preventive Veterinary Medicine. 58 (1–2): 63–74. doi:10.1016/S0167-5877(03)00010-2. PMID 12628771. 72. ^ a b Michell AR (1999). \"Longevity of British breeds of dog and its relationships with sex, size, cardiovascular variables and disease\". The Veterinary Record. 145 (22): 625–9. doi:10.1136/vr.145.22.625. PMID 10619607. 73. ^ a b c d Compiled by Cassidy; K. M. \"Dog Longevity Web Site, Breed Data page\". Retrieved 8 July 2007. 74. ^ Patronek GJ, Waters DJ, Glickman LT (1997). \"Comparative longevity of pet dogs and humans: implications for gerontology research\". The Journals of Gerontology. Series a, Biological Sciences and Medical Sciences. 52 (3): B171–8. doi:10.1093/gerona/52A.3.B171. PMID 9158552. 75. ^ \"Pusuke, world's oldest living dog, dies in Japan\". 7 December 2011. 76. ^ \"Sexual Maturity — Spay and Neuter\". Buffalo.com. Archived from the original on 10 June 2009. Retrieved 22 October 2008. 77. ^ Concannon, P; Tsutsui, T; Shille, V (2001). \"Embryo development, hormonal requirements and maternal responses during canine pregnancy\". Journal of reproduction and fertility. Supplement. 57: 169–79. PMID 11787146. 78. ^ \"Dog Development – Embryology\". Php.med.unsw.edu.au. 16 June 2013. Archived from the original on 2 December 2013. Retrieved 22 September 2013. 79. ^ \"Gestation in dogs\". Archived from the original on 3 June 2013. Retrieved 24 March 2013. 80. ^ \"HSUS Pet Overpopulation Estimates\". The Humane Society of the United States. Retrieved 22 October 2008. 81. ^ \"French Bulldog Pet Care Guide\". Archived from the original on 26 July 2011. Retrieved 7 January 2008. 82. ^ \"Top 10 reasons to spay/neuter your pet\". American Society for Prevention of Cruelty to Animals. Retrieved 16 May 2007. 83. ^ Mahlow, Jane C. (1999). \"Estimation of the proportions of dogs and cats that are surgically sterilized\". Journal of the American Veterinary Medical Association. 215 (5): 640–643. PMID 10476708. Although the cause of pet overpopulation is multifaceted, the lack of guardians choosing to spay or neuter their animals is a major contributing factor. 84. ^ Heidenberger, E; Unshelm, J (Feb 1990). \"Changes in the behavior of dogs after castration\". Tierärztliche Praxis (in German). 18 (1): 69–75. ISSN 0303-6286. PMID 2326799. 85. ^ Morrison, Wallace B. (1998). Cancer in Dogs and Cats (1st ed.). Williams and Wilkins. ISBN 0-683-06105-4. 86. ^ Arnold S (1997). \"[Urinary incontinence in castrated bitches. Part 1: Significance, clinical aspects and etiopathogenesis]\". Schweizer Archiv für Tierheilkunde (in German). 139 (6): 271–6. PMID 9411733. 87. ^ Johnston, SD; Kamolpatana, K; Root-Kustritz, MV; Johnston, GR (Jul 2000). \"Prostatic disorders in the dog\". Anim. Reprod. Sci. 60–61: 405–15. doi:10.1016/S0378-4320(00)00101-9. ISSN 0378-4320. PMID 10844211. 88. ^ Root-Kustritz MV (Dec 2007). \"Determining the optimal age for gonadectomy of dogs and cats\". JAVMA. 231 (11): 1665–1675. doi:10.2460/javma.231.11.1665. ISSN 0003-1488. PMID 18052800. 89. ^ Leroy G (2011). \"Genetic diversity, inbreeding and breeding practices in dogs: results from pedigree analyses\". Vet. J. 189 (2): 177–82. doi:10.1016/j.tvjl.2011.06.016. PMID 21737321. 90. ^ Leroy G, Phocas F, Hedan B, Verrier E, Rognon X (2015). \"Inbreeding impact on litter size and survival in selected canine breeds\". Vet. J. 203 (1): 74–8. doi:10.1016/j.tvjl.2014.11.008. PMID 25475165. 91. ^ Gresky C, Hamann H, Distl O (2005). \"[Influence of inbreeding on litter size and the proportion of stillborn puppies in dachshunds]\". Berl. Munch. Tierarztl. Wochenschr. (in German). 118 (3–4): 134–9. PMID 15803761. 92. ^ a b van der Beek S, Nielen AL, Schukken YH, Brascamp EW (1999). \"Evaluation of genetic, common-litter, and within-litter effects on preweaning mortality in a birth cohort of puppies\". Am. J. Vet. Res. 60 (9): 1106–10. PMID 10490080. 93. ^ Charlesworth D, Willis JH (2009). \"The genetics of inbreeding depression\". Nat. Rev. Genet. 10 (11): 783–96. doi:10.1038/nrg2664. PMID 19834483. 94. ^ Bernstein H, Hopf FA, Michod RE (1987). \"The molecular basis of the evolution of sex\". Adv. Genet. Advances in Genetics. 24: 323–70. doi:10.1016/s0065-2660(08)60012-7. ISBN 9780120176243. PMID 3324702. 95. ^ Smith, B.; Litchfield, C. (2010). \"How well do dingoes (Canis dingo) perform on the detour task\". Animal Behaviour. 80: 155–162. doi:10.1016/j.anbehav.2010.04.017. 96. ^ Miklósi, A; Kubinyi, E; Topál, J; Gácsi, M; Virányi, Z; Csányi, V (Apr 2003). \"A simple reason for a big difference: wolves do not look back at humans, but dogs do\". Curr Biol. 13 (9): 763–6. doi:10.1016/S0960-9822(03)00263-X. PMID 12725735. 97. ^ Brian Hare; Vanessa Woods (8 February 2013), \"What Are Dogs Saying When They Bark? [Excerpt]\", Scientific America, retrieved 17 March 2015 98. ^ Amy Crawford. \"Why Dogs are More Like Humans Than Wolves\". Smithsonian. Retrieved 2 September 2015. 99. ^ Levitis, Daniel A.; Lidicker, William Z. Jr.; Freund, Glenn (June 2009). \"Behavioural biologists do not agree on what constitutes behaviour\" (PDF). Animal Behaviour. 78 (1): 103–10. doi:10.1016/j.anbehav.2009.03.018. 100. ^ Tomasello, M.; Kaminski, J. (2009). \"Like Infant, Like Dog\". Science. 325 (5945): 1213–4. doi:10.1126/science.1179670. PMID 19729645. 101. ^ http://advances.sciencemag.org/content/3/7/e1700398.full 102. ^ Coren, Stanley \"How To Speak Dog: Mastering the Art of Dog-Human Communication\" 2000 Simon & Schuster, New York. 103. ^ Skoglund, P. (2015). \"Ancient wolf genome reveals an early divergence of domestic dog ancestors and admixture into high-latitude breeds\". Current Biology. 25 (11): 1515–9. doi:10.1016/j.cub.2015.04.019. PMID 26004765. 104. ^ Elliot, D. G., and M. Wong. 1972. Acid phosphatase, handy enzyme that separates the dog from the wolf. Acta Biologica et Medica Germanica 28:957–62 105. ^ Mech, D. L. (1974). \"Canis lupus\" (PDF). Mammalian Species. 37 (37): 1–6. doi:10.2307/3503924. JSTOR 3503924. 106. ^ a b Serpell, James (1995). \"Origins of the dog: domestication and early history\". The Domestic Dog. Cambridge: Cambridge Univ. Press. ISBN 0-521-41529-2. 107. ^ Clutton-Brock, Juliet (1987). A Natural History of Domesticated Mammals. British Museum (Natural History), p. 24, ISBN 0-521-34697-5 108. ^ Janssens, L; Spanoghe, I; Miller, R; Van Dongen, S. \"Can orbital angle morphology distinguish dogs from wolves?\". Zoomorphology. 135: 149–158. doi:10.1007/s00435-015-0294-3. PMC 4742516 . PMID 26893534. 109. ^ Rincon, Paul (8 April 2004), Claws reveal wolf survival threat, BBC News, retrieved 12 December 2014 110. ^ Mech & Boitani 2003, p. 257 111. ^ http://veterinarycalendar.dvm360.com/canine-estrous-cycle-and-ovulation-proceedings 112. ^ http://dnr.wi.gov/topic/wildlifehabitat/wolf/identify.html 113. ^ a b c Coppinger, Ray (2001). Dogs: a Startling New Understanding of Canine Origin, Behavior and Evolution. New York: Scribner. ISBN 0-684-85530-5. 114. ^ Lopez, Barry (1978). Of wolves and men. New York: Scribner Classics. p. 320. ISBN 0-7432-4936-4. 115. ^ a b Spady TC, Ostrander EA (January 2008). \"Canine Behavioral Genetics: Pointing Out the Phenotypes and Herding up the Genes\". American Journal of Human Genetics. 82 (1): 10–8. doi:10.1016/j.ajhg.2007.12.001. PMC 2253978 . PMID 18179880. 116. ^ a b The Complete dog book: the photograph, history, and official standard of every breed admitted to AKC registration, and the selection, training, breeding, care, and feeding of pure-bred dogs. New York, N.Y: Howell Book House. 1992. ISBN 0-87605-464-5. [page needed] 117. ^ Serpell J, Duffy D. Dog Breeds and Their Behavior. In: Domestic Dog Cognition and Behavior. Berlin, Heidelberg: Springer; 2014 118. ^ a b c d e Cagan, Alex; Blass, Torsten (2016). \"Identification of genomic variants putatively targeted by selection during dog domestication\". BMC Evolutionary Biology. 16. doi:10.1186/s12862-015-0579-7. PMC 4710014 . PMID 26754411. 119. ^ Almada RC, Coimbra NC. Recruitment of striatonigral disinhibitory and nigrotectal inhibitory GABAergic pathways during the organization of defensive behavior by mice in a dangerous environment with the venomous snake Bothrops alternatus [ Reptilia, Viperidae ] Synapse 2015:n/a–n/a 120. ^ Coppinger R, Schneider R: Evolution of working dogs. The domestic dog: Its evolution, behaviour and interactions with people. Cambridge: Cambridge University press, 1995. 121. ^ Gompper, Matthew E. (2013). \"The dog–human–wildlife interface: assessing the scope of the problem\". In Gompper, Matthew E. Free-Ranging Dogs and Wildlife Conservation. Oxford University Press. pp. 9–54. 122. ^ a b c d Lescureux, Nicolas; Linnell, John D.C. (2014). \"Warring brothers: The complex interactions between wolves (Canis lupus) and dogs (Canis familiaris) in a conservation context\". Biological Conservation. 171: 232–245. doi:10.1016/j.biocon.2014.01.032. 123. ^ Laveaux, C.J. & King of Prussia, F (1789). The life of Frederick the Second, King of Prussia: To which are added observations, Authentic Documents, and a Variety of Anecdotes. J. Derbett London. 124. ^ Ortolani, A (2009). \"Ethiopian village dogs: Behavioural responses to a stranger's approach\". Applied Animal Behaviour Science. 119 (3–4): 210–218. doi:10.1016/j.applanim.2009.03.011. 125. ^ Udell, M. A. R.; Dorey, N. R.; Wynne, C. D. L. (2010). \"What did domestication do to dogs? A new account of dogs' sensitivity to human actions\". Biological Reviews. 85 (2): 327–45. doi:10.1111/j.1469-185X.2009.00104.x. PMID 19961472. 126. ^ Vanak, A.T., Dickman, C.R., Silva-Rodriguez, E.A., Butler, J.R.A., Ritchie, E.G., 2014. Top-dogs and under-dogs: competition between dogs and sympatric carnivores. In: Gompper, M.E. (Ed.), Free-Ranging Dogs and Wildlife Conservation. Oxford University Press, Oxford, pp. 69–93 127. ^ Boitani, L., 1983. Wolf and dog competition in Italy. Acta Zool. Fennica 174, 259–264 128. ^ a b Boitani, Luigi; Mech, L. David (2003). Wolves: behavior, ecology, and conservation. Chicago: University of Chicago Press. pp. 305–306. ISBN 0-226-51696-2. 129. ^ Graves, Will (2007). Wolves in Russia: Anxiety throughout the ages. Calgary: Detselig Enterprises. p. 222. ISBN 1-55059-332-3. 130. ^ Kojola, I.; Ronkainen, S.; Hakala, A.; Heikkinen, S.; Kokko, S. \"Interactions between wolves Canis lupus and dogs C. familiaris in Finland\". Nordic Council for Wildlife Research. 131. ^ Scott, Jonathan; Scott, Angela (2006). Big Cat Diary: Leopard. London: Collins. p. 108. ISBN 0-00-721181-3. 132. ^ Perry, Richard (1965). The World of the Tiger. p. 260. ASIN: B0007DU2IU. 133. ^ \"Striped Hyaena Hyaena (Hyaena) hyaena (Linnaeus, 1758)\". IUCN Species Survival Commission Hyaenidae Specialist Group. Archived from the original on 28 September 2007. Retrieved 21 May 2008. 134. ^ https://www.quora.com/Why-do-some-dog-collars-have-spikes 135. ^ Marc Bekoff; Dale Jamieson (2006). \"Ethics and the Study of Carnivores\". Animal passions and beastly virtues. Temple University Press. ISBN 978-1-59213-348-2. 136. ^ Hazard, Evan B. (1982). \"Order Carnivora\". The mammals of Minnesota. U of Minnesota Press. ISBN 978-0-8166-0952-9. 137. ^ S. G. Pierzynowski; R. Zabielski (1999). Biology of the pancreas in growing animals. Volume 28 of Developments in animal and veterinary sciences. Elsevier Health Sciences. p. 417. ISBN 978-0-444-50217-9. 138. ^ National Research Council (U.S.). Ad Hoc Committee on Dog and Cat Nutrition (2006). Nutrient requirements of dogs and cats. National Academies Press. p. 137. ISBN 978-0-309-08628-8. 139. ^ Smith, Cheryl S. (2008). \"Chapter 6, Omnivores Together\". Grab Life by the Leash: A Guide to Bringing Up and Bonding with Your Four-Legged Friend. John Wiley and Sons. ISBN 978-0-470-17882-9. 140. ^ Savolainen P, Zhang YP, Luo J, Lundeberg J, Leitner T (November 2002). \"Genetic evidence for an East Asian origin of domestic dogs\". Science. 298 (5598): 1610–3. Bibcode:2002Sci...298.1610S. doi:10.1126/science.1073906. PMID 12446907. 141. ^ The Merriam-Websterial Staff, ed. (1967). Webster's Third New International Dictionary of the English Language, Unabridged. Springfield, MA U.S.A.: G&C Merriam Company. p. 2476. type (4a) the combination of character that fits an individual to a particular use or function (a strong horse of the draft type) 142. ^ a b c Parker, Heidi G.; Kim, Lisa V.; Sutter, Nathan B.; Carlson, Scott; Lorentzen, Travis D.; Malek, Tiffany B.; Johnson, Gary S.; DeFrance, Hawkins B.; Ostrander, Elaine A.; Kruglyak, Leonid (2004). \"Genetic structure of the purebred domestic dog\". Science. 304 (5674): 1160–4. Bibcode:2004Sci...304.1160P. doi:10.1126/science.1097406. PMID 15155949. 143. ^ Ostrander, Elaine A. (September–October 2007). \"Genetics and the Shape of Dogs; Studying the new sequence of the canine genome shows how tiny genetic changes can create enormous variation within a single species\". American Scientist (online). www.americanscientist.org. pp. also see chart page 4. Retrieved 22 September 2008. 144. ^ a b Miklósi, Adám (2007). Dog Behaviour, Evolution, and Cognition. Oxford University Press. doi:10.1093/acprof:oso/9780199295852.001.0001. ISBN 978-0-19-929585-2. 145. ^ a b Wingfield-Hayes, Rupert (29 June 2002). \"China's taste for the exotic\". BBC News. 146. ^ a b \"Vietnam's dog meat tradition\". BBC News. 31 December 2001. 147. ^ a b c Groves, Colin (1999). \"The Advantages and Disadvantages of Being Domesticated\". Perspectives in Human Biology. 4: 1–12. ISSN 1038-5762. 148. ^ Travels in Central Asia by Meer Izzut-oollah in the Years 1812-13. Translated by Captain Henderson. Calcutta, 1872, p. 15. 149. ^ a b c d e Tacon, Paul; Pardoe, Colin (2002). \"Dogs make us human\". Nature Australia. 27 (4): 52–61. 150. ^ Ruusila, Vesa; Pesonen, Mauri (2004). \"Interspecific cooperation in human (Homo sapiens) hunting: the benefits of a barking dog (Canis familiaris)\" (PDF). Annales Zoologici Fennici. 41 (4): 545–9. 151. ^ Newby, Jonica (1997). The Pact for Survival. Sydney: ABC Books. ISBN 0-7333-0581-4. [page needed] 152. ^ a b A History of Dogs in the Early Americas, Marion Schwartz, 1998, 260 p., ISBN 978-0-300-07519-9, Yale University Press 153. ^ \"The University of Maine – UMaine News – UMaine Student Finds Oldest Known Domesticated Dog in Americas\". Umaine.edu. 11 January 2011. Retrieved 4 July 2013. 154. ^ Derr, Mark (2004). A dogs history of America. North Point Press. p.12 155. ^ a b Derr, Mark (1997). Dog's Best Friend. Chicago: University of Chicago Press. ISBN 0-226-14280-9. 156. ^ Clutton-Brock, Juliet (1995), \"Origins of the dog: domestication and early history\", in Serpell, James, The domestic dog: its evolution, behaviour and interactions with people, Cambridge: Cambridge University Press, ISBN 0-521-41529-2 157. ^ Franklin, A (2006). \"Be[a]ware of the Dog: a post-humanist approach to housing\". Housing Theory and Society. 23 (3): 137–156. doi:10.1080/14036090600813760. ISSN 1403-6096. 158. ^ Katz, Jon (2003). The New Work of Dogs. New York: Villard Books. ISBN 0-375-76055-5. 159. ^ Haraway, Donna (2003). The Companion Species manifesto: Dogs, People and Significant Otherness. Chicago: Prickly Paradigm Press. ISBN 0-9717575-8-5. 160. ^ a b c d e Power, Emma (2008). \"Furry Families: Making a Human-Dog Family through Home\". Social and Cultural Geography. 9 (5): 535–555. doi:10.1080/14649360802217790. 161. ^ a b c Nast, Heidi J. (2006). \"Loving ... Whatever: Alienation, Neoliberalism and Pet-Love in the Twenty-First Century\". ACME: an International E-Journal for Critical Geographies. 5 (2): 300–327. ISSN 1492-9732. 162. ^ \"A Brief History of Dog Training\". Dog Zone. 3 June 2007. Retrieved 19 February 2010. 163. ^ Jackson Schebetta, Lisa (2009). \"Mythologies and Commodifications of Dominion in The Dog Whisperer with Cesar Millan\". Journal for Critical Animal Studies. Institute for Critical Animal Studies. 7 (1): 107–131. ISSN 1948-352X. 164. ^ Bradshaw, John; Blackwell, Emily J.; Casey, Rachel A. (2009). \"Dominance in domestic dogs: useful construct or bad habit?\" (PDF). Journal of Veterinary Behavior. Elsevier. 4 (3): 135–144. doi:10.1016/j.jveb.2008.08.004. Archived from the original (PDF) on 27 August 2010. 165. ^ Tannen, Deborah (2004). \"Talking the Dog: Framing Pets as Interactional Resources in Family Discourse\". Research on Language and Social Interaction. 37 (4): 399–420. doi:10.1207/s15327973rlsi3704_1. ISSN 1532-7973. 166. ^ \"U.S. Pet Ownership Statistics\". Retrieved 24 June 2010. 167. ^ James Edgar (21 February 2014). \"Dogs and humans respond to voices in same way\". The Daily Telegraph. London. 168. ^ \"The Story of Old Drum\". Cedarcroft Farm Bed & Breakfast — Warrensburg, MO. Archived from the original on 10 February 2006. Retrieved 29 November 2006. 169. ^ Williams, Tully (2007). Working Sheep Dogs. Collingwood, Vic.: CSIRO Publishing. ISBN 0-643-09343-5. 170. ^ \"sputnik\". Archived from the original on 5 October 2013. Retrieved 25 September 2013. 171. ^ Solovyov, Dmitry; Pearce, Tim (ed.) (11 April 2008). \"Russia fetes dog Laika, first earthling in space\". Reuters. CS1 maint: Extra text: authors list (link) 172. ^ \"Psychiatric Service Dog Society\". Psychdog.org. 1 October 2005. Archived from the original on 21 December 2010. Retrieved 21 December 2010. 173. ^ \"About Guide Dogs – Assistance Dogs International\". Assistancedogsinternational.org. Archived from the original on 12 December 2010. Retrieved 21 December 2010. 174. ^ Dalziel DJ, Uthman BM, Mcgorray SP, Reep RL (2003). \"Seizure-alert dogs: a review and preliminary study\". Seizure. 12 (2): 115–20. doi:10.1016/S105913110200225X. PMID 12566236. 175. ^ \"A Beginner's Guide to Dog Shows\". American Kennel Club. Retrieved 30 October 2008. 176. ^ Simoons, Frederick J. (1994). Eat not this flesh: food avoidances from prehistory to the present (second ed.). University of Wisconsin Press. pp. 208–212. ISBN 978-0-299-14254-4. 177. ^ \"How many dogs and cats are eaten in Asia?\". Animalpeoplenews.org. Archived from the original on 25 January 2012. Retrieved 19 December 2012. 178. ^ Day, Matthew (7 August 2009). \"Polish couple accused of making dog meat delicacy\". London: Telegraph.co.uk. Retrieved 21 December 2010. 179. ^ Schwabe, Calvin W. (1979). Unmentionable Cuisine. Charlottesville: University Press of Virginia. p. 173. ISBN 0-8139-1162-1. 180. ^ William Saletan (16 January 2002). \"Wok The Dog – What's wrong with eating man's best friend?\". slate.com. Retrieved 23 July 2007. 181. ^ Ahmed Zihni (2004). \"Dog Meat Dilemma\". sunysb.edu. Retrieved 11 May 2008. 182. ^ \"'Do Koreans eat dogs?' and Western hypocrisy\". 183. ^ John Feffer (2 June 2002). \"The Politics of Dog – When globalization and culinary practice clash\". Archived from the original on 27 April 2006. Retrieved 11 May 2007. 184. ^ a b Pettid, Michael J., Korean Cuisine: An Illustrated History, London: Reaktion Books Ltd., 2008, 25. ISBN 1-86189-348-5 185. ^ WHO expert consultation on rabies: First report, WHO Technical Report Series, 931, World Health Organisation, 2005 186. ^ \"Home & Recreational Safety – Dog Bites\". Centers for Disease Control and Prevention. Retrieved 27 January 2015. citing Gilchrist J.; Sacks J.J.; White, D.; Kresnow, M.J. \"Dog Bites: Still a Problem?\". Injury Prevention. 14 (5): 288–301. 187. ^ Jeffrey J Sacks; Marcie-jo Kresnow; Barbara Houston. \"Dog bites: how big a problem?\" (PDF): 53. 188. ^ a b \"Statistics about dog bites in the USA and elsewhere\". Dogbitelaw.com. Retrieved 18 December 2012. 189. ^ Whitcomb, Rachael (1 July 2009). \"Study: Chihuahuas bite vets most; Lhaso Apsos inflict worst injuries\". DVM Newsmagazine. Retrieved 15 February 2013. 190. ^ Weiss, HB; Friedman, DI; Coben, JH (1998). \"Incidence of dog bite injuries treated in emergency departments\". JAMA. 279 (1): 51–3. doi:10.1001/jama.279.1.51. PMID 9424044. 191. ^ Tierney, DM; Strauss, LP; Sanchez, JL (2006). \"Capnocytophaga canimorsus Mycotic Abdominal Aortic Aneurysm: Why the Mailman Is Afraid of Dogs\". Journal of Clinical Microbiology. 44 (2): 649–51. doi:10.1128/JCM.44.2.649-651.2006. PMC 1392675 . PMID 16455937. 192. ^ \"Mail campaign over dog attacks\". BBC News. 11 August 2005. 193. ^ \"Injury Prevention Bulletin\" (PDF). Northwest Territories Health and Social Services. 25 March 2009. Archived from the original (PDF) on 22 March 2011. Retrieved 7 January 2010. 194. ^ Bewley, BR (1985). \"Medical hazards from dogs\". British Medical Journal. 291 (6498): 760–1. doi:10.1136/bmj.291.6498.760. PMC 1417177 . PMID 3929930. 195. ^ Huh, Sun; Lee, Sooung (20 August 2008). \"Toxocariasis\". Medscape.com. Retrieved 15 February 2013. 196. ^ a b \"Toxocariasis\". Kids' Health. The Nemours Foundation. 2010. Retrieved 12 February 2010. 197. ^ Johnson, Kate (May 2002). \"Parasites in pet feces cause puzzling infections\". Pediatric News. Archived from the original on 7 July 2012. Retrieved 11 May 2009. 198. ^ Chiodo, Paula; Basualdo, Juan; Ciarmela, Laura; Pezzani, Betina; Apezteguía, María; Minvielle, Marta (2006). \"Related factors to human toxocariasis in a rural community of Argentina\". Memórias do Instituto Oswaldo Cruz. 101 (4): 397–400. doi:10.1590/S0074-02762006000400009. 199. ^ Talaizadeh, A. H.; Maraghi2, S.; Jelowdar, A.; Peyvasteh, M. (October–December 2007). \"Human toxocariasis: A report of 3 cases\". Pakistan Journal of Medical Sciences Quarterly. 23 (5). Part I. 200. ^ \"Dog fouling\". UK: Woking Borough Council. Retrieved 21 December 2010. 201. ^ a b McNicholas, June; Gilbey, Andrew; Rennie, Ann; Ahmedzai, Sam; Dono, Jo-Ann; Ormerod, Elizabeth (2005). \"Pet ownership and human health: A brief review of evidence and issues\". BMJ. 331 (7527): 1252–4. doi:10.1136/bmj.331.7527.1252. PMC 1289326 . PMID 16308387. 202. ^ Podberscek, A.L. (2006). \"Positive and Negative Aspects of Our Relationship with Companion Animals\". Veterinary Research Communications. 30 (1): 21–27. doi:10.1007/s11259-006-0005-0. 203. ^ Winefield, Helen R.; Black, Anne; Chur-Hansen, Anna (2008). \"Health effects of ownership of and attachment to companion animals in an older population\". International Journal of Behavioral Medicine. 15 (4): 303–10. doi:10.1080/10705500802365532. PMID 19005930. 204. ^ Headey B. (1999). \"Health benefits and health cost savings due to pets: preliminary estimates from an Australian national survey\". Social Indicators Research. 47 (2): 233–243. doi:10.1023/A:1006892908532. 205. ^ a b Serpell J (1991). \"Beneficial effects of pet ownership on some aspects of human health and behaviour\". Journal of the Royal Society of Medicine. 84 (12): 717–20. PMC 1295517 . PMID 1774745. 206. ^ Friedmann E, Thomas SA (1995). \"Pet ownership, social support, and one-year survival after acute myocardial infarction in the Cardiac Arrhythmia Suppression Trial (CAST)\". The American Journal of Cardiology. 76 (17): 1213–7. doi:10.1016/S0002-9149(99)80343-9. PMID 7502998. 207. ^ Wilson CC (1991). \"The pet as an anxiolytic intervention\". The Journal of Nervous and Mental Disease. 179 (8): 482–9. doi:10.1097/00005053-199108000-00006. PMID 1856711. 208. ^ McNicholas, J.; Collis, G. M. (2006). \"Animals as social supports: Insights for understanding animal assisted therapy\". In Fine, Aubrey H. Handbook on animal-assisted therapy: theoretical foundations and guidelines for practice. Amsterdam: Elsevier/Academic Press. pp. 49–71. ISBN 0-12-369484-1. 209. ^ Eddy J, Hart LA, Boltz RP (1988). \"The effects of service dogs on social acknowledgments of people in wheelchairs\". The Journal of Psychology. 122 (1): 39–45. doi:10.1080/00223980.1988.10542941. PMID 2967371. 210. ^ Wood, Lisa; Martin, Karen; Christian, Hayley; Nathan, Andrea; Lauritsen, Claire; Houghton, Steve; Kawachi, Ichiro; McCune, Sandra (2015). \"The Pet Factor – Companion Animals as a Conduit for Getting to Know People, Friendship Formation and Social Support\". PLoS ONE. 10 (4): e0122085. doi:10.1371/journal.pone.0122085. PMC 4414420 . PMID 25924013. 211. ^ Kruger, K.A. & Serpell, J.A. (2006). Animal-assisted interventions in mental health: Definitions and theoretical foundations, In Fine, A.H. (Ed.), Handbook on animal-assisted therapy: Theoretical foundations and guidelines for practice. San Diego, CA, Academic Press: 21–38. ISBN 0-12-369484-1 212. ^ Batson, K.; McCabe, B.; Baun, M.M.; Wilson, C. (1998). \"The effect of a therapy dog on socialization and psychological indicators of stress in persons diagnosed with Alzheimer's disease\". In Turner, Dennis C.; Wilson, Cindy C. Companion animals in human health. Thousand Oaks: Sage Publications. pp. 203–15. ISBN 978-0-7619-1061-9. 213. ^ Katcher, A.H.; Wilkins, G.G. (2006). \"The Centaur's Lessons: Therapeutic education through care of animals and nature study\". In Fine, Aubrey H. Handbook on animal-assisted therapy: theoretical foundations and guidelines for practice. Amsterdam: Elsevier/Academic Press. pp. 153–77. ISBN 0-12-369484-1. 214. ^ Terry Gasking. \"How my dog sniffed out breast cancer and saved my lifeYYY\". Retrieved 22 November 2014. 215. ^ Animals abandoned as recession hits home Archived 7 June 2011 at the Wayback Machine.. TheStar.com. 22 December 2008. 216. ^ HSUS Pet Overpopulation Estimates Archived 25 April 2013 at the Wayback Machine. The Humane Society of the United States 217. ^ \"ASPCA Pet Statistics\". Retrieved 8 August 2012. 218. ^ Palika, Liz (4 February 2004). Purebred Rescue Dog Adoption: Rewards and Realities. Howell Book House. ISBN 978-0-7645-4971-7. Retrieved 24 February 2010. 219. ^ a b c d e f g h Sherman, Josepha (August 2008). Storytelling: An Encyclopedia of Mythology and Folklore. Sharpe Reference. pp. 118–121. ISBN 978-0-7656-8047-1. 220. ^ \"Indian Myth and Legend: Chapter III. Yama, the First Man, and King of the Dead\". Sacred-texts.com. Retrieved 4 July 2013. 221. ^ Fodor's Essential India: with Delhi, Rajasthan, Mumbai, and Kerala. Random House LLC. 7 May 2013. ISBN 9780891419440. Retrieved 13 May 2014. 222. ^ a b \"Judaism & The Treatment of Animals\". Jewish Virtual Library. 223. ^ \"Animal Symbolism in Many Cultures\". Bibliography - Miklósi, Adám (2007). Dog Behaviour, Evolution, and Cognition. Oxford University Press. doi:10.1093/acprof:oso/9780199295852.001.0001. ISBN 978-0-19-929585-2. Further reading - De Vito, Dominique (March 1995). World Atlas of Dog Breeds (Hardcover) (6th ed.). Neptune City, NJ Lanham, MD: TFH Publications, Inc. pp. 960 pages. ISBN 0793806569. - Wilcox, Bonnie; Walkowicz, Chris (March 1995). Atlas of Dog Breeds of the World (Print) (5th ed.). Neptune City, NJ Lanham, MD: TFH Publications, Inc. Distributed in the U.S. to the Bookstore and library trade by National Book Network. p. 912. ISBN 0793812844. External links Find more aboutDogat Wikipedia's sister projects - Definitions from Wiktionary - Media from Commons - News from Wikinews - Quotations from Wikiquote - Texts from Wikisource - Textbooks from Wikibooks - Taxonomy from Wikispecies - Biodiversity Heritage Library bibliography for Canis lupus familiaris - Fédération Cynologique Internationale (FCI) – World Canine Organisation - Dogs in the Ancient World, an article on the history of dogs - View the dog genome on Ensembl - v - t - e Extant Carnivora species - Kingdom: Animalia - Phylum: Chordata - Class: Mammalia - Infraclass: Eutheria - Superorder: Laurasiatheria Suborder Feliformia Nandiniidae Nandinia - African palm civet (N. binotata) Herpestidae (Mongooses) Atilax - Marsh mongoose (A. paludinosus) Bdeogale - Bushy-tailed mongoose (B. crassicauda) - Jackson's mongoose (B. jacksoni) - Black-footed mongoose (B. nigripes) Crossarchus - Alexander's kusimanse (C. alexandri) - Angolan kusimanse (C. ansorgei) - Common kusimanse (C. obscurus) - Flat-headed kusimanse (C. platycephalus) Cynictis - Yellow mongoose (C. penicillata) Dologale - Pousargues's mongoose (D. dybowskii) Galerella - Angolan slender mongoose (G. flavescens) - Black mongoose (G. nigrata) - Somalian slender mongoose (G. ochracea) - Cape gray mongoose (G. pulverulenta) - Slender mongoose (G. sanguinea) Helogale - Ethiopian dwarf mongoose (H. hirtula) - Common dwarf mongoose (H. parvula) Herpestes - Short-tailed mongoose (H. brachyurus) - Indian gray mongoose (H. edwardsii) - Indian brown mongoose (H. fuscus) - Egyptian mongoose (H. ichneumon) - Small Asian mongoose (H. javanicus) - Long-nosed mongoose (H. naso) - Collared mongoose (H. semitorquatus) - Ruddy mongoose (H. smithii) - Crab-eating mongoose (H. urva) - Stripe-necked mongoose (H. vitticollis) Ichneumia - White-tailed mongoose (I. albicauda) Liberiictus - Liberian mongoose (L. kuhni) Mungos - Gambian mongoose (M. gambianus) - Banded mongoose (M. mungo) Paracynictis - Selous' mongoose (P. selousi) Rhynchogale - Meller's mongoose (R. melleri) Suricata - Meerkat (S. suricatta) Hyaenidae (Hyenas) Crocuta - Spotted hyena (C. crocuta) Hyaena - Brown hyena (H. brunnea) - Striped hyena (H. hyaena) Proteles - Aardwolf (P. cristatus) Felidae Large family listed below Viverridae Large family listed below Eupleridae Small family listed below Family Felidae Felinae Acinonyx - Cheetah (A. jubatus) Caracal - Caracal (C. caracal) - African golden cat (C. aurata) Catopuma - Bay cat (C. badia) - Asian golden cat (C. temminckii) Felis - Wildcat (F. silvestris) - Jungle cat (F. chaus) - Black-footed cat (F. nigripes) - Sand cat (F. margarita) - Chinese mountain cat (F. bieti) - Domestic cat (F. catus) Leopardus - Pantanal cat (L. braccatus) - Colocolo (L. colocolo) - Geoffroy's cat (L. geoffroyi) - Kodkod (L. guigna) - Southern tigrina (L. guttulus) - Andean mountain cat (L. jacobita) - Pampas cat (L. pajeros) - Ocelot (L. pardalis) - Oncilla (L. tigrinus) - Margay (L. wiedii) Leptailurus - Serval (L. serval) Lynx - Canadian lynx (L. canadensis) - Eurasian lynx (L. lynx) - Iberian lynx (L. pardinus) - Bobcat (L. rufus) Otocolobus - Pallas's cat (O. manul) Pardofelis - Marbled cat (P. marmorata) Prionailurus - Fishing cat (P. viverrinus) - Leopard cat (P. bengalensis) - Sundaland leopard cat (P. javanensis) - Flat-headed cat (P. planiceps) - Rusty-spotted cat (P. rubiginosus) Puma - Cougar (P. concolor) - Jaguarundi (P. yagouaroundi) Pantherinae Panthera - Lion (P. leo) - Jaguar (P. onca) - Leopard (P. pardus) - Tiger (P. tigris) - Snow leopard (P. uncia) Neofelis - Clouded leopard (N. nebulosa) - Sunda clouded leopard (N. diardi) Family Viverridae (includes Civets) Paradoxurinae Arctictis - Binturong (A. binturong) Arctogalidia - Small-toothed palm civet (A. trivirgata) Macrogalidia - Sulawesi palm civet (M. musschenbroekii) Paguma - Masked palm civet (P. larvata) Paradoxurus - Golden wet-zone palm civet (P. aureus) - Asian palm civet (P. hermaphroditus) - Jerdon's palm civet (P. jerdoni) - Golden palm civet (P. zeylonensis) Hemigalinae Chrotogale - Owston's palm civet (C. owstoni) Cynogale - Otter civet (C. bennettii) Diplogale - Hose's palm civet (D. hosei) Hemigalus - Banded palm civet (H. derbyanus) Prionodontinae (Asiatic linsangs) Prionodon - Banded linsang (P. linsang) - Spotted linsang (P. pardicolor) Viverrinae Civettictis - African civet (C. civetta) Genetta (Genets) - Abyssinian genet (G. abyssinica) - Angolan genet (G. angolensis) - Bourlon's genet (G. bourloni) - Crested servaline genet (G. cristata) - Common genet (G. genetta) - Johnston's genet (G. johnstoni) - Rusty-spotted genet (G. maculata) - Pardine genet (G. pardina) - Aquatic genet (G. piscivora) - King genet (G. poensis) - Servaline genet (G. servalina) - Haussa genet (G. thierryi) - Cape genet (G. tigrina) - Giant forest genet (G. victoriae) Poiana - African linsang (P. richardsonii) - Leighton's linsang (P. leightoni) Viverra - Malabar large-spotted civet (V. civettina) - Large-spotted civet (V. megaspila) - Malayan civet (V. tangalunga) - Large Indian civet (V. zibetha) Viverricula - Small Indian civet (V. indica) Family Eupleridae Euplerinae Cryptoprocta - Fossa (C. ferox) Eupleres - Eastern falanouc (E. goudotii) - Western falanouc (E. major) Fossa - Malagasy civet (F. fossana) Galidiinae Galidia - Ring-tailed mongoose (G. elegans) Galidictis - Broad-striped Malagasy mongoose (G. fasciata) - Grandidier's mongoose (G. grandidieri) Mungotictis - Narrow-striped mongoose (M. decemlineata) Salanoia - Brown-tailed mongoose (S. concolor) - Durrell's vontsira (S. durrelli) Suborder Caniformia (cont. below) Ursidae (Bears) Ailuropoda - Giant panda (A. melanoleuca) Helarctos - Sun bear (H. malayanus) Melursus - Sloth bear (M. ursinus) Tremarctos - Spectacled bear (T. ornatus) Ursus - American black bear (U. americanus) - Brown bear (U. arctos) - Polar bear (U. maritimus) - Asian black bear (U. thibetanus) Mephitidae Conepatus (Hog-nosed skunks) - Molina's hog-nosed skunk (C. chinga) - Humboldt's hog-nosed skunk (C. humboldtii) - American hog-nosed skunk (C. leuconotus) - Striped hog-nosed skunk (C. semistriatus) Mephitis - Hooded skunk (M. macroura) - Striped skunk (M. mephitis) Mydaus - Sunda stink badger (M. javanensis) - Palawan stink badger (M. marchei) Spilogale (Spotted skunks) - Southern spotted skunk (S. angustifrons) - Western spotted skunk (S. gracilis) - Eastern spotted skunk (S. putorius) - Pygmy spotted skunk (S. pygmaea) Procyonidae Bassaricyon (Olingos) - Eastern lowland olingo (B. alleni) - Northern olingo (B. gabbii) - Western lowland olingo (B. medius) - Olinguito (B. neblina) Bassariscus - Ring-tailed cat (B. astutus) - Cacomistle (B. sumichrasti) Nasua (Coatis inclusive) - White-nosed coati (N. narica) - South American coati (N. nasua) Nasuella (Coatis inclusive) - Western mountain coati (N. olivacea) - Eastern mountain coati (N. meridensis) Potos - Kinkajou (P. flavus) Procyon - Crab-eating raccoon (P. cancrivorus) - Raccoon (P. lotor) - Cozumel raccoon (P. pygmaeus) Ailuridae Ailurus - Red panda (A. fulgens) Suborder Caniformia (cont. above) Otariidae (Eared seals) (includes fur seals and sea lions) (Pinniped inclusive) Arctocephalus - South American fur seal (A. australis) - Australasian fur seal (A. forsteri) - Galápagos fur seal (A. galapagoensis) - Antarctic fur seal (A. gazella) - Juan Fernández fur seal (A. philippii) - Brown fur seal (A. pusillus) - Guadalupe fur seal (A. townsendi) - Subantarctic fur seal (A. tropicalis) Callorhinus - Northern fur seal (C. ursinus) Eumetopias - Steller sea lion (E. jubatus) Neophoca - Australian sea lion (N. cinerea) Otaria - South American sea lion (O. flavescens) Phocarctos - New Zealand sea lion (P. hookeri) Zalophus - California sea lion (Z. californianus) - Galápagos sea lion (Z. wollebaeki) Odobenidae (Pinniped inclusive) Odobenus - Walrus (O. rosmarus) Phocidae (Earless seals) (Pinniped inclusive) Cystophora - Hooded seal (C. cristata) Erignathus - Bearded seal (E. barbatus) Halichoerus - Gray seal (H. grypus) Histriophoca - Ribbon seal (H. fasciata) Hydrurga - Leopard seal (H. leptonyx) Leptonychotes - Weddell seal (L. weddellii) Lobodon - Crabeater seal (L. carcinophagus) Mirounga (Elephant seals) - Northern elephant seal (M. angustirostris) - Southern elephant seal (M. leonina) Monachus - Mediterranean monk seal (M. monachus) - Hawaiian monk seal (M. schauinslandi) Ommatophoca - Ross seal (O. rossi) Pagophilus - Harp seal (P. groenlandicus) Phoca - Spotted seal (P. largha) - Harbor seal (P. vitulina) Pusa - Caspian seal (P. caspica) - Ringed seal (P. hispida) - Baikal seal (P. sibirica) Canidae Large family listed below Mustelidae Large family listed below Family Canidae (includes dogs) Atelocynus - Short-eared dog (A. microtis) Canis - Side-striped jackal (C. adustus) - African golden wolf (C. anthus) - Golden jackal (C. aureus) - Coyote (C. latrans) - Gray wolf (C. lupus) - Black-backed jackal (C. mesomelas) - Red wolf (C. rufus) - Ethiopian wolf (C. simensis) Cerdocyon - Crab-eating fox (C. thous) Chrysocyon - Maned wolf (C. brachyurus) Cuon - Dhole (C. alpinus) Lycalopex - Culpeo (L. culpaeus) - Darwin's fox (L. fulvipes) - South American gray fox (L. griseus) - Pampas fox (L. gymnocercus) - Sechuran fox (L. sechurae) - Hoary fox (L. vetulus) Lycaon - African wild dog (L. pictus) Nyctereutes - Raccoon dog (N. procyonoides) Otocyon - Bat-eared fox (O. megalotis) Speothos - Bush dog (S. venaticus) Urocyon - Gray fox (U. cinereoargenteus) - Island fox (U. littoralis) Vulpes (Foxes) - Bengal fox (V. bengalensis) - Blanford's fox (V. cana) - Cape fox (V. chama) - Corsac fox (V. corsac) - Tibetan sand fox (V. ferrilata) - Arctic fox (V. lagopus) - Kit fox (V. macrotis) - Pale fox (V. pallida) - Rüppell's fox (V. rueppelli) - Swift fox (V. velox) - Red fox (V. vulpes) - Fennec fox (V. zerda) Family Mustelidae Lutrinae (Otters) Aonyx - African clawless otter (A. capensis) - Oriental small-clawed otter (A. cinerea) Enhydra - Sea otter (E. lutris) Hydrictis - Spotted-necked otter (H. maculicollis) Lontra - North American river otter (L. canadensis) - Marine otter (L. felina) - Neotropical otter (L. longicaudis) - Southern river otter (L. provocax) Lutra - Eurasian otter (L. lutra) - Hairy-nosed otter (L. sumatrana) Lutrogale - Smooth-coated otter (L. perspicillata) Pteronura - Giant otter (P. brasiliensis) Mustelinae (including badgers) Arctonyx - Hog badger (A. collaris) Eira - Tayra (E. barbara) Galictis - Lesser grison (G. cuja) - Greater grison (G. vittata) Gulo - Wolverine (G. gulo) Ictonyx - Saharan striped polecat (I. libyca) - Striped polecat (I. striatus) Lyncodon - Patagonian weasel (L. patagonicus) Martes (Martens) - American marten (M. americana) - Yellow-throated marten (M. flavigula) - Beech marten (M. foina) - Nilgiri marten (M. gwatkinsii) - European pine marten (M. martes) - Japanese marten (M. melampus) - Fisher (M. pennanti) - Sable (M. zibellina) Meles - Japanese badger (M. anakuma) - Asian badger (M. leucurus) - European badger (M. meles) Mellivora - Honey badger (M. capensis) Melogale (Ferret-badgers) - Bornean ferret-badger (M. everetti) - Chinese ferret-badger (M. moschata) - Javan ferret-badger (M. orientalis) - Burmese ferret-badger (M. personata) Mustela (Weasels and Ferrets) - Amazon weasel (M. africana) - Mountain weasel (M. altaica) - Stoat (M. erminea) - Steppe polecat (M. eversmannii) - Colombian weasel (M. felipei) - Long-tailed weasel (M. frenata) - Japanese weasel (M. itatsi) - Yellow-bellied weasel (M. kathiah) - European mink (M. lutreola) - Indonesian mountain weasel (M. lutreolina) - Black-footed ferret (M. nigripes) - Least weasel (M. nivalis) - Malayan weasel (M. nudipes) - European polecat (M. putorius) - Siberian weasel (M. sibirica) - Back-striped weasel (M. strigidorsa) - Egyptian weasel (M. subpalmata) Neovison (Minks) - American mink (N. vison) Poecilogale - African striped weasel (P. albinucha) Taxidea - American badger (T. taxus) Vormela - Marbled polecat (V. peregusna) - v - t - e Dogs Mind - Barking - Behavior - Communication - Emotions - Human-canine bond - Intelligence Health - Aging - Anatomy - Coat - Diseases - Heartworm - Odor - Rabies - Reproduction - Skin disorders - Vaccination Training - Clicker - Crate training - Collar Harness - Harness - Training - Housebreaking - Obedience - Puppy - Rescue - Socialization Types - Bandogs - Bay dogs - Bird dogs - Catch dogs - Companion dogs - Crossbred dogs - Curs - Eskimo dogs - Feral dogs - Fighting dogs - Guard dogs - Gun dogs - Herding dogs - Hounds - Hunting dogs - Lap dogs - Livestock guardian dogs - Mongrels - Mountain dogs - Molossers - Meat dogs - Pointers - Purebred dogs - Retrievers - Setters - Scenthounds - Sighthounds - Sled dogs - Spaniels - Spitz - Street dogs - Terriers - Turnspit Dogs - Village dogs - Water dogs - Wild dogs Breeds - List of breeds - List of crossbreeds - Breed Groups - Breeding - Conformation - Crossbreeds - Extinct breeds - Most popular - Purebred - Rare breeds Work - Assistance dog - Attack dog - Detection dog - Guard dog - Guide dog - Hearing dog - Herding dog - Hunting dog - Livestock guardian dog - Pet dog - Police dog - Search and rescue dog - Service dog - Sled dog - Therapy dog - War dog - Working Group (dogs) Human–dog interaction - Animal testing - Baiting - Breed-specific legislation - Dog attack - Dog park - Human-canine bond - Dog sports - Dog walking - Dog daycare - Dog grooming - Famous dogs - Therapy - Fear of dogs - Dog license - Dog meat - Dog food - Dogs in religion - Origin - Book - Category - Portal - v - t - e Pastoral dogs Herding and droving dogs - Australian Cattle Dog - Australian Kelpie - Australian Shepherd - Australian Stumpy Tail Cattle Dog - Basque Shepherd Dog - Bearded Collie - Beauceron - Belgian Shepherd Dog (Groenendael) - Belgian Shepherd Dog (Laekenois) - Belgian Shepherd Dog (Malinois) - Belgian Shepherd Dog (Tervuren) - Bergamasco - Berger Picard - Black Mouth Cur - Blue Lacy - Bohemian Shepherd - Border Collie - Bouvier des Flandres - Briard - Can de Chira - Cão da Serra de Aires - Carea Castellano Manchego - Carea Leonés - Catahoula Bulldog - Catahoula Leopard Dog - Catalan Sheepdog - Collie - Collie (Smooth) - Croatian Sheepdog - Cumberland Sheepdog - Dutch Shepherd Dog - English Shepherd - Farm Collie - Finnish Lapphund - Galician Palleiro - Garafian Shepherd - German Shepherd - Huntaway - Icelandic Sheepdog - King Shepherd - Koolie - Lancashire Heeler - Lapponian Herder - Magellan sheep dog - McNab - Miniature American Shepherd - Miniature Australian Shepherd - Mucuchies - Mudi - New Zealand Heading Dog - Norwegian Buhund - Old English Sheepdog - Old German Herding Dogs (Altdeutsche) - Polish Lowland Sheepdog - Puli - Pumi - Pyrenean Shepherd - Reindeer Herder - Rough Collie - Samoyed - Sardinian Sheperd Dog - Schapendoes - Schipperke - Scotch Collie - Shetland Sheepdog - Smithfield - Spanish Water Dog - Swedish Lapphund - Swedish Vallhund - Tibetan Terrier - Welsh Corgi (Cardigan) - Welsh Corgi (Pembroke) - Welsh Sheepdog - White Shepherd Livestock guardian dogs - Aidi or Atlas Mountain Dog - Akbash Dog or Turkish Akbash Dog - Anatolian Shepherd - Armenian mountain dog a/k/a Armenian wolfhound - Bucovina Shepherd Dog - Bernese Mountain Dog - Cão de Castro Laboreiro - Cão de Gado Transmontano - Cão Fila de São Miguel - Carpathian Shepherd Dog - Caucasian Shepherd Dog - Central Asian Shepherd Dog - Estrela Mountain Dog - Gaddi Kutta - Georgian Shepherd - Great Pyrenees - Greater Swiss Mountain Dog - Greek Shepherd - Himalayan Sheepdog - Hovawart - Kuchi (dog) - Kumaon Mastiff or Indian Sindh Mastiff - Kangal Dog - Karakachan - Karst Shepherd - Komondor - Kuvasz - Landseer - Leonberger - Majorca Shepherd Dog - Maremma Sheepdog or Italian Abruzzese Sheepdog - Mioritic - Perro Majorero - Polish Tatra Sheepdog - Puli - Pyrenean Mastiff - Rafeiro do Alentejo - Šarplaninac - Slovak Cuvac - South Russian Ovcharka - Spanish Mastiff - Tibetan Mastiff - Tornjak Taxon identifiers - Wd: Q26972265 - ADW: Canis_lupus_familiaris - EoL: 1228387 - GBIF: 6164210 - ITIS: 726821 - MSW: 14000752 - NCBI: 9615 Authority control - GND: 4026181-5 - HDS: 13865 - NDL: 00564180 Retrieved from \"https://en.wikipedia.org/w/index.php?title=Dog&oldid=810855143\" Categories: - Domesticated animals - Dogs - Cosmopolitan vertebrates - Scavengers - Vertebrate animal models - Extant Late Pleistocene first appearances - Mammals described in 1758Hidden categories: - CS1 Latin-language sources (la) - Webarchive template wayback links - CS1 maint: Multiple names: authors list - Wikipedia articles needing page number citations from September 2010 - CS1 German-language sources (de) - CS1 maint: Extra text: authors list - Wikipedia indefinitely semi-protected pages - Wikipedia indefinitely move-protected pages - Articles with 'species' microformats - Articles containing Old English-language text - All articles with unsourced statements - Articles with unsourced statements from October 2017 - All articles lacking reliable references - Articles lacking reliable references from July 2017 - All Wikipedia articles needing clarification - Wikipedia articles needing clarification from November 2016 - Articles with unsourced statements from November 2016 - All articles with failed verification - Articles with failed verification from April 2016 - Commons category with local link different than on Wikidata - Use dmy dates from July 2017 - Wikipedia articles with GND identifiers Navigation menu Personal tools - Not logged in - Talk - Contributions - Create account - Log in Namespaces - Article - Talk Variants Views - Read - View source - View history More Search Navigation - Main page - Contents - Featured content - Current events - Random article - Donate to Wikipedia - Wikipedia store Interaction - Help - About Wikipedia - Community portal - Recent changes - Contact page Tools - What links here - Related changes - Upload file - Special pages - Permanent link - Page information - Wikidata item - Cite this page Print/export - Create a book - Download as PDF - Printable version In other projects - Wikimedia Commons - Wikiquote Languages - Acèh - Адыгабзэ - Afrikaans - Alemannisch - አማርኛ - Аҧсшәа - العربية - Aragonés - ܐܪܡܝܐ - Armãneashti - Arpetan - অসমীয়া - Asturianu - Atikamekw - Avañe'ẽ - Авар - Aymar aru - Azərbaycanca - تۆرکجه - Bamanankan - বাংলা - Bahasa Banjar - Bân-lâm-gú - Башҡортса - Беларуская - Беларуская (тарашкевіца)‎ - Bikol Central - Bislama - Български - Boarisch - བོད་ཡིག - Bosanski - Brezhoneg - Буряад - Català - Чӑвашла - Čeština - ChiShona - ChiTumbuka - Corsu - Cymraeg - Dansk - Deitsch - Deutsch - Diné bizaad - Dolnoserbski - Eesti - Ελληνικά - Emiliàn e rumagnòl - Эрзянь - Español - Esperanto - Estremeñu - Euskara - Eʋegbe - فارسی - Fiji Hindi - Føroyskt - Français - Frysk - Furlan - Gaeilge - Gaelg - Gàidhlig - Galego - 贛語 - گیلکی - 𐌲𐌿𐍄𐌹𐍃𐌺 - 客家語/Hak-kâ-ngî - Хальмг - 한국어 - Hausa - Հայերեն - हिन्दी - Hornjoserbsce - Hrvatski - Ido - Ilokano - Bahasa Indonesia - ᐃᓄᒃᑎᑐᑦ/inuktitut - Iñupiak - IsiXhosa - IsiZulu - Íslenska - Italiano - עברית - Basa Jawa - ಕನ್ನಡ - Kapampangan - ქართული - कॉशुर / کٲشُر - Kaszëbsczi - Қазақша - Kinyarwanda - Kiswahili - Коми - Kreyòl ayisyen - Kurdî - Кыргызча - Кырык мары - Ladino - Лакку - Лезги - ລາວ - Latina - Latviešu - Lëtzebuergesch - Lietuvių - Ligure - Limburgs - Lingála - Livvinkarjala - La .lojban. - Luganda - Lumbaart - Magyar - मैथिली - Македонски - Malagasy - മലയാളം - Malti - मराठी - მარგალური - مصرى - مازِرونی - Bahasa Melayu - Baso Minangkabau - Mìng-dĕ̤ng-ngṳ̄ - Mirandés - Мокшень - Монгол - မြန်မာဘာသာ - Nāhuatl - Dorerin Naoero - Na Vosa Vakaviti - Nederlands - Nedersaksies - Nēhiyawēwin / ᓀᐦᐃᔭᐍᐏᐣ - नेपाली - नेपाल भाषा - 日本語 - Napulitano - Nordfriisk - Norsk - Norsk nynorsk - Nouormand - Occitan - Олык марий - ଓଡ଼ିଆ - Oʻzbekcha/ўзбекча - ਪੰਜਾਬੀ - پنجابی - Papiamentu - پښتو - Patois - Перем Коми - ភាសាខ្មែរ - Picard - Piemontèis - Plattdüütsch - Polski - Português - Română - Runa Simi - Русиньскый - Русский - Саха тыла - Gagana Samoa - संस्कृतम् - Sardu - Scots - Seeltersk - Sesotho sa Leboa - Shqip - Sicilianu - සිංහල - Simple English - سنڌي - Slovenčina - Slovenščina - Словѣньскъ / ⰔⰎⰑⰂⰡⰐⰠⰔⰍⰟ - Ślůnski - Soomaaliga - کوردی - Sranantongo - Српски / srpski - Srpskohrvatski / српскохрватски - Basa Sunda - Suomi - Svenska - Tagalog - தமிழ் - Татарча/tatarça - తెలుగు - ไทย - Тоҷикӣ - ᏣᎳᎩ - Tsetsêhestâhese - ತುಳು - Türkçe - Тыва дыл - Удмурт - Українська - اردو - ئۇيغۇرچە / Uyghurche - Vahcuengh - Vèneto - Vepsän kel’ - Tiếng Việt - Võro - Walon - 文言 - West-Vlams - Winaray - Wolof - 吴语 - ייִדיש - Yorùbá - 粵語 - Zazaki - Žemaitėška - 中文 - Kabɩyɛ Edit links - This page was last edited on 17 November 2017, at 21:50. - Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. - Privacy policy - About Wikipedia - Disclaimers - Contact Wikipedia - Developers - Cookie statement - Mobile view - - (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"3.120\",\"walltime\":\"3.434\",\"ppvisitednodes\":{\"value\":34892,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":0,\"limit\":1500000},\"postexpandincludesize\":{\"value\":1023644,\"limit\":2097152},\"templateargumentsize\":{\"value\":86755,\"limit\":2097152},\"expansiondepth\":{\"value\":27,\"limit\":40},\"expensivefunctioncount\":{\"value\":17,\"limit\":500},\"entityaccesscount\":{\"value\":8,\"limit\":400},\"timingprofile\":[\"100.00% 2970.041 1 -total\",\" 51.51% 1529.766 2 Template:Reflist\",\" 19.08% 566.682 1 Template:Subspeciesbox\",\" 18.90% 561.454 1 Template:Taxobox/core\",\" 16.98% 504.277 84 Template:Cite_journal\",\" 9.05% 268.795 49 Template:Cite_book\",\" 8.21% 243.869 51 Template:Cite_web\",\" 6.85% 203.391 1 Template:Taxobox/taxonomy\",\" 5.68% 168.712 1 Template:Geological_range\",\" 5.03% 149.318 30 Template:Navbox\"]},\"scribunto\":{\"limitreport-timeusage\":{\"value\":\"1.783\",\"limit\":\"10.000\"},\"limitreport-memusage\":{\"value\":26653878,\"limit\":52428800}},\"cachereport\":{\"origin\":\"mw1232\",\"timestamp\":\"20171117215022\",\"ttl\":1900800,\"transientcontent\":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgBackendResponseTime\":111,\"wgHostname\":\"mw1212\"});});"},{"url":"https://en.wikipedia.org/wiki/Carnivore","text":"Carnivore - Wikipedia document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" ); (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Carnivore\",\"wgTitle\":\"Carnivore\",\"wgCurRevisionId\":811071462,\"wgRevisionId\":811071462,\"wgArticleId\":6543,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"CS1 maint: Multiple names: authors list\",\"Biological interactions\",\"Carnivory\",\"Animals by eating behaviors\",\"Ethology\",\"Meat\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Carnivore\",\"wgRelevantArticleId\":6543,\"wgRequestId\":\"WhFc2ApAICoAACtuqbgAAAAM\",\"wgIsProbablyEditable\":true,\"wgRelevantPageIsProbablyEditable\":true,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgFlaggedRevsParams\":{\"tags\":{}},\"wgStableRevisionId\":null,\"wgWikiEditorEnabledModules\":{\"toolbar\":true,\"preview\":false,\"publish\":false},\"wgBetaFeaturesFeatures\":[],\"wgMediaViewerOnClick\":true,\"wgMediaViewerEnabledByDefault\":true,\"wgPopupsShouldSendModuleToUser\":true,\"wgPopupsConflictsWithNavPopupGadget\":false,\"wgVisualEditor\":{\"pageLanguageCode\":\"en\",\"pageLanguageDir\":\"ltr\",\"pageVariantFallbacks\":\"en\",\"usePageImages\":true,\"usePageDescriptions\":true},\"wgPreferredVariant\":\"en\",\"wgMFExpandAllSectionsUserOption\":false,\"wgMFDisplayWikibaseDescriptions\":{\"search\":true,\"nearby\":true,\"watchlist\":true,\"tagline\":false},\"wgRelatedArticles\":null,\"wgRelatedArticlesUseCirrusSearch\":true,\"wgRelatedArticlesOnlyUseCirrusSearch\":false,\"wgULSCurrentAutonym\":\"English\",\"wgNoticeProject\":\"wikipedia\",\"wgCentralNoticeCookiesToDelete\":[],\"wgCentralNoticeCategoriesUsingLegacy\":[\"Fundraising\",\"fundraising\"],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\",\"wgWikibaseItemId\":\"Q81875\",\"wgCentralAuthMobileDomain\":false,\"wgCodeMirrorEnabled\":false,\"wgVisualEditorToolbarScrollOffset\":0,\"wgVisualEditorUnsupportedEditParams\":[\"undo\",\"undoafter\",\"veswitched\"],\"wgEditSubmitButtonLabelPublish\":false});mw.loader.state({\"ext.gadget.charinsert-styles\":\"ready\",\"ext.globalCssJs.user.styles\":\"ready\",\"ext.globalCssJs.site.styles\":\"ready\",\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"ext.cite.styles\":\"ready\",\"wikibase.client.init\":\"ready\",\"ext.visualEditor.desktopArticleTarget.noscript\":\"ready\",\"ext.uls.interlanguage\":\"ready\",\"ext.wikimediaBadges\":\"ready\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.sectionAnchor\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"ext.globalCssJs.site\":\"ready\"});mw.loader.implement(\"user.tokens@1dqfd7l\",function ( $, jQuery, require, module ) { mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});/*@nomin*/ });mw.loader.load([\"ext.cite.a11y\",\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.watchlist-notice\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.extra-toolbar-buttons\",\"ext.gadget.switcher\",\"ext.centralauth.centralautologin\",\"mmv.head\",\"mmv.bootstrap.autostart\",\"ext.popups\",\"ext.visualEditor.desktopArticleTarget.init\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents\",\"ext.navigationTiming\",\"ext.uls.eventlogger\",\"ext.uls.init\",\"ext.uls.interface\",\"ext.centralNotice.geoIP\",\"ext.centralNotice.startUp\",\"skins.vector.js\"]);}); Carnivore From Wikipedia, the free encyclopedia Jump to: navigation, search This article is about the general concept of a meat-eating animal. For the mammal order, see Carnivora. For other uses, see Carnivore (disambiguation). Lion eating corpse of dead animal A carnivore /ˈkɑːrnɪvɔːr/, meaning \"meat eater\" (Latin, carne meaning \"meat\" or \"flesh\" and vorare meaning \"to devour\"), is an organism that derives its energy and nutrient requirements from a diet consisting mainly or exclusively of animal tissue, whether through predation or scavenging.[1][2] Animals that depend solely on animal flesh for their nutrient requirements are called obligate carnivores while those that also consume non-animal food are called facultative carnivores.[2] Omnivores also consume both animal and non-animal food, and, apart from the more general definition, there is no clearly defined ratio of plant to animal material that would distinguish a facultative carnivore from an omnivore.[3] A carnivore that sits at the top of the food chain is termed an apex predator. The word \"carnivore\" sometimes refers to the mammalian order Carnivora, but this is somewhat misleading. While many Carnivora meet the definition of being meat eaters, not all do, and even fewer are true obligate carnivores (see below). For example, most species of bears are actually omnivorous, except for the giant panda, which is almost exclusively herbivorous, and the exclusively meat-eating polar bear, which lives in the Arctic, where few plants grow. In addition, there are plenty of carnivorous species that are not members of Carnivora. Outside the animal kingdom, there are several genera containing carnivorous plants and several phyla containing carnivorous fungi. The former are predominantly insectivores, while the latter prey mostly on microscopic invertebrates, such as nematodes, amoebae and springtails. The Venus flytrap, a well known carnivorous plant Carnivores are sometimes characterized by the type of prey that they consume. For example, animals that eat insects and similar invertebrates primarily or exclusively are called insectivores, while those that eat fish primarily or exclusively are called piscivores. The first tetrapods, or land-dwelling vertebrates, were piscivorous amphibians known as labyrinthodonts. They gave rise to insectivorous vertebrates and, later, to predators of other tetrapods.[4] Carnivores may alternatively be classified according to the percentage of meat in their diet. The diet of a hypercarnivore consists of more than 70% meat, that of a mesocarnivore 50–70%, and that of a hypocarnivore less than 30%, with the balance consisting of non-animal foods such as fruits, other plant material, or fungi. Contents - 1 Obligate carnivores - 2 Characteristics of carnivores - 3 Prehistoric carnivores - 4 See also - 5 References - 6 Further reading Obligate carnivores[edit] This Bengal tiger's sharp teeth and strong jaws are the classical physical traits expected from carnivorous mammalian predators. Obligate carnivores, or \"true\" carnivores, are those carnivores whose survival depends on nutrients which are found only in animal flesh. While obligate carnivores might be able to ingest small amounts of plant material, because of their evolution they lack the necessary physiology required to digest that plant matter. In fact, some obligate carnivorous mammals will only ever ingest vegetation for its specific use as an emetic to self-induce vomiting to rid itself of food that has upset its stomach. For instance, felids including the domestic cat are obligate carnivores requiring a diet of primarily animal flesh and organs.[5] Specifically, cats have high protein requirements and their metabolisms appear unable to synthesize certain essential nutrients (including retinol, arginine, taurine, and arachidonic acid), and thus, in nature, they can rely only on animal flesh as their diet to supply these nutrients.[6][7] Characteristics of carnivores[edit] Characteristics commonly associated with carnivores include organs for capturing and disarticulating prey (teeth and claws serve these functions in many vertebrates) and status as a predator. In truth, these assumptions may be misleading, as some carnivores do not hunt and are scavengers (though most hunting carnivores will scavenge when the opportunity exists). Thus they do not have the characteristics associated with hunting carnivores. Carnivores have comparatively short digestive systems, as they are not required to break down tough cellulose found in plants. Many animals that hunt other animals have evolved eyes that face forward, thus making depth perception possible. This is almost universal among mammalian predators. Other predators, like crocodiles, as well as most reptiles and amphibians, have sideways facing eyes. Prehistoric carnivores[edit] The first vertebrate carnivores were fish, and then amphibians that moved on to land. Early tetrapods were large amphibious piscivores. Some scientists assert that Dimetrodon \"was the first terrestrial vertebrate to develop the curved, serrated teeth that enable a predator to eat prey much larger than itself.\"[8] While amphibians continued to feed on fish and later insects, reptiles began exploring two new food types, tetrapods (carnivory), and later, plants (herbivory). Carnivory was a natural transition from insectivory for medium and large tetrapods, requiring minimal adaptation (in contrast, a complex set of adaptations was necessary for feeding on highly fibrous plant materials).[4] Carnivoramorphs are currently the dominant carnivorous mammals, and have been so since the Miocene. In the early to mid-Cenozoic, however, hyaenodonts, oxyaenid, entelodonts, ptolemaiidans, \"arctocyonids\" and \"mesonychians\" were dominant instead, representing a very high diversity of eutherian carnivores in the northern continents and Africa. In South America, sparassodonts were dominant instead, while Australia saw the presence of several marsupial predators, such as the dasyuromorphs and thylacoleonids. In the Mesozoic, while theropod dinosaurs were the larger carnivores, several carnivorous mammal groups were already present. Most notable are the gobiconodontids, the triconodontid Jugulator, the deltatheroideans and Cimolestes. Many of these, such as Repenomamus, Jugulator and Cimolestes, were among the largest mammals in their faunal assemblages, capable of attacking dinosaurs.[9][10][11] Most carnivorous mammals, from dogs to Deltatheridium, share several adaptations in common, such as carnassialiforme teeth, long canines and even similar tooth replacement patterns.[12] Most aberrant are thylacoleonids, which bear a diprodontan dentition completely unlike that of any mammal, and \"eutriconodonts\" like gobioconodontids and Jugulator, by virtue of their cusp anatomy, though they still worked in the same way as carnassials.[9] Some theropod dinosaurs such as Tyrannosaurus rex that existed during the Mesozoic Era were probably obligate carnivores. See also[edit] - Mesocarnivore - Herbivore References[edit] 1. ^ Nutrient Requirements: Carnivores. Duane E. Ullrey. Encyclopedia of Animal Science. 2. ^ a b Mammals: Carnivores. Duane E. Ullrey. Encyclopedia of Animal Science. 3. ^ Mammals\"' Omnivores. Duane E. Ullrey. Encyclopedia of Animal Science. 4. ^ a b Sahney, S., Benton, M.J. & Falcon-Lang, H.J. (2010). \"Rainforest collapse triggered Pennsylvanian tetrapod diversification in Euramerica\" (PDF). Geology. 38 (12): 1079–1082. doi:10.1130/G31182.1. CS1 maint: Multiple names: authors list (link) 5. ^ Velegrand-Defretin, Veronique (1994). \"Differences between cats and dogs: a nutritional view\". Proceedings of the Nutrition Society. 53: 15–24. doi:10.1079/pns19940004. 6. ^ Ullrey, D. E. (2004). \"Mammals: Carnivores\". In Pond, Wilson. Encyclopedia of Animal Science. CRC Press. p. 591. ISBN 978-0-8247-5496-9. 7. ^ Ullrey, D. E. (2004). \"Nutrient Requirements: Carnivores\". In Pond, Wilson. Encyclopedia of Animal Science. CRC Press. p. 670. ISBN 978-0-8247-5496-9. 8. ^ Foley, James A. (February 7, 2014). \"Carnivorous, Pre-Dinosaur Predator was First to Evolve Steak Knife-like Teeth\". Nature World News. Retrieved May 3, 2014. 9. ^ a b Zofia Kielan-Jaworowska, Richard L. Cifelli, Zhe-Xi Luo (2004). \"Chapter 12: Metatherians\". Mammals from the Age of Dinosaurs: origins, evolution, and structure. New York: Columbia University Press. pp. 425–262. ISBN 0-231-11918-6. 10. ^ Richard C. Fox (2015) A revision of the Late Cretaceous–Paleocene eutherian mammal Cimolestes Marsh, 1889. Canadian Journal of Earth Sciences (advance online publication) 11. ^ Cifelli, Richard L.; Madsen, Scott K. (1998). \"Triconodont mammals from the medial Cretaceous of Utah\". Journal of Vertebrate Paleontology 18 (2): 403–411. doi:10.1080/02724634.1998.10011068. 12. ^ CHRISTIAN DE MUIZON and BRIGITTE LANGE-BADRÉ, Carnivorous dental adaptations in tribosphenic mammals and phylogenetic reconstruction, Article first published online: 29 MAR 2007 DOI: 10.1111/j.1502-3931.1997.tb00481 Further reading[edit] - Glen, Alistair & Dickman, Christopher (Eds) 2014, Carnivores of Australia, CSIRO Publishing, Melbourne, ISBN 978-0-643-10310-8. - v - t - e Inter-species biological interactions in ecology - Amensalism - Commensalism - Competition - Deception in animals - Inquilinism - Mimicry - Mutualism - Neutralism - Synnecrosis - Predation Carnivore Herbivore Intraguild Parasitism Parasitoidism Cheating - Carnivore - Herbivore - Intraguild - Parasitism - Parasitoidism - Cheating - Symbiosis Cleaning symbiosis - Cleaning symbiosis - v - t - e Feeding behaviours Carnivores adult - Hematophagy - Insectivore - Lepidophagy - Man-eater - Molluscivore - Mucophagy - Myrmecophagy - Ophiophagy - Piscivore - Avivore - Spongivore - Vermivore reproductive - Oophagy - Paedophagy - Placentophagy - Breastfeeding - Weaning cannibalistic - Animal cannibalism - Human cannibalism - Self-cannibalism - Sexual cannibalism Herbivores - Folivore - Frugivore - Graminivore - Granivore - Nectarivore - Palynivore - Xylophagy - Osteophagy Cellular - Phagocytosis - Myzocytosis Others - Bacterivore - Fungivore - Coprophagia - Detritivore - Geophagia - Omnivore - Planktivore - Saprophagy - Xenophagy Methods - Ambush predator - Apex predator - Bait balls - Bottom feeding - Browsing - Feeding frenzy - Filter feeding - Grazing - Hypercarnivore - Hypocarnivore - Intraguild predation - Kleptoparasitism - Lunge feeding - Mesocarnivore - Pivot feeding - Ram feeding - Scavenging - Suction feeding - Trophallaxis - Predation - Antipredator adaptation - Carnivorous plant - Carnivorous fungus - Carnivorous protist - Category:Eating behaviors - v - t - e Ecology: Modelling ecosystems: Trophic components General - Abiotic component - Abiotic stress - Behaviour - Biogeochemical cycle - Biomass - Biotic component - Biotic stress - Carrying capacity - Competition - Ecosystem - Ecosystem ecology - Ecosystem model - Keystone species - List of feeding behaviours - Metabolic theory of ecology - Productivity - Resource Producers - Autotrophs - Chemosynthesis - Chemotrophs - Foundation species - Mixotrophs - Myco-heterotrophy - Mycotroph - Organotrophs - Photoheterotrophs - Photosynthesis - Photosynthetic efficiency - Phototrophs - Primary nutritional groups - Primary production Consumers - Apex predator - Bacterivore - Carnivores - Chemoorganotroph - Foraging - Generalist and specialist species - Intraguild predation - Herbivores - Heterotroph - Heterotrophic nutrition - Insectivore - Mesopredators - Mesopredator release hypothesis - Omnivores - Optimal foraging theory - Predation - Prey switching Decomposers - Chemoorganoheterotrophy - Decomposition - Detritivores - Detritus Microorganisms - Archaea - Bacteriophage - Environmental microbiology - Lithoautotroph - Lithotrophy - Microbial cooperation - Microbial ecology - Microbial food web - Microbial intelligence - Microbial loop - Microbial mat - Microbial metabolism - Phage ecology Food webs - Biomagnification - Ecological efficiency - Ecological pyramid - Energy flow - Food chain - Trophic level Example webs - Cold seeps - Hydrothermal vents - Intertidal - Kelp forests - Lakes - North Pacific Subtropical Gyre - Rivers - San Francisco Estuary - Soil - Tide pool Processes - Ascendency - Bioaccumulation - Cascade effect - Climax community - Competitive exclusion principle - Consumer-resource systems - Copiotrophs - Dominance - Ecological network - Ecological succession - Energy quality - Energy Systems Language - f-ratio - Feed conversion ratio - Feeding frenzy - Mesotrophic soil - Nutrient cycle - Oligotroph - Paradox of the plankton - Trophic cascade - Trophic mutualism - Trophic state index Defense/counter - Animal coloration - Antipredator adaptations - Camouflage - Deimatic behaviour - Herbivore adaptations to plant defense - Mimicry - Plant defense against herbivory - Predator avoidance in schooling fish - v - t - e Ecology: Modelling ecosystems: Other components Population ecology - Abundance - Allee effect - Depensation - Ecological yield - Effective population size - Intraspecific competition - Logistic function - Malthusian growth model - Maximum sustainable yield - Overpopulation in wild animals - Overexploitation - Population cycle - Population dynamics - Population modeling - Population size - Predator–prey (Lotka–Volterra) equations - Recruitment - Resilience - Small population size - Stability Species - Biodiversity - Density-dependent inhibition - Ecological effects of biodiversity - Ecological extinction - Endemic species - Flagship species - Gradient analysis - Indicator species - Introduced species - Invasive species - Latitudinal gradients in species diversity - Minimum viable population - Neutral theory - Occupancy–abundance relationship - Population viability analysis - Priority effect - Rapoport's rule - Relative abundance distribution - Relative species abundance - Species diversity - Species homogeneity - Species richness - Species distribution - Species-area curve - Umbrella species Species interaction - Antibiosis - Biological interaction - Commensalism - Community ecology - Ecological facilitation - Interspecific competition - Mutualism - Storage effect Spatial ecology - Biogeography - Cross-boundary subsidy - Ecocline - Ecotone - Ecotype - Disturbance - Edge effects - Foster's rule - Habitat fragmentation - Ideal free distribution - Intermediate Disturbance Hypothesis - Island biogeography - Landscape ecology - Landscape epidemiology - Landscape limnology - Metapopulation - Patch dynamics - r/K selection theory - Source–sink dynamics Niche - Ecological niche - Ecological trap - Ecosystem engineer - Environmental niche modelling - Guild - Habitat - Marine habitats - Limiting similarity - Niche apportionment models - Niche construction - Niche differentiation Other networks - Assembly rules - Bateman's principle - Bioluminescence - Ecological collapse - Ecological debt - Ecological deficit - Ecological energetics - Ecological indicator - Ecological threshold - Ecosystem diversity - Emergence - Extinction debt - Kleiber's law - Liebig's law of the minimum - Marginal value theorem - Thorson's rule - Xerosere Other - Allometry - Alternative stable state - Balance of nature - Biological data visualization - Constructal theory - Ecocline - Ecological economics - Ecological footprint - Ecological forecasting - Ecological humanities - Ecological stoichiometry - Ecopath - Ecosystem based fisheries - Endolith - Evolutionary ecology - Functional ecology - Industrial ecology - Macroecology - Microecosystem - Natural environment - Regime shift - Systems ecology - Urban ecology - Theoretical ecology List of ecology topics Retrieved from \"https://en.wikipedia.org/w/index.php?title=Carnivore&oldid=811071462\" Categories: - Biological interactions - Carnivory - Animals by eating behaviors - Ethology - MeatHidden categories: - CS1 maint: Multiple names: authors list Navigation menu Personal tools - Not logged in - Talk - Contributions - Create account - Log in Namespaces - Article - Talk Variants Views - Read - Edit - View history More Search Navigation - Main page - Contents - Featured content - Current events - Random article - Donate to Wikipedia - Wikipedia store Interaction - Help - About Wikipedia - Community portal - Recent changes - Contact page Tools - What links here - Related changes - Upload file - Special pages - Permanent link - Page information - Wikidata item - Cite this page Print/export - Create a book - Download as PDF - Printable version Languages - Afrikaans - العربية - Aragonés - Asturianu - Aymar aru - Bân-lâm-gú - Bosanski - Català - Čeština - ChiShona - Cymraeg - Deutsch - Eesti - Español - Esperanto - Euskara - فارسی - Føroyskt - Français - Frysk - Gaeilge - Gaelg - Galego - ગુજરાતી - 한국어 - Հայերեն - Hrvatski - Ido - Bahasa Indonesia - IsiXhosa - Íslenska - Italiano - עברית - Basa Jawa - Kernowek - Kreyòl ayisyen - Latina - Latviešu - Lëtzebuergesch - Limburgs - Magyar - മലയാളം - Malti - मराठी - Bahasa Melayu - Nederlands - नेपाली - नेपाल भाषा - 日本語 - Norsk - Nouormand - Polski - Português - Runa Simi - Русский - Scots - Simple English - Slovenčina - Slovenščina - Soomaaliga - Српски / srpski - Srpskohrvatski / српскохрватски - Basa Sunda - Suomi - Svenska - Tagalog - தமிழ் - Türkçe - Українська - اردو - Tiếng Việt - Walon - Winaray - 中文 Edit links - This page was last edited on 19 November 2017, at 10:16. - Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. - Privacy policy - About Wikipedia - Disclaimers - Contact Wikipedia - Developers - Cookie statement - Mobile view - - (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.336\",\"walltime\":\"0.443\",\"ppvisitednodes\":{\"value\":1272,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":0,\"limit\":1500000},\"postexpandincludesize\":{\"value\":75864,\"limit\":2097152},\"templateargumentsize\":{\"value\":1211,\"limit\":2097152},\"expansiondepth\":{\"value\":16,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":500},\"entityaccesscount\":{\"value\":0,\"limit\":400},\"timingprofile\":[\"100.00% 299.670 1 -total\",\" 49.95% 149.692 1 Template:Reflist\",\" 22.59% 67.699 2 Template:Cite_journal\",\" 14.82% 44.406 1 Template:IPAc-en\",\" 13.22% 39.623 5 Template:Navbox\",\" 13.11% 39.299 1 Template:About\",\" 12.35% 37.013 2 Template:ISBN\",\" 6.37% 19.090 2 Template:Cite_book\",\" 6.23% 18.657 1 Template:Biological_interaction-footer\",\" 4.97% 14.905 2 Template:Catalog_lookup_link\"]},\"scribunto\":{\"limitreport-timeusage\":{\"value\":\"0.123\",\"limit\":\"10.000\"},\"limitreport-memusage\":{\"value\":3135745,\"limit\":52428800}},\"cachereport\":{\"origin\":\"mw1227\",\"timestamp\":\"20171119101648\",\"ttl\":1900800,\"transientcontent\":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgBackendResponseTime\":99,\"wgHostname\":\"mw1321\"});});"},{"url":"https://en.wikipedia.org/wiki/Omnivore","text":"Omnivore - Wikipedia document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" ); (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Omnivore\",\"wgTitle\":\"Omnivore\",\"wgCurRevisionId\":809399630,\"wgRevisionId\":809399630,\"wgArticleId\":23974535,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"CS1 maint: Extra text: authors list\",\"CS1 maint: Uses authors parameter\",\"Animals by eating behaviors\",\"Ethology\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Omnivore\",\"wgRelevantArticleId\":23974535,\"wgRequestId\":\"Wgxa9ApAIDAAAGTbkdoAAAAV\",\"wgIsProbablyEditable\":true,\"wgRelevantPageIsProbablyEditable\":true,\"wgRestrictionEdit\":[],\"wgRestrictionMove\":[],\"wgFlaggedRevsParams\":{\"tags\":{}},\"wgStableRevisionId\":null,\"wgWikiEditorEnabledModules\":{\"toolbar\":true,\"preview\":false,\"publish\":false},\"wgBetaFeaturesFeatures\":[],\"wgMediaViewerOnClick\":true,\"wgMediaViewerEnabledByDefault\":true,\"wgPopupsShouldSendModuleToUser\":true,\"wgPopupsConflictsWithNavPopupGadget\":false,\"wgVisualEditor\":{\"pageLanguageCode\":\"en\",\"pageLanguageDir\":\"ltr\",\"pageVariantFallbacks\":\"en\",\"usePageImages\":true,\"usePageDescriptions\":true},\"wgPreferredVariant\":\"en\",\"wgMFExpandAllSectionsUserOption\":false,\"wgMFDisplayWikibaseDescriptions\":{\"search\":true,\"nearby\":true,\"watchlist\":true,\"tagline\":false},\"wgRelatedArticles\":null,\"wgRelatedArticlesUseCirrusSearch\":true,\"wgRelatedArticlesOnlyUseCirrusSearch\":false,\"wgULSCurrentAutonym\":\"English\",\"wgNoticeProject\":\"wikipedia\",\"wgCentralNoticeCookiesToDelete\":[],\"wgCentralNoticeCategoriesUsingLegacy\":[\"Fundraising\",\"fundraising\"],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\",\"wgWikibaseItemId\":\"Q164509\",\"wgCentralAuthMobileDomain\":false,\"wgCodeMirrorEnabled\":false,\"wgVisualEditorToolbarScrollOffset\":0,\"wgVisualEditorUnsupportedEditParams\":[\"undo\",\"undoafter\",\"veswitched\"],\"wgEditSubmitButtonLabelPublish\":false});mw.loader.state({\"ext.gadget.charinsert-styles\":\"ready\",\"ext.globalCssJs.user.styles\":\"ready\",\"ext.globalCssJs.site.styles\":\"ready\",\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"ext.cite.styles\":\"ready\",\"wikibase.client.init\":\"ready\",\"ext.visualEditor.desktopArticleTarget.noscript\":\"ready\",\"ext.uls.interlanguage\":\"ready\",\"ext.wikimediaBadges\":\"ready\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.sectionAnchor\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"ext.globalCssJs.site\":\"ready\"});mw.loader.implement(\"user.tokens@1dqfd7l\",function ( $, jQuery, require, module ) { mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});/*@nomin*/ });mw.loader.load([\"ext.cite.a11y\",\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.watchlist-notice\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.extra-toolbar-buttons\",\"ext.gadget.switcher\",\"ext.centralauth.centralautologin\",\"mmv.head\",\"mmv.bootstrap.autostart\",\"ext.popups\",\"ext.visualEditor.desktopArticleTarget.init\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents\",\"ext.navigationTiming\",\"ext.uls.eventlogger\",\"ext.uls.init\",\"ext.uls.interface\",\"ext.centralNotice.geoIP\",\"ext.centralNotice.startUp\",\"skins.vector.js\"]);}); Omnivore From Wikipedia, the free encyclopedia Jump to: navigation, search Examples of omnivores. From left to right: Humans,[1] dogs[2], pigs, walking catfish, American crow, gravel ant. Omnivore /ˈɒmnivɔːr/ is a consumption classification for animals that have the capability to obtain chemical energy and nutrients from materials originating from plant and animal origin. Often, omnivores also have the ability to incorporate food sources such as algae, fungi, and bacteria into their diet as well.[3][4][5] Omnivores come from diverse backgrounds that often independently evolved sophisticated consumption capabilities. For instance, dogs evolved from primarily carnivorous organisms (Carnivora) while pigs evolved from primarily herbivorous organisms (Artiodactyla).[6][7][8] What this means is that physical characteristics are often not reliable indicators of whether an animal has the ability to obtain energy and nutrients from both plant and animal matter. Owing to the wide range of entirely unrelated organisms independently evolving the capability to obtain energy and nutrients from both plant and animal materials, no generalizations about the anatomical features of all omnivores can realistically be made.[9] The variety of different animals that are classified as omnivores can be placed into further categories depending on their feeding behaviors. Frugivores include maned wolves and orangutans;[10][11] insectivores include swallows and pink fairy armadillos;[12][13] granivores include large ground finches and humans. (This is due to the average human diet mainly consisting of grains, with rice, maize and wheat comprising two-thirds of human food consumption).[14] All of these animals are omnivores, yet still fall into special niches in terms of feeding behavior and preferred foods. Being omnivores gives these animals more food security in stressful times or makes possible living in less consistent environments.[15] Contents - 1 Etymology and definitions 1.1 Classification, contradictions and difficulties - 1.1 Classification, contradictions and difficulties - 2 Omnivorous species 2.1 General 2.2 Omnivorous mammals 2.3 Other species - 2.1 General - 2.2 Omnivorous mammals - 2.3 Other species - 3 See also - 4 References Etymology and definitions[edit] The word omnivore derives from the Latin omnis (all), and vora, from vorare, (to eat or devour), having been coined by the French and later adopted by the English in the 1800s.[16] Traditionally the definition for omnivory was entirely behavioral by means of simply \"including both animal and vegetable tissue in the diet.[17]\" In more recent times, with the advent of advanced technological capabilities in fields like gastroenterology, biologists have formulated a standardized variation of omnivore used for labeling a species' actual ability to obtain energy and nutrients from materials.[18][19] This has subsequently conditioned two context specific definitions. - Behavioral: This definition is used to specify if a species or individual is actively consuming both plant and animal materials.[19][20][21][22] (e.g. \"vegans do not participate in the omnivore based diet.\") - Physiological: This definition is often used in academia to specify species that have the capability to obtain energy and nutrients from both plant and animal matter.[4][18][23][24] (e.g. \"humans are omnivores due to their capability to obtain energy and nutrients from both plant and animal materials.\") The taxonomic utility of omnivore's traditional and behavioral definition is limited, since the diet, behavior, and phylogeny of one omnivorous species might be very different from that of another: for instance, an omnivorous pig digging for roots and scavenging for fruit and carrion is taxonomically and ecologically quite distinct from an omnivorous chameleon that eats leaves and insects. The term \"omnivory\" is also not always comprehensive because it does not deal with mineral foods such as salt licks and the consumption of plant and animal material for medical purposes which would not otherwise be consumed (i.e. zoopharmacognosy) within non-omnivores. Classification, contradictions and difficulties[edit] Though Carnivora is a taxon for species classification, no such equivalent exists for omnivores, as omnivores are widespread across multiple taxonomic clades. The Carnivora order does not include all carnivorous species, and not all species within the Carnivora taxon are carnivorous.[25] It is common to find physiological carnivores consuming materials from plants or physiological herbivores consuming material from animals, e.g. felines eating grass and deer eating birds.[26][27] From a behavioral aspect, this would make them omnivores, but from the physiological standpoint, this may be due to zoopharmacognosy. Physiologically, animals must be able to obtain both energy and nutrients from plant and animal materials to be considered omnivorous. Thus, such animals are still able to be classified as carnivores and herbivores when they are just obtaining nutrients from materials originating from sources that do not seemingly complement their classification. For instance, it is well documented that animals such as giraffes, camels, and cattle will gnaw on bones, preferably dry bones, for particular minerals and nutrients.[28] Felines, which are usually regarded as obligate carnivores, occasionally eat grass to regurgitate indigestibles (e.g. hair, bones), aid with hemoglobin production, and as a laxative.[29] Occasionally, it is found that animals historically classified as carnivorous may deliberately eat plant material. For example, in 2013, it was considered that American alligators (Alligator mississippiensis) may be physiologically omnivorous once investigations had been conducted on why they occasionally eat fruits. It was suggested that alligators probably ate fruits both accidentally but also deliberately.[30] \"Life-history omnivores\" is a specialized classification given to organisms that change their eating habits during their life cycle.[31] Some species, such as grazing waterfowl like geese, are known to eat mainly animal tissue at one stage of their lives, but plant matter at another.[32] The same is true for many insects, such as beetles in the family Meloidae,[33] which begin by eating animal tissue as larvae, but change to eating plant matter after they mature. Likewise, many mosquito species in early life eat plants or assorted detritus, but as they mature, males continue to eat plant matter and nectar whereas the females (such as those of Anopheles, Aedes and Culex) also eat blood to reproduce effectively.[34] Omnivorous species[edit] General[edit] Although cases exist of carnivores eating plant matter and herbivores eating meat, the classification \"omnivore\" refers to the adaptations and main food source of the species in general, so these exceptions do not make either individual animals or the species as a whole omnivorous. For the concept of \"omnivore\" to be regarded as a scientific classification, some clear set of measurable and relevant criteria would need to be considered to differentiate between an \"omnivore\" and other categories, e.g. faunivore, folivore, and scavenger.[35] Some researchers argue that evolution of any species from herbivory to carnivory or carnivory to herbivory would be rare except via an intermediate stage of omnivory.[36] Omnivorous mammals[edit] Various mammals are omnivorous in the wild, such as species of pigs,[37] badgers, bears, coatis, civets, hedgehogs, opossums, skunks, sloths, squirrels,[38] raccoons, chipmunks,[39] mice,[40] and rats.[41] Hominidae, including humans and chimpanzees, are also omnivores.[5][42][43] Most bear species are omnivores Most bear species are omnivores,[44] but individual diets can range from almost exclusively herbivorous to almost exclusively carnivorous, depending on what food sources are available locally and seasonally. Polar bears are classified as carnivores, both taxonomically (they are in the order Carnivora), and behaviorally (they subsist on a largely carnivorous diet). Depending on the species of bear, there is generally a preference for one class of food, as plants and animals are digested differently. Wolf subspecies (including wolves, dogs, dingoes, and coyotes) have a general preference and are evolutionarily geared towards meat, but also will voluntarily eat plant material like fruits, vegetables, and grasses, and can live on such indefinitely.[45] Also, the maned wolf is a canid whose diet is naturally 50% plant matter. While most mammals may display \"omnivorous\" behavior patterns depending on conditions of supply, culture, season and so on, they will generally prefer a particular class of food, to which their digestive processes are adapted. Like most arboreal species, most squirrels are primarily granivores, subsisting on nuts and seeds.[46] But like virtually all mammals, squirrels avidly consume some animal food when it becomes available. For example, the American eastern gray squirrel has been introduced by humans to parts of Britain, continental Europe and South Africa. Where it flourishes, its effect on populations of nesting birds is often serious, largely because of consumption of eggs and nestlings.[47][48] Other species[edit] Various birds are omnivorous, with diets varying from berries and nectar to insects, worms, fish, and small rodents. Examples include cassowaries, chickens, crows[49] and related corvids, keas, rallidae, and rheas. In addition, some lizards, turtles, fish (such as piranhas and catfish), and invertebrates are also omnivorous. Quite often, mainly herbivorous creatures will eagerly eat small quantities of animal food when it becomes available. Although this is trivial most of the time, omnivorous or herbivorous birds, such as sparrows, often will feed their chicks insects while food is most needed for growth.[50] On close inspection it appears that nectar-feeding birds such as sunbirds rely on the ants and other insects that they find in flowers, not for a richer supply of protein, but for essential nutrients such as cyanocobalamin that are absent from nectar. Similarly, monkeys of many species eat maggoty fruit, sometimes in clear preference to sound fruit.[51] When to refer to such animals as omnivorous, or otherwise, is a question of context and emphasis, rather than of definition. See also[edit] - Consumer-resource systems - Evolution (biology) - Food chain - Food energy - Ingestion - Mesocarnivore - Productivity (ecology) References[edit] 1. ^ Beasley, DeAnna; Koltz, Amanda; Lambert, Joanna; Fierer, Noah; Dunn, Rob (29 July 2015). \"The Evolution of Stomach Acidity and Its Relevance to the Human Microbiome\". PLOS ONE. pp. e0134116. doi:10.1371/journal.pone.0134116. Retrieved 5 October 2016. 2. ^ Dewey, T. & Bhagat, S. (2002). \"Canis lupus familiaris\". Animal Diversity Web. Retrieved April 3, 2016. 3. ^ Bradford, Alina (January 25, 2016). \"Reference: Omnivores: Facts About Flexible Eaters\". Livescience. Retrieved April 2, 2016. 4. ^ a b \"Omnivore\". National Geographic Education. National Geographic Society. Retrieved 4 October 2012. 5. ^ a b McArdle, John. \"Humans are Omnivores\". Vegetarian Resource Group. Retrieved October 6, 2013. 6. ^ \"Why Your Dog's Pedigree Goes Back 40 Million Years\". About.com Education. Retrieved 2016-04-02. 7. ^ \"Evolutionary History of Pigs – Domesticating Wilbur\". blogs.lt.vt.edu. Retrieved 2016-04-02. 8. ^ \"Order Cetartiodactyla - Even-toed ungulates (and whales)\". www.ultimateungulate.com. Retrieved 2016-04-02. 9. ^ \"omnivore | biology\". Encyclopædia Britannica. Retrieved 2016-04-02. 10. ^ Motta-Junior, J. C.; Talamoni, S. A.; Lombardi, J. A.; Simokomaki, K. (1996-10-01). \"Diet of the maned wolf, Chrysocyon brachyurus, in central Brazil\". Journal of Zoology. 240 (2): 277–284. doi:10.1111/j.1469-7998.1996.tb05284.x. ISSN 1469-7998. 11. ^ Galdikas, Biruté M. F. (1988-02-01). \"Orangutan diet, range, and activity at Tanjung Puting, Central Borneo\". International Journal of Primatology. 9 (1): 1–35. doi:10.1007/BF02740195. ISSN 0164-0291. 12. ^ McCarty, John P.; Winkler, David W. (1999-01-01). \"Foraging Ecology and Diet Selectivity of Tree Swallows Feeding Nestlings\". The Condor. 101 (2): 246–254. doi:10.2307/1369987. JSTOR 1369987. 13. ^ Superina, Mariella (2011-03-01). \"Husbandry of a pink fairy armadillo (Chlamyphorus truncatus): case study of a cryptic and little known species in captivity\". Zoo Biology. 30 (2): 225–231. doi:10.1002/zoo.20334. ISSN 1098-2361. 14. ^ \"Dimensions of need - Contents\". www.fao.org. Retrieved 2016-04-02. 15. ^ \"For Most Of Human History, Being An Omnivore Was No Dilemma\". NPR.org. Retrieved 2016-04-03. 16. ^ \"omnivore: definition of omnivore in Oxford dictionary (American English) (US)\". www.oxforddictionaries.com. Retrieved 2016-04-02. 17. ^ Collocott, T. C. (ed.) (1974). Chambers Dictionary of science and technology. Edinburgh: W. and R. Chambers. ISBN 0-550-13202-3. CS1 maint: Extra text: authors list (link) 18. ^ a b \"Omnivore - Biology-Online Dictionary\". www.biology-online.org. Retrieved 2016-04-02. 19. ^ a b \"omnivore - definition of omnivore in English from the Oxford dictionary\". www.oxforddictionaries.com. Retrieved 2016-04-02. 20. ^ \"Definition of OMNIVORE\". www.merriam-webster.com. Retrieved 2016-04-02. 21. ^ \"omnivore Definition in the Cambridge English Dictionary\". dictionary.cambridge.org. Retrieved 2016-04-02. 22. ^ Clarys, Peter; Deliens, Tom; Huybrechts, Inge; Deriemaeker, Peter; Vanaelst, Barbara; De Keyzer, Willem; Hebbelinck, Marcel; Mullie, Patrick (2014-03-24). \"Comparison of Nutritional Quality of the Vegan, Vegetarian, Semi-Vegetarian, Pesco-Vegetarian and Omnivorous Diet\". Nutrients. 6 (3): 1318–1332. doi:10.3390/nu6031318. ISSN 2072-6643. PMC 3967195 . PMID 24667136. 23. ^ \"Animals: Carnivore, Herbivore or Omnivore?\". science made simple. Retrieved 2016-04-02. 24. ^ Reece, Jane (November 10, 2013). Campbell Biology (10th Edition). Boston: Pearson. pp. Chapter 55. ISBN 978-0321775658. 25. ^ Ewer , R. F. (1973). The Carnivores. London: Weidenfeld and Nicolson. ISBN 0-297-99564-2. 26. ^ \"Why Dogs Eat Grass ~ Dr. Richard Orzeck\". www.worldsvet.com. Retrieved 2016-04-17. 27. ^ \"White-tailed deer shown to raid nests, eat eggs and baby birds, USGS reports\". NOLA.com. Retrieved 2016-04-17. 28. ^ Hutson, Jarod M.; Burke, Chrissina C.; Haynes, Gary (2013-12-01). \"Osteophagia and bone modifications by giraffe and other large ungulates\". Journal of Archaeological Science. 40 (12): 4139–4149. doi:10.1016/j.jas.2013.06.004. 29. ^ petMD. \"Why do cats eat grass?\". petMD. Retrieved April 17, 2016. 30. ^ Platt, S. G.; Elsey, R. M.; Liu, H.; Rainwater, T. R.; Nifong, J. C.; Rosenblatt, A. E.; Heithaus, M. R.; Mazzotti, F. J. (2013). \"Frugivory and seed dispersal by crocodilians: an overlooked form of saurochory?\". Journal of Zoology. 291 (2): 87–99. doi:10.1111/jzo.12052. ISSN 1469-7998. 31. ^ \"Omnivore\". www.eoearth.org. Retrieved 2016-04-03. 32. ^ Maclean, Gordon Lindsay (1993). Roberts' Birds of Southern Africa. Publisher: New Holland. ISBN 978-0620175838. 33. ^ Skaife, S. H. (1953). African Insect Life. Pub. Longmans, Green & Co., London. 34. ^ \"Anopheles Male Vs. Female\". animals.mom.me. Retrieved 2016-04-17. 35. ^ Singer, Michael S.; Bernays, Elizabeth A. (2003). \"Understanding Omnivory Needs: A Behavioral Perspective\". Ecology. 84 (10): 2532–2537. doi:10.1890/02-0397. 36. ^ \"Omnivores' ancestors primarily ate plants, or animals, but not both\". Retrieved 17 April 2012. 37. ^ Brent Huffman. \"Family Suidae (Pigs)\". UltimateUngulate.com. Retrieved 2007-12-29. 38. ^ \"Tree Squirrels\". The Humane Society of the United States. Archived from the original on December 25, 2008. Retrieved 2009-01-01. 39. ^ \"Eastern Chipmunk\". Wonder Club. Retrieved 2009-01-01. 40. ^ \"Florida Mouse\". United States Fauna. Retrieved 2009-01-01. 41. ^ \"Brown Rat\". Science Daily. Retrieved 2009-01-01. 42. ^ Robert E. C. Wildman, Denis M. Medeiros (2000). Advanced Human Nutrition. CRC Press. p. 37. ISBN 0849385660. Retrieved October 6, 2013. CS1 maint: Uses authors parameter (link) 43. ^ Robert Mari Womack (2010). The Anthropology of Health and Healing. Rowman & Littlefield. p. 243. ISBN 0759110441. Retrieved October 6, 2013. 44. ^ \"Food and Diet\". bearsmart.com. Retrieved 3 July 2013. 45. ^ \"About Wolves\". Wolf Park. Retrieved 26 August 2015. 46. ^ Halle, S. & Stenseth, N. (2000). Activity patterns in small mammals: an ecological approach. Berlin; Heidelberg, Germany; New York: Springer-Verlag. p. 131. 47. ^ Annex: Towards a Forestry Commission England Grey Squirrel Policy (PDF), UK: Forestry Commission, 22 Jan 2006, retrieved 15 May 2012 48. ^ Moller, H. (1983). \"Food and foraging behaviour of red (Scirus vulgaris) and grey (Scirus carolinensis) squirrels\". Mammal Review 13: 81-98. 49. ^ Seattle Audubon Society. \"Family Corvidae (Crows/Ravens)\". BirdWeb.org. Retrieved 2011-01-01. 50. ^ Capinera, John (2010). Insects and Wildlife. Publisher: Wiley-Blackwell. ISBN 978-1-4443-3300-8. 51. ^ Ewing, Jack (2005). Monkeys Are Made of Chocolate. Publisher: Pixyjack Press. ISBN 978-0-9658098-1-8. - v - t - e Ecology: Modelling ecosystems: Trophic components General - Abiotic component - Abiotic stress - Behaviour - Biogeochemical cycle - Biomass - Biotic component - Biotic stress - Carrying capacity - Competition - Ecosystem - Ecosystem ecology - Ecosystem model - Keystone species - List of feeding behaviours - Metabolic theory of ecology - Productivity - Resource Producers - Autotrophs - Chemosynthesis - Chemotrophs - Foundation species - Mixotrophs - Myco-heterotrophy - Mycotroph - Organotrophs - Photoheterotrophs - Photosynthesis - Photosynthetic efficiency - Phototrophs - Primary nutritional groups - Primary production Consumers - Apex predator - Bacterivore - Carnivores - Chemoorganotroph - Foraging - Generalist and specialist species - Intraguild predation - Herbivores - Heterotroph - Heterotrophic nutrition - Insectivore - Mesopredators - Mesopredator release hypothesis - Omnivores - Optimal foraging theory - Predation - Prey switching Decomposers - Chemoorganoheterotrophy - Decomposition - Detritivores - Detritus Microorganisms - Archaea - Bacteriophage - Environmental microbiology - Lithoautotroph - Lithotrophy - Microbial cooperation - Microbial ecology - Microbial food web - Microbial intelligence - Microbial loop - Microbial mat - Microbial metabolism - Phage ecology Food webs - Biomagnification - Ecological efficiency - Ecological pyramid - Energy flow - Food chain - Trophic level Example webs - Cold seeps - Hydrothermal vents - Intertidal - Kelp forests - Lakes - North Pacific Subtropical Gyre - Rivers - San Francisco Estuary - Soil - Tide pool Processes - Ascendency - Bioaccumulation - Cascade effect - Climax community - Competitive exclusion principle - Consumer-resource systems - Copiotrophs - Dominance - Ecological network - Ecological succession - Energy quality - Energy Systems Language - f-ratio - Feed conversion ratio - Feeding frenzy - Mesotrophic soil - Nutrient cycle - Oligotroph - Paradox of the plankton - Trophic cascade - Trophic mutualism - Trophic state index Defense/counter - Animal coloration - Antipredator adaptations - Camouflage - Deimatic behaviour - Herbivore adaptations to plant defense - Mimicry - Plant defense against herbivory - Predator avoidance in schooling fish - v - t - e Ecology: Modelling ecosystems: Other components Population ecology - Abundance - Allee effect - Depensation - Ecological yield - Effective population size - Intraspecific competition - Logistic function - Malthusian growth model - Maximum sustainable yield - Overpopulation in wild animals - Overexploitation - Population cycle - Population dynamics - Population modeling - Population size - Predator–prey (Lotka–Volterra) equations - Recruitment - Resilience - Small population size - Stability Species - Biodiversity - Density-dependent inhibition - Ecological effects of biodiversity - Ecological extinction - Endemic species - Flagship species - Gradient analysis - Indicator species - Introduced species - Invasive species - Latitudinal gradients in species diversity - Minimum viable population - Neutral theory - Occupancy–abundance relationship - Population viability analysis - Priority effect - Rapoport's rule - Relative abundance distribution - Relative species abundance - Species diversity - Species homogeneity - Species richness - Species distribution - Species-area curve - Umbrella species Species interaction - Antibiosis - Biological interaction - Commensalism - Community ecology - Ecological facilitation - Interspecific competition - Mutualism - Storage effect Spatial ecology - Biogeography - Cross-boundary subsidy - Ecocline - Ecotone - Ecotype - Disturbance - Edge effects - Foster's rule - Habitat fragmentation - Ideal free distribution - Intermediate Disturbance Hypothesis - Island biogeography - Landscape ecology - Landscape epidemiology - Landscape limnology - Metapopulation - Patch dynamics - r/K selection theory - Source–sink dynamics Niche - Ecological niche - Ecological trap - Ecosystem engineer - Environmental niche modelling - Guild - Habitat - Marine habitats - Limiting similarity - Niche apportionment models - Niche construction - Niche differentiation Other networks - Assembly rules - Bateman's principle - Bioluminescence - Ecological collapse - Ecological debt - Ecological deficit - Ecological energetics - Ecological indicator - Ecological threshold - Ecosystem diversity - Emergence - Extinction debt - Kleiber's law - Liebig's law of the minimum - Marginal value theorem - Thorson's rule - Xerosere Other - Allometry - Alternative stable state - Balance of nature - Biological data visualization - Constructal theory - Ecocline - Ecological economics - Ecological footprint - Ecological forecasting - Ecological humanities - Ecological stoichiometry - Ecopath - Ecosystem based fisheries - Endolith - Evolutionary ecology - Functional ecology - Industrial ecology - Macroecology - Microecosystem - Natural environment - Regime shift - Systems ecology - Urban ecology - Theoretical ecology List of ecology topics - v - t - e Feeding behaviours Carnivores adult - Hematophagy - Insectivore - Lepidophagy - Man-eater - Molluscivore - Mucophagy - Myrmecophagy - Ophiophagy - Piscivore - Avivore - Spongivore - Vermivore reproductive - Oophagy - Paedophagy - Placentophagy - Breastfeeding - Weaning cannibalistic - Animal cannibalism - Human cannibalism - Self-cannibalism - Sexual cannibalism Herbivores - Folivore - Frugivore - Graminivore - Granivore - Nectarivore - Palynivore - Xylophagy - Osteophagy Cellular - Phagocytosis - Myzocytosis Others - Bacterivore - Fungivore - Coprophagia - Detritivore - Geophagia - Omnivore - Planktivore - Saprophagy - Xenophagy Methods - Ambush predator - Apex predator - Bait balls - Bottom feeding - Browsing - Feeding frenzy - Filter feeding - Grazing - Hypercarnivore - Hypocarnivore - Intraguild predation - Kleptoparasitism - Lunge feeding - Mesocarnivore - Pivot feeding - Ram feeding - Scavenging - Suction feeding - Trophallaxis - Predation - Antipredator adaptation - Carnivorous plant - Carnivorous fungus - Carnivorous protist - Category:Eating behaviors - v - t - e Ethology Branches - Animal cognition - Animal communication - Animal consciousness - Animal culture - Animal sexual behaviour - Animal welfare science - Anthrozoology - Bee learning and communication - Behavioural ecology - Behavioural genetics - Cognitive ethology - Comparative psychology - Emotion in animals - Evolutionary neuroscience - Human ethology - Instinct - Learning - Neuroethology - Pain in animals - Sociobiology - Tool use by animals - Zoosemiotics - Zoomusicology Ethologists - Patrick Bateson - Marc Bekoff - Donald Broom - Charles Darwin - Marian Dawkins - Richard Dawkins - Irenäus Eibl-Eibesfeldt - Dian Fossey - Karl von Frisch - Jane Goodall - Heini Hediger - Julian Huxley - Konrad Lorenz - Desmond Morris - Thomas Sebeok - William Homan Thorpe - Nikolaas Tinbergen - Jakob von Uexküll - Wolfgang Wickler - E. O. Wilson - Solly Zuckerman Societies - Association for the Study of Animal Behaviour - International Society for Applied Ethology Journals - Animal Behaviour - Animal Cognition - Animal Welfare - Behavioral Ecology - Behaviour Related topics - Animals portal - Biology portal - Ethology (category) Retrieved from \"https://en.wikipedia.org/w/index.php?title=Omnivore&oldid=809399630\" Categories: - Animals by eating behaviors - EthologyHidden categories: - CS1 maint: Extra text: authors list - CS1 maint: Uses authors parameter Navigation menu Personal tools - Not logged in - Talk - Contributions - Create account - Log in Namespaces - Article - Talk Variants Views - Read - Edit - View history More Search Navigation - Main page - Contents - Featured content - Current events - Random article - Donate to Wikipedia - Wikipedia store Interaction - Help - About Wikipedia - Community portal - Recent changes - Contact page Tools - What links here - Related changes - Upload file - Special pages - Permanent link - Page information - Wikidata item - Cite this page Print/export - Create a book - Download as PDF - Printable version Languages - Afrikaans - العربية - Asturianu - বাংলা - Български - Bosanski - Català - Čeština - Cymraeg - Dansk - Deutsch - Eesti - Español - Esperanto - Euskara - فارسی - Français - Frysk - Gaeilge - Galego - 한국어 - हिन्दी - Hrvatski - Ido - Bahasa Indonesia - Interlingua - IsiXhosa - Íslenska - Italiano - עברית - Basa Jawa - Қазақша - Kernowek - Kreyòl ayisyen - Latina - Latviešu - Lëtzebuergesch - Limburgs - Magyar - മലയാളം - Malti - Bahasa Melayu - Nederlands - 日本語 - Norsk - Norsk nynorsk - Polski - Português - Română - Runa Simi - Русский - Simple English - Slovenčina - Slovenščina - Српски / srpski - Srpskohrvatski / српскохрватски - Basa Sunda - Suomi - Svenska - தமிழ் - Türkçe - Українська - اردو - Tiếng Việt - 中文 Edit links - This page was last edited on 8 November 2017, at 21:29. - Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. - Privacy policy - About Wikipedia - Disclaimers - Contact Wikipedia - Developers - Cookie statement - Mobile view - - (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"0.484\",\"walltime\":\"0.595\",\"ppvisitednodes\":{\"value\":2992,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":0,\"limit\":1500000},\"postexpandincludesize\":{\"value\":144162,\"limit\":2097152},\"templateargumentsize\":{\"value\":2106,\"limit\":2097152},\"expansiondepth\":{\"value\":16,\"limit\":40},\"expensivefunctioncount\":{\"value\":0,\"limit\":500},\"entityaccesscount\":{\"value\":0,\"limit\":400},\"timingprofile\":[\"100.00% 469.758 1 -total\",\" 65.76% 308.891 1 Template:Reflist\",\" 30.89% 145.105 31 Template:Cite_web\",\" 12.45% 58.473 1 Template:IPAc-en\",\" 12.22% 57.412 5 Template:Navbox\",\" 9.01% 42.341 3 Template:ISBN\",\" 8.20% 38.507 8 Template:Cite_journal\",\" 7.70% 36.166 1 Template:Ethology\",\" 4.31% 20.253 3 Template:Catalog_lookup_link\",\" 4.08% 19.181 5 Template:Cite_book\"]},\"scribunto\":{\"limitreport-timeusage\":{\"value\":\"0.235\",\"limit\":\"10.000\"},\"limitreport-memusage\":{\"value\":4222098,\"limit\":52428800}},\"cachereport\":{\"origin\":\"mw1313\",\"timestamp\":\"20171108212946\",\"ttl\":1900800,\"transientcontent\":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgBackendResponseTime\":95,\"wgHostname\":\"mw1327\"});});"},{"url":"https://en.wikipedia.org/wiki/Bacteria","text":"Bacteria - Wikipedia document.documentElement.className = document.documentElement.className.replace( /(^|\\s)client-nojs(\\s|$)/, \"$1client-js$2\" ); (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgCanonicalNamespace\":\"\",\"wgCanonicalSpecialPageName\":false,\"wgNamespaceNumber\":0,\"wgPageName\":\"Bacteria\",\"wgTitle\":\"Bacteria\",\"wgCurRevisionId\":810865668,\"wgRevisionId\":810865668,\"wgArticleId\":9028799,\"wgIsArticle\":true,\"wgIsRedirect\":false,\"wgAction\":\"view\",\"wgUserName\":null,\"wgUserGroups\":[\"*\"],\"wgCategories\":[\"Webarchive template wayback links\",\"Articles containing Ancient Greek-language text\",\"Wikipedia indefinitely semi-protected pages\",\"Wikipedia indefinitely move-protected pages\",\"Articles needing additional references from August 2017\",\"All articles needing additional references\",\"Use dmy dates from March 2014\",\"Featured articles\",\"Use British English from September 2016\",\"Articles with 'species' microformats\",\"Articles with hAudio microformats\",\"Articles including recorded pronunciations (English)\",\"Articles containing Latin-language text\",\"Articles containing Greek-language text\",\"Wikipedia articles with LCCN identifiers\",\"Wikipedia articles with GND identifiers\",\"Bacteria\",\"Bacteriology\",\"Domains (biology)\",\"Microscopic organisms described by Antonie van Leeuwenhoek\"],\"wgBreakFrames\":false,\"wgPageContentLanguage\":\"en\",\"wgPageContentModel\":\"wikitext\",\"wgSeparatorTransformTable\":[\"\",\"\"],\"wgDigitTransformTable\":[\"\",\"\"],\"wgDefaultDateFormat\":\"dmy\",\"wgMonthNames\":[\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\"wgMonthNamesShort\":[\"\",\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\"wgRelevantPageName\":\"Bacteria\",\"wgRelevantArticleId\":9028799,\"wgRequestId\":\"Wg9vsgpAICsAAJkrCWYAAABV\",\"wgIsProbablyEditable\":false,\"wgRelevantPageIsProbablyEditable\":false,\"wgRestrictionEdit\":[\"autoconfirmed\"],\"wgRestrictionMove\":[\"sysop\"],\"wgFlaggedRevsParams\":{\"tags\":{}},\"wgStableRevisionId\":null,\"wgWikiEditorEnabledModules\":{\"toolbar\":true,\"preview\":false,\"publish\":false},\"wgBetaFeaturesFeatures\":[],\"wgMediaViewerOnClick\":true,\"wgMediaViewerEnabledByDefault\":true,\"wgPopupsShouldSendModuleToUser\":true,\"wgPopupsConflictsWithNavPopupGadget\":false,\"wgVisualEditor\":{\"pageLanguageCode\":\"en\",\"pageLanguageDir\":\"ltr\",\"pageVariantFallbacks\":\"en\",\"usePageImages\":true,\"usePageDescriptions\":true},\"wgPreferredVariant\":\"en\",\"wgMFExpandAllSectionsUserOption\":false,\"wgMFDisplayWikibaseDescriptions\":{\"search\":true,\"nearby\":true,\"watchlist\":true,\"tagline\":false},\"wgRelatedArticles\":null,\"wgRelatedArticlesUseCirrusSearch\":true,\"wgRelatedArticlesOnlyUseCirrusSearch\":false,\"wgULSCurrentAutonym\":\"English\",\"wgNoticeProject\":\"wikipedia\",\"wgCentralNoticeCookiesToDelete\":[],\"wgCentralNoticeCategoriesUsingLegacy\":[\"Fundraising\",\"fundraising\"],\"wgCategoryTreePageCategoryOptions\":\"{\\\"mode\\\":0,\\\"hideprefix\\\":20,\\\"showcount\\\":true,\\\"namespaces\\\":false}\",\"wgWikibaseItemId\":\"Q10876\",\"wgCentralAuthMobileDomain\":false,\"wgCodeMirrorEnabled\":false,\"wgVisualEditorToolbarScrollOffset\":0,\"wgVisualEditorUnsupportedEditParams\":[\"undo\",\"undoafter\",\"veswitched\"],\"wgEditSubmitButtonLabelPublish\":false});mw.loader.state({\"ext.gadget.charinsert-styles\":\"ready\",\"ext.globalCssJs.user.styles\":\"ready\",\"ext.globalCssJs.site.styles\":\"ready\",\"site.styles\":\"ready\",\"noscript\":\"ready\",\"user.styles\":\"ready\",\"user\":\"ready\",\"user.options\":\"ready\",\"user.tokens\":\"loading\",\"ext.cite.styles\":\"ready\",\"wikibase.client.init\":\"ready\",\"ext.visualEditor.desktopArticleTarget.noscript\":\"ready\",\"ext.uls.interlanguage\":\"ready\",\"ext.wikimediaBadges\":\"ready\",\"mediawiki.legacy.shared\":\"ready\",\"mediawiki.legacy.commonPrint\":\"ready\",\"mediawiki.sectionAnchor\":\"ready\",\"mediawiki.skinning.interface\":\"ready\",\"skins.vector.styles\":\"ready\",\"ext.globalCssJs.user\":\"ready\",\"ext.globalCssJs.site\":\"ready\"});mw.loader.implement(\"user.tokens@1dqfd7l\",function ( $, jQuery, require, module ) { mw.user.tokens.set({\"editToken\":\"+\\\\\",\"patrolToken\":\"+\\\\\",\"watchToken\":\"+\\\\\",\"csrfToken\":\"+\\\\\"});/*@nomin*/ });mw.loader.load([\"ext.cite.a11y\",\"site\",\"mediawiki.page.startup\",\"mediawiki.user\",\"mediawiki.hidpi\",\"mediawiki.page.ready\",\"mediawiki.toc\",\"mediawiki.searchSuggest\",\"ext.gadget.teahouse\",\"ext.gadget.ReferenceTooltips\",\"ext.gadget.watchlist-notice\",\"ext.gadget.DRN-wizard\",\"ext.gadget.charinsert\",\"ext.gadget.refToolbar\",\"ext.gadget.extra-toolbar-buttons\",\"ext.gadget.switcher\",\"ext.centralauth.centralautologin\",\"mmv.head\",\"mmv.bootstrap.autostart\",\"ext.popups\",\"ext.visualEditor.desktopArticleTarget.init\",\"ext.visualEditor.targetLoader\",\"ext.eventLogging.subscriber\",\"ext.wikimediaEvents\",\"ext.navigationTiming\",\"ext.uls.eventlogger\",\"ext.uls.init\",\"ext.uls.interface\",\"ext.centralNotice.geoIP\",\"ext.centralNotice.startUp\",\"skins.vector.js\"]);}); Bacteria From Wikipedia, the free encyclopedia Jump to: navigation, search This article is about the microorganisms. For the genus, see Bacterium (genus). For other uses, see Bacteria (disambiguation). This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (August 2017) (Learn how and when to remove this template message) Bacteria Temporal range: Archean or earlier – present Had'n Archean Proterozoic Pha. Scanning electron micrograph of Escherichia coli rods Scientific classification Domain: Bacteria Woese, Kandler & Wheelis, 1990[1] Phyla - Gram positive / no outer membrane Actinobacteria (high-G+C) Firmicutes (low-G+C) Tenericutes (no wall) - Gram negative / outer membrane present Aquificae Bacteroidetes/Fibrobacteres–Chlorobi (FCB group) Chlamydiae Deinococcus-Thermus Fusobacteria Gemmatimonadetes Nitrospirae Planctomycetes–Verrucomicrobia/Chlamydiae (PVC group) Proteobacteria Spirochaetes Synergistetes - Unknown / ungrouped Acidobacteria Chloroflexi Chrysiogenetes Cyanobacteria Deferribacteres Dictyoglomi Thermodesulfobacteria Thermotogae Synonyms Eubacteria Woese & Fox, 1977[2] Bacteria (/bækˈtɪəriə/ ( listen); common noun bacteria, singular bacterium) constitute a large domain of prokaryotic microorganisms. Typically a few micrometres in length, bacteria have a number of shapes, ranging from spheres to rods and spirals. Bacteria were among the first life forms to appear on Earth, and are present in most of its habitats. Bacteria inhabit soil, water, acidic hot springs, radioactive waste,[3] and the deep portions of Earth's crust. Bacteria also live in symbiotic and parasitic relationships with plants and animals. Most bacteria have not been characterised, and only about half of the bacterial phyla have species that can be grown in the laboratory.[4] The study of bacteria is known as bacteriology, a branch of microbiology. There are typically 40 million bacterial cells in a gram of soil and a million bacterial cells in a millilitre of fresh water. There are approximately 5×1030 bacteria on Earth,[5] forming a biomass which exceeds that of all plants and animals.[6] Bacteria are vital in many stages of the nutrient cycle by recycling nutrients such as the fixation of nitrogen from the atmosphere. The nutrient cycle includes the decomposition of dead bodies and bacteria are responsible for the putrefaction stage in this process.[7] In the biological communities surrounding hydrothermal vents and cold seeps, extremophile bacteria provide the nutrients needed to sustain life by converting dissolved compounds, such as hydrogen sulphide and methane, to energy. In March 2013, data reported by researchers in October 2012, was published. It was suggested that bacteria thrive in the Mariana Trench, which with a depth of up to 11 kilometres is the deepest known part of the oceans.[8][9] Other researchers reported related studies that microbes thrive inside rocks up to 580 metres below the sea floor under 2.6 kilometres of ocean off the coast of the northwestern United States.[8][10] According to one of the researchers, \"You can find microbes everywhere—they're extremely adaptable to conditions, and survive wherever they are.\"[8] The famous notion that bacterial cells in the human body outnumber human cells by a factor of 10:1 has been debunked. There are approximately 39 trillion bacterial cells in the human microbiota as personified by a \"reference\" 70 kg male 170 cm tall, whereas there are 30 trillion human cells in the body. This means that although they do have the upper hand in actual numbers, it is only by 30%, and not 900%.[11] The largest number exist in the gut flora, and a large number on the skin.[12] The vast majority of the bacteria in the body are rendered harmless by the protective effects of the immune system, though many are beneficial particularly in the gut flora. However several species of bacteria are pathogenic and cause infectious diseases, including cholera, syphilis, anthrax, leprosy, and bubonic plague. The most common fatal bacterial diseases are respiratory infections, with tuberculosis alone killing about 2 million people per year, mostly in sub-Saharan Africa.[13] In developed countries, antibiotics are used to treat bacterial infections and are also used in farming, making antibiotic resistance a growing problem. In industry, bacteria are important in sewage treatment and the breakdown of oil spills, the production of cheese and yogurt through fermentation, and the recovery of gold, palladium, copper and other metals in the mining sector,[14] as well as in biotechnology, and the manufacture of antibiotics and other chemicals.[15] Once regarded as plants constituting the class Schizomycetes, bacteria are now classified as prokaryotes. Unlike cells of animals and other eukaryotes, bacterial cells do not contain a nucleus and rarely harbour membrane-bound organelles. Although the term bacteria traditionally included all prokaryotes, the scientific classification changed after the discovery in the 1990s that prokaryotes consist of two very different groups of organisms that evolved from an ancient common ancestor. These evolutionary domains are called Bacteria and Archaea.[1] Contents - 1 Etymology - 2 Origin and early evolution - 3 Morphology - 4 Cellular structure 4.1 Intracellular structures 4.2 Extracellular structures 4.3 Endospores - 4.1 Intracellular structures - 4.2 Extracellular structures - 4.3 Endospores - 5 Metabolism - 6 Growth and reproduction - 7 Genomes and chromosomes - 8 Genetics 8.1 DNA transfer 8.2 Bacteriophages - 8.1 DNA transfer - 8.2 Bacteriophages - 9 Behaviour 9.1 Secretion 9.2 Bioluminescence 9.3 Multicellularity 9.4 Movement - 9.1 Secretion - 9.2 Bioluminescence - 9.3 Multicellularity - 9.4 Movement - 10 Classification and identification - 11 Interactions with other organisms 11.1 Predators 11.2 Mutualists 11.3 Pathogens - 11.1 Predators - 11.2 Mutualists - 11.3 Pathogens - 12 Significance in technology and industry - 13 History of bacteriology - 14 See also - 15 References - 16 Further reading - 17 External links Etymology Life timeline view • discuss • edit -4500 — – -4000 — – -3500 — – -3000 — – -2500 — – -2000 — – -1500 — – -1000 — – -500 — – 0 — water Single-celled life photosynthesis Eukaryotes Multicellular life Land life Dinosaurs Mammals Flowers ← Earliest Earth (−4540) ← Earliest water ← Earliest life ← LHB meteorites ← Earliest oxygen ← Atmospheric oxygen ← Oxygen crisis ← Earliest sexual reproduction ← Ediacara biota ← Cambrian explosion ← Earliest humans P h a n e r o z o i c P r o t e r o z o i c A r c h e a n H a d e a n Pongola Huronian Cryogenian Andean Karoo Quaternary Axis scale: millions of years ago. Orange labels: ice ages. Also see: Human timeline and Nature timeline The word bacteria is the plural of the New Latin bacterium, which is the latinisation of the Greek βακτήριον (bakterion),[16] the diminutive of βακτηρία (bakteria), meaning \"staff, cane\",[17] because the first ones to be discovered were rod-shaped.[18][19] Origin and early evolution Further information: Timeline of evolution and Evolutionary history of life The ancestors of modern bacteria were unicellular microorganisms that were the first forms of life to appear on Earth, about 4 billion years ago. For about 3 billion years, most organisms were microscopic, and bacteria and archaea were the dominant forms of life.[20][21] Although bacterial fossils exist, such as stromatolites, their lack of distinctive morphology prevents them from being used to examine the history of bacterial evolution, or to date the time of origin of a particular bacterial species. However, gene sequences can be used to reconstruct the bacterial phylogeny, and these studies indicate that bacteria diverged first from the archaeal/eukaryotic lineage.[22] The most recent common ancestor of bacteria and archaea was probably a hyperthermophile that lived about 2.5 billion–3.2 billion years ago.[23][24] Bacteria were also involved in the second great evolutionary divergence, that of the archaea and eukaryotes. Here, eukaryotes resulted from the entering of ancient bacteria into endosymbiotic associations with the ancestors of eukaryotic cells, which were themselves possibly related to the Archaea.[25][26] This involved the engulfment by proto-eukaryotic cells of alphaproteobacterial symbionts to form either mitochondria or hydrogenosomes, which are still found in all known Eukarya (sometimes in highly reduced form, e.g. in ancient \"amitochondrial\" protozoa). Later, some eukaryotes that already contained mitochondria also engulfed cyanobacteria-like organisms, leading to the formation of chloroplasts in algae and plants.[27][28] This is known as secondary endosymbiosis. Morphology Further information: Bacterial cell structure § Cell morphology Further information: Bacterial morphological plasticity Bacteria display many cell morphologies and arrangements Bacteria display a wide diversity of shapes and sizes, called morphologies. Bacterial cells are about one-tenth the size of eukaryotic cells and are typically 0.5–5.0 micrometres in length. However, a few species are visible to the unaided eye—for example, Thiomargarita namibiensis is up to half a millimetre long[29] and Epulopiscium fishelsoni reaches 0.7 mm.[30] Among the smallest bacteria are members of the genus Mycoplasma, which measure only 0.3 micrometres, as small as the largest viruses.[31] Some bacteria may be even smaller, but these ultramicrobacteria are not well-studied.[32] Most bacterial species are either spherical, called cocci (sing. coccus, from Greek kókkos, grain, seed), or rod-shaped, called bacilli (sing. bacillus, from Latin baculus, stick). Elongation is associated with swimming.[33] Some bacteria, called vibrio, are shaped like slightly curved rods or comma-shaped; others can be spiral-shaped, called spirilla, or tightly coiled, called spirochaetes. A small number of species even have tetrahedral or cuboidal shapes.[34] More recently, some bacteria were discovered deep under Earth's crust that grow as branching filamentous types with a star-shaped cross-section. The large surface area to volume ratio of this morphology may give these bacteria an advantage in nutrient-poor environments.[35] This wide variety of shapes is determined by the bacterial cell wall and cytoskeleton, and is important because it can influence the ability of bacteria to acquire nutrients, attach to surfaces, swim through liquids and escape predators.[36][37] A biofilm of thermophilic bacteria in the outflow of Mickey Hot Springs, Oregon, approximately 20 mm thick. Many bacterial species exist simply as single cells, others associate in characteristic patterns: Neisseria form diploids (pairs), Streptococcus form chains, and Staphylococcus group together in \"bunch of grapes\" clusters. Bacteria can also be elongated to form filaments, for example the Actinobacteria. Filamentous bacteria are often surrounded by a sheath that contains many individual cells. Certain types, such as species of the genus Nocardia, even form complex, branched filaments, similar in appearance to fungal mycelia.[38] Bacteria often attach to surfaces and form dense aggregations called biofilms, and larger formations known as microbial mats. These biofilms and mats can range from a few micrometres in thickness to up to half a metre in depth, and may contain multiple species of bacteria, protists and archaea. Bacteria living in biofilms display a complex arrangement of cells and extracellular components, forming secondary structures, such as microcolonies, through which there are networks of channels to enable better diffusion of nutrients.[39][40] In natural environments, such as soil or the surfaces of plants, the majority of bacteria are bound to surfaces in biofilms.[41] Biofilms are also important in medicine, as these structures are often present during chronic bacterial infections or in infections of implanted medical devices, and bacteria protected within biofilms are much harder to kill than individual isolated bacteria.[42] Even more complex morphological changes are sometimes possible. For example, when starved of amino acids, Myxobacteria detect surrounding cells in a process known as quorum sensing, migrate towards each other, and aggregate to form fruiting bodies up to 500 micrometres long and containing approximately 100,000 bacterial cells.[43] In these fruiting bodies, the bacteria perform separate tasks; this type of cooperation is a simple type of multicellular organisation. For example, about one in ten cells migrate to the top of a fruiting body and differentiate into a specialised dormant state called a myxospore, which is more resistant to drying and other adverse environmental conditions.[44] Cellular structure Further information: Bacterial cell structure Structure and contents of a typical gram-positive bacterial cell (seen by the fact that only one cell membrane is present). Intracellular structures The bacterial cell is surrounded by a cell membrane (also known as a lipid, cytoplasmic or plasma membrane). This membrane encloses the contents of the cell and acts as a barrier to hold nutrients, proteins and other essential components of the cytoplasm within the cell. As they are prokaryotes, bacteria do not usually have membrane-bound organelles in their cytoplasm, and thus contain few large intracellular structures. They lack a true nucleus, mitochondria, chloroplasts and the other organelles present in eukaryotic cells.[45] Bacteria were once seen as simple bags of cytoplasm, but structures such as the prokaryotic cytoskeleton[46][47] and the localisation of proteins to specific locations within the cytoplasm[46] that give bacteria some complexity have been discovered. These subcellular levels of organisation have been called \"bacterial hyperstructures\".[48] Bacterial microcompartments, such as carboxysomes,[49] provide a further level of organisation; they are compartments within bacteria that are surrounded by polyhedral protein shells, rather than by lipid membranes.[50] These \"polyhedral organelles\" localise and compartmentalise bacterial metabolism, a function performed by the membrane-bound organelles in eukaryotes.[51][52] Many important biochemical reactions, such as energy generation, use concentration gradients across membranes. The general lack of internal membranes in bacteria means reactions such as electron transport occur across the cell membrane between the cytoplasm and the periplasmic space.[53] However, in many photosynthetic bacteria the plasma membrane is highly folded and fills most of the cell with layers of light-gathering membrane.[54] These light-gathering complexes may even form lipid-enclosed structures called chlorosomes in green sulfur bacteria.[55] Other proteins import nutrients across the cell membrane, or expel undesired molecules from the cytoplasm. Carboxysomes are protein-enclosed bacterial organelles. Top left is an electron microscope image of carboxysomes in Halothiobacillus neapolitanus, below is an image of purified carboxysomes. On the right is a model of their structure. Scale bars are 100 nm.[56] Bacteria do not have a membrane-bound nucleus, and their genetic material is typically a single circular bacterial chromosome of DNA located in the cytoplasm in an irregularly shaped body called the nucleoid.[57] The nucleoid contains the chromosome with its associated proteins and RNA. The phylum Planctomycetes[58] and candidate phylum Poribacteria[59] may be exceptions to the general absence of internal membranes in bacteria, because they appear to have a double membrane around their nucleoids and contain other membrane-bound cellular structures. Like all living organisms, bacteria contain ribosomes, often grouped in chains called polyribosomes, for the production of proteins, but the structure of the bacterial ribosome is different from that of eukaryotes and Archaea.[60] Bacterial ribosomes have a sedimentation rate of 70S (measured in Svedberg units): their subunits have rates of 30S and 50S. Some antibiotics bind specifically to 70S ribosomes and inhibit bacterial protein synthesis. Those antibiotics kill bacteria without affecting the larger 80S ribosomes of eukaryotic cells and without harming the host. Some bacteria produce intracellular nutrient storage granules for later use, such as glycogen,[61] polyphosphate,[62] sulfur[63] or polyhydroxyalkanoates.[64] Certain bacterial species, such as the photosynthetic Cyanobacteria, produce internal gas vacuoles, vesicles which they use to regulate their buoyancy—allowing them to move up or down into water layers with different light intensities and nutrient levels.[65] The gas vacuoles are freely permeable to gas.[66] Intracellular membranes called chromatophores are also found in membranes of phototrophic bacteria. Used primarily for photosynthesis, they contain bacteriochlorophyll pigments and carotenoids. An early idea was that bacteria might contain membrane folds termed mesosomes, but these were later shown to be artefacts produced by the chemicals used to prepare the cells for electron microscopy. Inclusions are considered to be nonliving components of the cell that do not possess metabolic activity and are not bounded by membranes. The most common inclusions are glycogen, lipid droplets, crystals, and pigments. Volutin granules are cytoplasmic inclusions of complexed inorganic polyphosphate. These granules are called metachromatic granules due to their displaying the metachromatic effect; they appear red or blue when stained with the blue dyes methylene blue or toluidine blue.Microcompartments are widespread, membrane-bound organelles that are made of a protein shell that surrounds and encloses various enzymes. Carboxysomes are bacterial microcompartments that contain enzymes involved in carbon fixation. Magnetosomes are bacterial microcompartments, present in magnetotactic bacteria, that contain magnetic crystals. Extracellular structures Further information: Cell envelope In most bacteria, a cell wall is present on the outside of the cell membrane. The cell membrane and cell wall comprise the cell envelope. A common bacterial cell wall material is peptidoglycan (called \"murein\" in older sources), which is made from polysaccharide chains cross-linked by peptides containing D-amino acids.[67] Bacterial cell walls are different from the cell walls of plants and fungi, which are made of cellulose and chitin, respectively.[68] The cell wall of bacteria is also distinct from that of Archaea, which do not contain peptidoglycan. The cell wall is essential to the survival of many bacteria, and the antibiotic penicillin is able to kill bacteria by inhibiting a step in the synthesis of peptidoglycan.[68] The cell wall is absent in L-form bacteria. The main pathogenic types are some species of Mycoplasma. There are broadly speaking two different types of cell wall in bacteria, a thick one in the gram-positives and a thinner one in the gram-negatives. The names originate from the reaction of cells to the Gram stain, a long-standing test for the classification of bacterial species.[69] Gram-positive bacteria possess a thick cell wall containing many layers of peptidoglycan and teichoic acids. In contrast, gram-negative bacteria have a relatively thin cell wall consisting of a few layers of peptidoglycan surrounded by a second lipid membrane containing lipopolysaccharides and lipoproteins. Lipopolysaccharides, also called endotoxins, are composed of polysaccharides and lipid A that is responsible for much of the toxicity of gram-negative bacteria. Most bacteria have the gram-negative cell wall, and only the Firmicutes and Actinobacteria have the alternative gram-positive arrangement.[70] These two groups were previously known as the low G+C and high G+C gram-positive bacteria, respectively. These differences in structure can produce differences in antibiotic susceptibility; for instance, vancomycin can kill only gram-positive bacteria and is ineffective against gram-negative pathogens, such as Haemophilus influenzae or Pseudomonas aeruginosa.[71] If the bacterial cell wall is entirely removed, it is called a protoplast, whereas if it is partially removed, it is called a spheroplast. β-Lactam antibiotics, such as penicillin, inhibit the formation of peptidoglycan cross-links in the bacterial cell wall. The enzyme lysozyme, found in human tears, also digests the cell wall of bacteria and is the body's main defence against eye infections. Acid-fast bacteria, such as Mycobacteria, are resistant to decolorisation by acids during staining procedures. The high mycolic acid content of Mycobacteria is responsible for the staining pattern of poor absorption followed by high retention. The most common staining technique used to identify acid-fast bacteria is the Ziehl-Neelsen stain or acid-fast stain, in which the acid-fast bacilli are stained bright-red and stand out clearly against a blue background. In many bacteria, an S-layer of rigidly arrayed protein molecules covers the outside of the cell.[72] This layer provides chemical and physical protection for the cell surface and can act as a macromolecular diffusion barrier. S-layers have diverse but mostly poorly understood functions, but are known to act as virulence factors in Campylobacter and contain surface enzymes in Bacillus stearothermophilus.[73] Helicobacter pylori electron micrograph, showing multiple flagella on the cell surface Flagella are rigid protein structures, about 20 nanometres in diameter and up to 20 micrometres in length, that are used for motility. Flagella are driven by the energy released by the transfer of ions down an electrochemical gradient across the cell membrane.[74] Fimbriae (sometimes called \"attachment pili\") are fine filaments of protein, usually 2–10 nanometres in diameter and up to several micrometres in length. They are distributed over the surface of the cell, and resemble fine hairs when seen under the electron microscope. Fimbriae are believed to be involved in attachment to solid surfaces or to other cells, and are essential for the virulence of some bacterial pathogens.[75] Pili (sing. pilus) are cellular appendages, slightly larger than fimbriae, that can transfer genetic material between bacterial cells in a process called conjugation where they are called conjugation pili or \"sex pili\" (see bacterial genetics, below).[76] They can also generate movement where they are called type IV pili (see movement, below). Glycocalyx is produced by many bacteria to surround their cells, and varies in structural complexity: ranging from a disorganised slime layer of extracellular polymeric substances to a highly structured capsule. These structures can protect cells from engulfment by eukaryotic cells such as macrophages (part of the human immune system).[77] They can also act as antigens and be involved in cell recognition, as well as aiding attachment to surfaces and the formation of biofilms.[78] The assembly of these extracellular structures is dependent on bacterial secretion systems. These transfer proteins from the cytoplasm into the periplasm or into the environment around the cell. Many types of secretion systems are known and these structures are often essential for the virulence of pathogens, so are intensively studied.[79] Endospores Further information: Endospore Bacillus anthracis (stained purple) growing in cerebrospinal fluid Certain genera of gram-positive bacteria, such as Bacillus, Clostridium, Sporohalobacter, Anaerobacter, and Heliobacterium, can form highly resistant, dormant structures called endospores.[80] In almost all cases, one endospore is formed and this is not a reproductive process, although Anaerobacter can make up to seven endospores in a single cell.[81] Endospores have a central core of cytoplasm containing DNA and ribosomes surrounded by a cortex layer and protected by an impermeable and rigid coat. Dipicolinic acid is a chemical compound that composes 5% to 15% of the dry weight of bacterial spores. It is implicated as responsible for the heat resistance of the endospore. Endospores show no detectable metabolism and can survive extreme physical and chemical stresses, such as high levels of UV light, gamma radiation, detergents, disinfectants, heat, freezing, pressure, and desiccation.[82] In this dormant state, these organisms may remain viable for millions of years,[83][84] and endospores even allow bacteria to survive exposure to the vacuum and radiation in space.[85] According to scientist Dr. Steinn Sigurdsson, \"There are viable bacterial spores that have been found that are 40 million years old on Earth—and we know they're very hardened to radiation.\"[86] Endospore-forming bacteria can also cause disease: for example, anthrax can be contracted by the inhalation of Bacillus anthracis endospores, and contamination of deep puncture wounds with Clostridium tetani endospores causes tetanus.[87] Metabolism Further information: Microbial metabolism Bacteria exhibit an extremely wide variety of metabolic types.[88] The distribution of metabolic traits within a group of bacteria has traditionally been used to define their taxonomy, but these traits often do not correspond with modern genetic classifications.[89] Bacterial metabolism is classified into nutritional groups on the basis of three major criteria: the kind of energy used for growth, the source of carbon, and the electron donors used for growth. An additional criterion of respiratory microorganisms are the electron acceptors used for aerobic or anaerobic respiration.[90] Nutritional types in bacterial metabolism Nutritional type Source of energy Source of carbon Examples Phototrophs Sunlight Organic compounds (photoheterotrophs) or carbon fixation (photoautotrophs) Cyanobacteria, Green sulfur bacteria, Chloroflexi, or Purple bacteria Lithotrophs Inorganic compounds Organic compounds (lithoheterotrophs) or carbon fixation (lithoautotrophs) Thermodesulfobacteria, Hydrogenophilaceae, or Nitrospirae Organotrophs Organic compounds Organic compounds (chemoheterotrophs) or carbon fixation (chemoautotrophs) Bacillus, Clostridium or Enterobacteriaceae Carbon metabolism in bacteria is either heterotrophic, where organic carbon compounds are used as carbon sources, or autotrophic, meaning that cellular carbon is obtained by fixing carbon dioxide. Heterotrophic bacteria include parasitic types. Typical autotrophic bacteria are phototrophic cyanobacteria, green sulfur-bacteria and some purple bacteria, but also many chemolithotrophic species, such as nitrifying or sulfur-oxidising bacteria.[91] Energy metabolism of bacteria is either based on phototrophy, the use of light through photosynthesis, or based on chemotrophy, the use of chemical substances for energy, which are mostly oxidised at the expense of oxygen or alternative electron acceptors (aerobic/anaerobic respiration). Filaments of photosynthetic cyanobacteria Bacteria are further divided into lithotrophs that use inorganic electron donors and organotrophs that use organic compounds as electron donors. Chemotrophic organisms use the respective electron donors for energy conservation (by aerobic/anaerobic respiration or fermentation) and biosynthetic reactions (e.g., carbon dioxide fixation), whereas phototrophic organisms use them only for biosynthetic purposes. Respiratory organisms use chemical compounds as a source of energy by taking electrons from the reduced substrate and transferring them to a terminal electron acceptor in a redox reaction. This reaction releases energy that can be used to synthesise ATP and drive metabolism. In aerobic organisms, oxygen is used as the electron acceptor. In anaerobic organisms other inorganic compounds, such as nitrate, sulfate or carbon dioxide are used as electron acceptors. This leads to the ecologically important processes of denitrification, sulfate reduction, and acetogenesis, respectively. Another way of life of chemotrophs in the absence of possible electron acceptors is fermentation, wherein the electrons taken from the reduced substrates are transferred to oxidised intermediates to generate reduced fermentation products (e.g., lactate, ethanol, hydrogen, butyric acid). Fermentation is possible, because the energy content of the substrates is higher than that of the products, which allows the organisms to synthesise ATP and drive their metabolism.[92][93] These processes are also important in biological responses to pollution; for example, sulfate-reducing bacteria are largely responsible for the production of the highly toxic forms of mercury (methyl- and dimethylmercury) in the environment.[94] Non-respiratory anaerobes use fermentation to generate energy and reducing power, secreting metabolic by-products (such as ethanol in brewing) as waste. Facultative anaerobes can switch between fermentation and different terminal electron acceptors depending on the environmental conditions in which they find themselves. Lithotrophic bacteria can use inorganic compounds as a source of energy. Common inorganic electron donors are hydrogen, carbon monoxide, ammonia (leading to nitrification), ferrous iron and other reduced metal ions, and several reduced sulfur compounds. In unusual circumstances, the gas methane can be used by methanotrophic bacteria as both a source of electrons and a substrate for carbon anabolism.[95] In both aerobic phototrophy and chemolithotrophy, oxygen is used as a terminal electron acceptor, whereas under anaerobic conditions inorganic compounds are used instead. Most lithotrophic organisms are autotrophic, whereas organotrophic organisms are heterotrophic. In addition to fixing carbon dioxide in photosynthesis, some bacteria also fix nitrogen gas using the enzyme nitrogenase. This environmentally important trait can be found in most bacteria of the metabolic types listed above.[96] Regardless of the type of metabolic process they employ, the majority of bacteria are able to take in raw materials only in the form of relatively small molecules, which enter the cell by diffusion or through molecular channels in cell membranes. The Planctomycetes are the exception (as they are in possessing membranes around their nuclear material). It has recently been shown that Gemmata obscuriglobus is able to take in large molecules via a process that in some ways resembles endocytosis, the process used by eukaryotic cells to engulf external items.[30][97] Growth and reproduction Many bacteria reproduce through binary fission, which is compared to mitosis and meiosis in this image. Further information: Bacterial growth Unlike in multicellular organisms, increases in cell size (cell growth) and reproduction by cell division are tightly linked in unicellular organisms. Bacteria grow to a fixed size and then reproduce through binary fission, a form of asexual reproduction.[98] Under optimal conditions, bacteria can grow and divide extremely rapidly, and bacterial populations can double as quickly as every 9.8 minutes.[99] In cell division, two identical clone daughter cells are produced. Some bacteria, while still reproducing asexually, form more complex reproductive structures that help disperse the newly formed daughter cells. Examples include fruiting body formation by Myxobacteria and aerial hyphae formation by Streptomyces, or budding. Budding involves a cell forming a protrusion that breaks away and produces a daughter cell. A colony of Escherichia coli[100] In the laboratory, bacteria are usually grown using solid or liquid media. Solid growth media, such as agar plates, are used to isolate pure cultures of a bacterial strain. However, liquid growth media are used when measurement of growth or large volumes of cells are required. Growth in stirred liquid media occurs as an even cell suspension, making the cultures easy to divide and transfer, although isolating single bacteria from liquid media is difficult. The use of selective media (media with specific nutrients added or deficient, or with antibiotics added) can help identify specific organisms.[101] Most laboratory techniques for growing bacteria use high levels of nutrients to produce large amounts of cells cheaply and quickly. However, in natural environments, nutrients are limited, meaning that bacteria cannot continue to reproduce indefinitely. This nutrient limitation has led the evolution of different growth strategies (see r/K selection theory). Some organisms can grow extremely rapidly when nutrients become available, such as the formation of algal (and cyanobacterial) blooms that often occur in lakes during the summer.[102] Other organisms have adaptations to harsh environments, such as the production of multiple antibiotics by Streptomyces that inhibit the growth of competing microorganisms.[103] In nature, many organisms live in communities (e.g., biofilms) that may allow for increased supply of nutrients and protection from environmental stresses.[41] These relationships can be essential for growth of a particular organism or group of organisms (syntrophy).[104] Bacterial growth follows four phases. When a population of bacteria first enter a high-nutrient environment that allows growth, the cells need to adapt to their new environment. The first phase of growth is the lag phase, a period of slow growth when the cells are adapting to the high-nutrient environment and preparing for fast growth. The lag phase has high biosynthesis rates, as proteins necessary for rapid growth are produced.[105] The second phase of growth is the log phase, also known as the logarithmic or exponential phase. The log phase is marked by rapid exponential growth. The rate at which cells grow during this phase is known as the growth rate (k), and the time it takes the cells to double is known as the generation time (g). During log phase, nutrients are metabolised at maximum speed until one of the nutrients is depleted and starts limiting growth. The third phase of growth is the stationary phase and is caused by depleted nutrients. The cells reduce their metabolic activity and consume non-essential cellular proteins. The stationary phase is a transition from rapid growth to a stress response state and there is increased expression of genes involved in DNA repair, antioxidant metabolism and nutrient transport.[106] The final phase is the death phase where the bacteria run out of nutrients and die. Genomes and chromosomes Further information: Plasmid and Genome The genomes of thousands of bacterial species have been sequenced, with at least 9,000 sequences completed and more than 42,000 left as \"permanent\" drafts (as of Sep 2016).[107] Chromosome. Most bacteria have a single circular chromosome that can range in size from only 160,000 base pairs (bp) in the endosymbiotic bacteria Candidatus Carsonella ruddii,[108] to 12,200,000 base pairs (12.2 Mbp) in the soil-dwelling bacteria Sorangium cellulosum.[109] The genes in bacterial genomes are usually a single continuous stretch of DNA and although several different types of introns do exist in bacteria, these are much rarer than in eukaryotes.[110] Multiple chromosomes have been found in the genus Vibrio. For instance, Vibrio cholerae, the cause of cholera, and V. parahaemolyticus, have 2 chromosomes each.[111] In fact, 10% of all sequenced bacterial genomes are estimated to have 2 or more chromosomes.[111] Some bacteria, e.g. Borrelia burgdorferi, the cause of Lyme disease, contains a single linear chromosome and several linear and circular plasmids.[112][113] The chromosome of Streptomyces lividans is linear too[114] and there is evidence that this is true in most species of Streptomyces.[112] Plasmids are small extra-chromosomal DNAs that may contain genes for antibiotic resistance, enzymes that degrade unusual organic substrates, toxins that kill other bacteria, or virulence factors.[115] Plasmids replicate independently of chromosomes and often encode partition systems that ensure each daughter cell receives a copy of the plasmid following cell division. Partition systems are also encoded by most bacterial chromosomes. Plasmids that are maintained at a high copy number per cell typically lack partition systems because plasmids will randomly assort to both daughter cells.[116] Genetics Bacteria, as asexual organisms, inherit an identical copy of the parent's genes and are clonal. However, all bacteria can evolve by selection on changes to their genetic material DNA caused by genetic recombination or mutations. Mutations come from errors made during the replication of DNA or from exposure to mutagens. Mutation rates vary widely among different species of bacteria and even among different clones of a single species of bacteria.[117] Genetic changes in bacterial genomes come from either random mutation during replication or \"stress-directed mutation\", where genes involved in a particular growth-limiting process have an increased mutation rate.[118] DNA transfer Some bacteria also transfer genetic material between cells. This can occur in three main ways. First, bacteria can take up exogenous DNA from their environment, in a process called transformation. Genes can also be transferred by the process of transduction, when the integration of a bacteriophage introduces foreign DNA into the chromosome. The third method of gene transfer is conjugation, whereby DNA is transferred through direct cell contact. Transduction of bacterial genes by bacteriophage is a consequence of infrequent errors during intracellular assembly of virus particles. Conjugation, in the much-studied E. coli system, is determined by plasmid genes that encode the machinery necessary to transfer a new copy of the plasmid DNA from one bacterial host to another. It is seldom that a conjugative plasmid integrates into the host bacterial chromosome and subsequently transfers part of the host bacterial DNA to another bacterium. Transformation, unlike transduction or conjugation, depends on numerous bacterial gene products that specifically interact to perform this complex process.[119] In order for a bacterium to bind, take up and recombine donor DNA into its own chromosome, it must first enter a special physiological state termed competence (see Natural competence). In Bacillus subtilis, about 40 genes are required for the development of competence.[120] The length of DNA transferred during B. subtilis transformation can be between a third of a chromosome up to the whole chromosome.[121][122] Transformation appears to be common among bacterial species, and thus far at least 60 species are known to have the natural ability to become competent for transformation.[123] The development of competence in nature is usually associated with stressful environmental conditions, and seems to be an adaptation for facilitating repair of DNA damage in recipient cells.[124] In ordinary circumstances, transduction, conjugation, and transformation involve transfer of DNA between individual bacteria of the same species, but occasionally transfer may occur between individuals of different bacterial species and this may have significant consequences, such as the transfer of antibiotic resistance.[125] In such cases, gene acquisition from other bacteria or the environment is called horizontal gene transfer and may be common under natural conditions.[126] Gene transfer is particularly important in antibiotic resistance as it allows the rapid transfer of resistance genes between different pathogens.[127] Bacteriophages Main article: Bacteriophage Bacteriophages are viruses that infect bacteria. Many types of bacteriophage exist, some simply infect and lyse their host bacteria, while others insert into the bacterial chromosome. A bacteriophage can contain genes that contribute to its host's phenotype: for example, in the evolution of Escherichia coli O157:H7 and Clostridium botulinum, the toxin genes in an integrated phage converted a harmless ancestral bacterium into a lethal pathogen.[128] Bacteria resist phage infection through restriction modification systems that degrade foreign DNA,[129] and a system that uses CRISPR sequences to retain fragments of the genomes of phage that the bacteria have come into contact with in the past, which allows them to block virus replication through a form of RNA interference.[130][131] This CRISPR system provides bacteria with acquired immunity to infection. Behaviour Secretion Bacteria frequently secrete chemicals into their environment in order to modify it favourably. The secretions are often proteins and may act as enzymes that digest some form of food in the environment. Bioluminescence Further information: Milky seas effect A few bacteria have chemical systems that generate light. This bioluminescence often occurs in bacteria that live in association with fish, and the light probably serves to attract fish or other large animals.[132] Multicellularity See also: Prokaryote § Sociality Bacteria often function as multicellular aggregates known as biofilms, exchanging a variety of molecular signals for inter-cell communication, and engaging in coordinated multicellular behaviour.[133][134] The communal benefits of multicellular cooperation include a cellular division of labour, accessing resources that cannot effectively be used by single cells, collectively defending against antagonists, and optimising population survival by differentiating into distinct cell types.[133] For example, bacteria in biofilms can have more than 500 times increased resistance to antibacterial agents than individual \"planktonic\" bacteria of the same species.[134] One type of inter-cellular communication by a molecular signal is called quorum sensing, which serves the purpose of determining whether there is a local population density that is sufficiently high that it is productive to invest in processes that are only successful if large numbers of similar organisms behave similarly, as in excreting digestive enzymes or emitting light. Quorum sensing allows bacteria to coordinate gene expression, and enables them to produce, release and detect autoinducers or pheromones which accumulate with the growth in cell population.[135] Movement Further information: Chemotaxis, Flagellum, and Pilus Flagellum of gram-negative bacteria. The base drives the rotation of the hook and filament. Many bacteria can move using a variety of mechanisms: flagella are used for swimming through fluids; bacterial gliding and twitching motility move bacteria across surfaces; and changes of buoyancy allow vertical motion.[136] Swimming bacteria frequently move near 10 body lengths per second and a few as fast as 100. This makes them at least as fast as fish, on a relative scale.[137] In bacterial gliding and twitching motility, bacteria use their type IV pili as a grappling hook, repeatedly extending it, anchoring it and then retracting it with remarkable force (>80 pN).[138] Our observations redefine twitching motility as a rapid, highly organized mechanism of bacterial translocation by which Pseudomonas aeruginosa can disperse itself over large areas to colonize new territories. It is also now clear, both morphologically and genetically, that twitching motility and social gliding motility, such as occurs in Myxococcus xanthus, are essentially the same process. — Semmler, Whitchurch & Mattick (1999)[139] Flagella are semi-rigid cylindrical structures that are rotated and function much like the propeller on a ship. Objects as small as bacteria operate a low Reynolds number and cylindrical forms are more efficient than the flat, paddle-like, forms appropriate at human-size scale.[140] Bacterial species differ in the number and arrangement of flagella on their surface; some have a single flagellum (monotrichous), a flagellum at each end (amphitrichous), clusters of flagella at the poles of the cell (lophotrichous), while others have flagella distributed over the entire surface of the cell (peritrichous). The bacterial flagella is the best-understood motility structure in any organism and is made of about 20 proteins, with approximately another 30 proteins required for its regulation and assembly.[136] The flagellum is a rotating structure driven by a reversible motor at the base that uses the electrochemical gradient across the membrane for power.[141] This motor drives the motion of the filament, which acts as a propeller. Many bacteria (such as E. coli) have two distinct modes of movement: forward movement (swimming) and tumbling. The tumbling allows them to reorient and makes their movement a three-dimensional random walk.[142] (See external links below for link to videos.) The flagella of a unique group of bacteria, the spirochaetes, are found between two membranes in the periplasmic space. They have a distinctive helical body that twists about as it moves.[136] Motile bacteria are attracted or repelled by certain stimuli in behaviours called taxes: these include chemotaxis, phototaxis, energy taxis, and magnetotaxis.[143][144][145] In one peculiar group, the myxobacteria, individual bacteria move together to form waves of cells that then differentiate to form fruiting bodies containing spores.[44] The myxobacteria move only when on solid surfaces, unlike E. coli, which is motile in liquid or solid media. Several Listeria and Shigella species move inside host cells by usurping the cytoskeleton, which is normally used to move organelles inside the cell. By promoting actin polymerisation at one pole of their cells, they can form a kind of tail that pushes them through the host cell's cytoplasm.[146] Classification and identification Main article: Bacterial taxonomy Further information: Scientific classification, Systematics, Bacterial phyla, and Clinical pathology Streptococcus mutans visualised with a Gram stain Phylogenetic tree showing the diversity of bacteria, compared to other organisms.[147] Eukaryotes are coloured red, archaea green and bacteria blue. Classification seeks to describe the diversity of bacterial species by naming and grouping organisms based on similarities. Bacteria can be classified on the basis of cell structure, cellular metabolism or on differences in cell components, such as DNA, fatty acids, pigments, antigens and quinones.[101] While these schemes allowed the identification and classification of bacterial strains, it was unclear whether these differences represented variation between distinct species or between strains of the same species. This uncertainty was due to the lack of distinctive structures in most bacteria, as well as lateral gene transfer between unrelated species.[148] Due to lateral gene transfer, some closely related bacteria can have very different morphologies and metabolisms. To overcome this uncertainty, modern bacterial classification emphasises molecular systematics, using genetic techniques such as guanine cytosine ratio determination, genome-genome hybridisation, as well as sequencing genes that have not undergone extensive lateral gene transfer, such as the rRNA gene.[149] Classification of bacteria is determined by publication in the International Journal of Systematic Bacteriology,[150] and Bergey's Manual of Systematic Bacteriology.[151] The International Committee on Systematic Bacteriology (ICSB) maintains international rules for the naming of bacteria and taxonomic categories and for the ranking of them in the International Code of Nomenclature of Bacteria. The term \"bacteria\" was traditionally applied to all microscopic, single-cell prokaryotes. However, molecular systematics showed prokaryotic life to consist of two separate domains, originally called Eubacteria and Archaebacteria, but now called Bacteria and Archaea that evolved independently from an ancient common ancestor.[1] The archaea and eukaryotes are more closely related to each other than either is to the bacteria. These two domains, along with Eukarya, are the basis of the three-domain system, which is currently the most widely used classification system in microbiology.[152] However, due to the relatively recent introduction of molecular systematics and a rapid increase in the number of genome sequences that are available, bacterial classification remains a changing and expanding field.[4][153] For example, a few biologists argue that the Archaea and Eukaryotes evolved from gram-positive bacteria.[154] The identification of bacteria in the laboratory is particularly relevant in medicine, where the correct treatment is determined by the bacterial species causing an infection. Consequently, the need to identify human pathogens was a major impetus for the development of techniques to identify bacteria. The Gram stain, developed in 1884 by Hans Christian Gram, characterises bacteria based on the structural characteristics of their cell walls.[69] The thick layers of peptidoglycan in the \"gram-positive\" cell wall stain purple, while the thin \"gram-negative\" cell wall appears pink. By combining morphology and Gram-staining, most bacteria can be classified as belonging to one of four groups (gram-positive cocci, gram-positive bacilli, gram-negative cocci and gram-negative bacilli). Some organisms are best identified by stains other than the Gram stain, particularly mycobacteria or Nocardia, which show acid-fastness on Ziehl–Neelsen or similar stains.[155] Other organisms may need to be identified by their growth in special media, or by other techniques, such as serology. Culture techniques are designed to promote the growth and identify particular bacteria, while restricting the growth of the other bacteria in the sample. Often these techniques are designed for specific specimens; for example, a sputum sample will be treated to identify organisms that cause pneumonia, while stool specimens are cultured on selective media to identify organisms that cause diarrhoea, while preventing growth of non-pathogenic bacteria. Specimens that are normally sterile, such as blood, urine or spinal fluid, are cultured under conditions designed to grow all possible organisms.[101][156] Once a pathogenic organism has been isolated, it can be further characterised by its morphology, growth patterns (such as aerobic or anaerobic growth), patterns of hemolysis, and staining. As with bacterial classification, identification of bacteria is increasingly using molecular methods. Diagnostics using DNA-based tools, such as polymerase chain reaction, are increasingly popular due to their specificity and speed, compared to culture-based methods.[157] These methods also allow the detection and identification of \"viable but nonculturable\" cells that are metabolically active but non-dividing.[158] However, even using these improved methods, the total number of bacterial species is not known and cannot even be estimated with any certainty. Following present classification, there are a little less than 9,300 known species of prokaryotes, which includes bacteria and archaea;[159] but attempts to estimate the true number of bacterial diversity have ranged from 107 to 109 total species—and even these diverse estimates may be off by many orders of magnitude.[160][161] Interactions with other organisms Overview of bacterial infections and main species involved.[162][163] Further information: Microbes in human culture Despite their apparent simplicity, bacteria can form complex associations with other organisms. These symbiotic associations can be divided into parasitism, mutualism and commensalism. Due to their small size, commensal bacteria are ubiquitous and grow on animals and plants exactly as they will grow on any other surface. However, their growth can be increased by warmth and sweat, and large populations of these organisms in humans are the cause of body odour. Predators Some species of bacteria kill and then consume other microorganisms, these species are called predatory bacteria.[164] These include organisms such as Myxococcus xanthus, which forms swarms of cells that kill and digest any bacteria they encounter.[165] Other bacterial predators either attach to their prey in order to digest them and absorb nutrients, such as Vampirovibrio chlorellavorus,[166] or invade another cell and multiply inside the cytosol, such as Daptobacter.[167] These predatory bacteria are thought to have evolved from saprophages that consumed dead microorganisms, through adaptations that allowed them to entrap and kill other organisms.[168] Mutualists Certain bacteria form close spatial associations that are essential for their survival. One such mutualistic association, called interspecies hydrogen transfer, occurs between clusters of anaerobic bacteria that consume organic acids, such as butyric acid or propionic acid, and produce hydrogen, and methanogenic Archaea that consume hydrogen.[169] The bacteria in this association are unable to consume the organic acids as this reaction produces hydrogen that accumulates in their surroundings. Only the intimate association with the hydrogen-consuming Archaea keeps the hydrogen concentration low enough to allow the bacteria to grow. In soil, microorganisms that reside in the rhizosphere (a zone that includes the root surface and the soil that adheres to the root after gentle shaking) carry out nitrogen fixation, converting nitrogen gas to nitrogenous compounds.[170] This serves to provide an easily absorbable form of nitrogen for many plants, which cannot fix nitrogen themselves. Many other bacteria are found as symbionts in humans and other organisms. For example, the presence of over 1,000 bacterial species in the normal human gut flora of the intestines can contribute to gut immunity, synthesise vitamins, such as folic acid, vitamin K and biotin, convert sugars to lactic acid (see Lactobacillus), as well as fermenting complex undigestible carbohydrates.[171][172][173] The presence of this gut flora also inhibits the growth of potentially pathogenic bacteria (usually through competitive exclusion) and these beneficial bacteria are consequently sold as probiotic dietary supplements.[174] Pathogens Main article: Pathogenic bacteria Colour-enhanced scanning electron micrograph showing Salmonella typhimurium (red) invading cultured human cells If bacteria form a parasitic association with other organisms, they are classed as pathogens. Pathogenic bacteria are a major cause of human death and disease and cause infections such as tetanus, typhoid fever, diphtheria, syphilis, cholera, foodborne illness, leprosy and tuberculosis. A pathogenic cause for a known medical disease may only be discovered many years after, as was the case with Helicobacter pylori and peptic ulcer disease. Bacterial diseases are also important in agriculture, with bacteria causing leaf spot, fire blight and wilts in plants, as well as Johne's disease, mastitis, salmonella and anthrax in farm animals. Each species of pathogen has a characteristic spectrum of interactions with its human hosts. Some organisms, such as Staphylococcus or Streptococcus, can cause skin infections, pneumonia, meningitis and even overwhelming sepsis, a systemic inflammatory response producing shock, massive vasodilation and death.[175] Yet these organisms are also part of the normal human flora and usually exist on the skin or in the nose without causing any disease at all. Other organisms invariably cause disease in humans, such as the Rickettsia, which are obligate intracellular parasites able to grow and reproduce only within the cells of other organisms. One species of Rickettsia causes typhus, while another causes Rocky Mountain spotted fever. Chlamydia, another phylum of obligate intracellular parasites, contains species that can cause pneumonia, or urinary tract infection and may be involved in coronary heart disease.[176] Finally, some species, such as Pseudomonas aeruginosa, Burkholderia cenocepacia, and Mycobacterium avium, are opportunistic pathogens and cause disease mainly in people suffering from immunosuppression or cystic fibrosis.[177][178] Bacterial infections may be treated with antibiotics, which are classified as bacteriocidal if they kill bacteria, or bacteriostatic if they just prevent bacterial growth. There are many types of antibiotics and each class inhibits a process that is different in the pathogen from that found in the host. An example of how antibiotics produce selective toxicity are chloramphenicol and puromycin, which inhibit the bacterial ribosome, but not the structurally different eukaryotic ribosome.[179] Antibiotics are used both in treating human disease and in intensive farming to promote animal growth, where they may be contributing to the rapid development of antibiotic resistance in bacterial populations.[180] Infections can be prevented by antiseptic measures such as sterilising the skin prior to piercing it with the needle of a syringe, and by proper care of indwelling catheters. Surgical and dental instruments are also sterilised to prevent contamination by bacteria. Disinfectants such as bleach are used to kill bacteria or other pathogens on surfaces to prevent contamination and further reduce the risk of infection. Significance in technology and industry Further information: Economic importance of bacteria Bacteria, often lactic acid bacteria, such as Lactobacillus and Lactococcus, in combination with yeasts and moulds, have been used for thousands of years in the preparation of fermented foods, such as cheese, pickles, soy sauce, sauerkraut, vinegar, wine and yogurt.[181][182] The ability of bacteria to degrade a variety of organic compounds is remarkable and has been used in waste processing and bioremediation. Bacteria capable of digesting the hydrocarbons in petroleum are often used to clean up oil spills.[183] Fertiliser was added to some of the beaches in Prince William Sound in an attempt to promote the growth of these naturally occurring bacteria after the 1989 Exxon Valdez oil spill. These efforts were effective on beaches that were not too thickly covered in oil. Bacteria are also used for the bioremediation of industrial toxic wastes.[184] In the chemical industry, bacteria are most important in the production of enantiomerically pure chemicals for use as pharmaceuticals or agrichemicals.[185] Bacteria can also be used in the place of pesticides in the biological pest control. This commonly involves Bacillus thuringiensis (also called BT), a gram-positive, soil dwelling bacterium. Subspecies of this bacteria are used as a Lepidopteran-specific insecticides under trade names such as Dipel and Thuricide.[186] Because of their specificity, these pesticides are regarded as environmentally friendly, with little or no effect on humans, wildlife, pollinators and most other beneficial insects.[187][188] Because of their ability to quickly grow and the relative ease with which they can be manipulated, bacteria are the workhorses for the fields of molecular biology, genetics and biochemistry. By making mutations in bacterial DNA and examining the resulting phenotypes, scientists can determine the function of genes, enzymes and metabolic pathways in bacteria, then apply this knowledge to more complex organisms.[189] This aim of understanding the biochemistry of a cell reaches its most complex expression in the synthesis of huge amounts of enzyme kinetic and gene expression data into mathematical models of entire organisms. This is achievable in some well-studied bacteria, with models of Escherichia coli metabolism now being produced and tested.[190][191] This understanding of bacterial metabolism and genetics allows the use of biotechnology to bioengineer bacteria for the production of therapeutic proteins, such as insulin, growth factors, or antibodies.[192][193] Because of their importance for research in general, samples of bacterial strains are isolated and preserved in Biological Resource Centers. This ensures the availability of the strain to scientists worldwide. History of bacteriology For the history of microbiology, see Microbiology. For the history of bacterial classification, see Bacterial taxonomy. For the natural history of Bacteria, see Last universal common ancestor. Antonie van Leeuwenhoek, the first microbiologist and the first person to observe bacteria using a microscope. Bacteria were first observed by the Dutch microscopist Antonie van Leeuwenhoek in 1676, using a single-lens microscope of his own design.[194] He then published his observations in a series of letters to the Royal Society of London.[195][196][197] Bacteria were Leeuwenhoek's most remarkable microscopic discovery. They were just at the limit of what his simple lenses could make out and, in one of the most striking hiatuses in the history of science, no one else would see them again for over a century.[198] His observations had also included protozoans which he called animalcules, and his findings were looked at again in the light of the more recent findings of cell theory. Christian Gottfried Ehrenberg introduced the word \"bacterium\" in 1828.[199] In fact, his Bacterium was a genus that contained non-spore-forming rod-shaped bacteria,[200] as opposed to Bacillus, a genus of spore-forming rod-shaped bacteria defined by Ehrenberg in 1835.[201] Louis Pasteur demonstrated in 1859 that the growth of microorganisms causes the fermentation process, and that this growth is not due to spontaneous generation. (Yeasts and moulds, commonly associated with fermentation, are not bacteria, but rather fungi.) Along with his contemporary Robert Koch, Pasteur was an early advocate of the germ theory of disease.[202] Robert Koch, a pioneer in medical microbiology, worked on cholera, anthrax and tuberculosis. In his research into tuberculosis Koch finally proved the germ theory, for which he received a Nobel Prize in 1905.[203] In Koch's postulates, he set out criteria to test if an organism is the cause of a disease, and these postulates are still used today.[204] Ferdinand Cohn is said to be a founder of bacteriology, studying bacteria from 1870. Cohn was the first to classify bacteria based on their morphology.[205][206] Though it was known in the nineteenth century that bacteria are the cause of many diseases, no effective antibacterial treatments were available.[207] In 1910, Paul Ehrlich developed the first antibiotic, by changing dyes that selectively stained Treponema pallidum—the spirochaete that causes syphilis—into compounds that selectively killed the pathogen.[208] Ehrlich had been awarded a 1908 Nobel Prize for his work on immunology, and pioneered the use of stains to detect and identify bacteria, with his work being the basis of the Gram stain and the Ziehl–Neelsen stain.[209] A major step forward in the study of bacteria came in 1977 when Carl Woese recognised that archaea have a separate line of evolutionary descent from bacteria.[2] This new phylogenetic taxonomy depended on the sequencing of 16S ribosomal RNA, and divided prokaryotes into two evolutionary domains, as part of the three-domain system.[1] See also - Bacteriotherapy - Genetically modified bacteria - List of bacterial orders - Panspermia - Polysaccharide encapsulated bacteria - Psychrotrophic bacteria References 1. ^ a b c d Woese CR, Kandler O, Wheelis ML (1990). \"Towards a natural system of organisms: proposal for the domains Archaea, Bacteria, and Eucarya\". Proceedings of the National Academy of Sciences of the United States of America. 87 (12): 4576–9. Bibcode:1990PNAS...87.4576W. doi:10.1073/pnas.87.12.4576. PMC 54159 . PMID 2112744. 2. ^ a b Woese CR, Fox GE (1977). \"Phylogenetic structure of the prokaryotic domain: the primary kingdoms\". Proceedings of the National Academy of Sciences of the United States of America. 74 (11): 5088–90. Bibcode:1977PNAS...74.5088W. doi:10.1073/pnas.74.11.5088. PMC 432104 . PMID 270744. 3. ^ Fredrickson JK, Zachara JM, Balkwill DL, Kennedy D, Li SM, Kostandarithes HM, Daly MJ, Romine MF, Brockman FJ (2004). \"Geomicrobiology of high-level nuclear waste-contaminated vadose sediments at the Hanford site, Washington state\". Applied and Environmental Microbiology. 70 (7): 4230–41. doi:10.1128/AEM.70.7.4230-4241.2004. PMC 444790 . PMID 15240306. 4. ^ a b Rappé MS, Giovannoni SJ (2003). \"The uncultured microbial majority\". Annual Review of Microbiology. 57: 369–94. doi:10.1146/annurev.micro.57.030502.090759. PMID 14527284. 5. ^ Whitman WB, Coleman DC, Wiebe WJ (1998). \"Prokaryotes: the unseen majority\". Proceedings of the National Academy of Sciences of the United States of America. 95 (12): 6578–83. Bibcode:1998PNAS...95.6578W. doi:10.1073/pnas.95.12.6578. PMC 33863 . PMID 9618454. 6. ^ C.Michael Hogan. 2010. Bacteria. Encyclopedia of Earth. eds. Sidney Draggan and C.J.Cleveland, National Council for Science and the Environment, Washington DC Archived 11 May 2011 at the Wayback Machine. 7. ^ Forbes, S.L. (2008). \"Decomposition Chemistry in a Burial Environment\". In M. Tibbett; D.O. Carter. Soil Analysis in Forensic Taphonomy. CRC Press. pp. 203–223. ISBN 1-4200-6991-8. 8. ^ a b c Choi CQ (17 March 2013). \"Microbes Thrive in Deepest Spot on Earth\". LiveScience. Retrieved 17 March 2013. 9. ^ Glud R, Wenzhöfer F, Middelboe M, Oguri K, Turnewitsch R, Canfield DE, Kitazato H (2013). \"High rates of microbial carbon turnover in sediments in the deepest oceanic trench on Earth\". Nature Geoscience. 6 (4): 284–288. Bibcode:2013NatGe...6..284G. doi:10.1038/ngeo1773. 10. ^ Oskin B (14 March 2013). \"Intraterrestrials: Life Thrives in Ocean Floor\". LiveScience. Retrieved 17 March 2013. 11. ^ Sender R, Fuchs S, Milo R (2016). \"Revised estimates for the number of human and bacteria cells in the body\". bioRxiv 036103 . 12. ^ Sears CL (2005). \"A dynamic partnership: celebrating our gut flora\". Anaerobe. 11 (5): 247–51. doi:10.1016/j.anaerobe.2005.05.001. PMID 16701579. 13. ^ \"2002 WHO mortality data\". Retrieved 20 January 2007. 14. ^ \"Metal-Mining Bacteria Are Green Chemists\". Science Daily. 2 September 2010. 15. ^ Ishige T, Honda K, Shimizu S (2005). \"Whole organism biocatalysis\". Current Opinion in Chemical Biology. 9 (2): 174–80. doi:10.1016/j.cbpa.2005.02.001. PMID 15811802. 16. ^ βακτήριον. Liddell, Henry George; Scott, Robert; A Greek–English Lexicon at the Perseus Project. 17. ^ βακτηρία in Liddell and Scott. 18. ^ bacterium, on Oxford Dictionaries. 19. ^ Harper, Douglas. \"bacteria\". Online Etymology Dictionary. 20. ^ Schopf JW (1994). \"Disparate rates, differing fates: tempo and mode of evolution changed from the Precambrian to the Phanerozoic\". Proceedings of the National Academy of Sciences of the United States of America. 91 (15): 6735–42. Bibcode:1994PNAS...91.6735S. doi:10.1073/pnas.91.15.6735. PMC 44277 . PMID 8041691. 21. ^ DeLong EF, Pace NR (2001). \"Environmental diversity of bacteria and archaea\". Syst Biol. 50 (4): 470–8. doi:10.1080/106351501750435040. PMID 12116647. 22. ^ Brown JR, Doolittle WF (1997). \"Archaea and the prokaryote-to-eukaryote transition\". Microbiology and Molecular Biology Reviews. 61 (4): 456–502. PMC 232621 . PMID 9409149. 23. ^ Di Giulio M (2003). \"The universal ancestor and the ancestor of bacteria were hyperthermophiles\". J Mol Evol. 57 (6): 721–30. doi:10.1007/s00239-003-2522-6. PMID 14745541. 24. ^ Battistuzzi FU, Feijao A, Hedges SB (2004). \"A genomic timescale of prokaryote evolution: insights into the origin of methanogenesis, phototrophy, and the colonization of land\". BMC Evolutionary Biology. 4: 44. doi:10.1186/1471-2148-4-44. PMC 533871 . PMID 15535883. 25. ^ Poole AM, Penny D (2007). \"Evaluating hypotheses for the origin of eukaryotes\". BioEssays. 29 (1): 74–84. doi:10.1002/bies.20516. PMID 17187354. 26. ^ Dyall SD, Brown MT, Johnson PJ (2004). \"Ancient invasions: from endosymbionts to organelles\". Science. 304 (5668): 253–7. Bibcode:2004Sci...304..253D. doi:10.1126/science.1094884. PMID 15073369. 27. ^ Lang BF, Gray MW, Burger G (1999). \"Mitochondrial genome evolution and the origin of eukaryotes\". Annu Rev Genet. 33: 351–97. doi:10.1146/annurev.genet.33.1.351. PMID 10690412. 28. ^ McFadden GI (1999). \"Endosymbiosis and evolution of the plant cell\". Current Opinion in Plant Biology. 2 (6): 513–9. doi:10.1016/S1369-5266(99)00025-4. PMID 10607659. 29. ^ Schulz HN, Jorgensen BB (2001). \"Big bacteria\". Annu Rev Microbiol. 55: 105–37. doi:10.1146/annurev.micro.55.1.105. PMID 11544351. 30. ^ a b Williams C (2011). \"Who are you calling simple?\". New Scientist. 211 (2821): 38–41. doi:10.1016/S0262-4079(11)61709-0. 31. ^ Robertson J, Gomersall M, Gill P (1975). \"Mycoplasma hominis: growth, reproduction, and isolation of small viable cells\". J. Bacteriol. 124 (2): 1007–18. PMC 235991 . PMID 1102522. 32. ^ Velimirov B (2001). \"Nanobacteria, Ultramicrobacteria and Starvation Forms: A Search for the Smallest Metabolizing Bacterium\". Microbes and Environments. 16 (2): 67–77. doi:10.1264/jsme2.2001.67. 33. ^ Dusenbery, David B. (2009). Living at Micro Scale, pp. 20–25. Harvard University Press, Cambridge, Mass. ISBN 978-0-674-03116-6. 34. ^ Fritz I, Strömpl C, Abraham WR (2004). \"Phylogenetic relationships of the genera Stella, Labrys and Angulomicrobium within the 'Alphaproteobacteria' and description of Angulomicrobium amanitiforme sp. nov\". Int J Syst Evol Microbiol. 54 (Pt 3): 651–7. doi:10.1099/ijs.0.02746-0. PMID 15143003. 35. ^ Wanger G, Onstott TC, Southam G (2008). \"Stars of the terrestrial deep subsurface: A novel 'star-shaped' bacterial morphotype from a South African platinum mine\". Geobiology. 6 (3): 325–30. doi:10.1111/j.1472-4669.2008.00163.x. PMID 18498531. 36. ^ Cabeen MT, Jacobs-Wagner C (2005). \"Bacterial cell shape\". Nature Reviews Microbiology. 3 (8): 601–10. doi:10.1038/nrmicro1205. PMID 16012516. 37. ^ Young KD (2006). \"The selective value of bacterial shape\". Microbiol Mol Biol Rev. 70 (3): 660–703. doi:10.1128/MMBR.00001-06. PMC 1594593 . PMID 16959965. 38. ^ Douwes KE, Schmalzbauer E, Linde HJ, Reisberger EM, Fleischer K, Lehn N, Landthaler M, Vogt T (2003). \"Branched filaments no fungus, ovoid bodies no bacteria: Two unusual cases of mycetoma\". J Am Acad Dermatol. 49 (2 Suppl Case Reports): S170–3. doi:10.1067/mjd.2003.302. PMID 12894113. 39. ^ Donlan RM (2002). \"Biofilms: microbial life on surfaces\". Emerg Infect Dis. 8 (9): 881–90. doi:10.3201/eid0809.020063. PMC 2732559 . PMID 12194761. 40. ^ Branda SS, Vik S, Friedman L, Kolter R (2005). \"Biofilms: the matrix revisited\". Trends Microbiol. 13 (1): 20–6. doi:10.1016/j.tim.2004.11.006. PMID 15639628. 41. ^ a b Davey ME, O'toole GA (2000). \"Microbial biofilms: from ecology to molecular genetics\". Microbiol Mol Biol Rev. 64 (4): 847–67. doi:10.1128/MMBR.64.4.847-867.2000. PMC 99016 . PMID 11104821. 42. ^ Donlan RM, Costerton JW (2002). \"Biofilms: survival mechanisms of clinically relevant microorganisms\". Clin Microbiol Rev. 15 (2): 167–93. doi:10.1128/CMR.15.2.167-193.2002. PMC 118068 . PMID 11932229. 43. ^ Shimkets LJ (1999). \"Intercellular signaling during fruiting-body development of Myxococcus xanthus\". Annu Rev Microbiol. 53: 525–49. doi:10.1146/annurev.micro.53.1.525. PMID 10547700. 44. ^ a b Kaiser D (2004). \"Signaling in myxobacteria\". Annu Rev Microbiol. 58: 75–98. doi:10.1146/annurev.micro.58.030603.123620. PMID 15487930. 45. ^ Berg JM, Tymoczko JL, Stryer L (2002). Molecular Cell Biology (5th ed.). WH Freeman. ISBN 0-7167-4955-6. 46. ^ a b Gitai Z (2005). \"The new bacterial cell biology: moving parts and subcellular architecture\". Cell. 120 (5): 577–86. doi:10.1016/j.cell.2005.02.026. PMID 15766522. 47. ^ Shih YL, Rothfield L (2006). \"The bacterial cytoskeleton\". Microbiology and Molecular Biology Reviews. 70 (3): 729–54. doi:10.1128/MMBR.00017-06. PMC 1594594 . PMID 16959967. 48. ^ Norris V, den Blaauwen T, Cabin-Flaman A, Doi RH, Harshey R, Janniere L, Jimenez-Sanchez A, Jin DJ, Levin PA, Mileykovskaya E, Minsky A, Saier M, Skarstad K (2007). \"Functional taxonomy of bacterial hyperstructures\". Microbiology and Molecular Biology Reviews. 71 (1): 230–53. doi:10.1128/MMBR.00035-06. PMC 1847379 . PMID 17347523. 49. ^ Kerfeld CA, Sawaya MR, Tanaka S, Nguyen CV, Phillips M, Beeby M, Yeates TO (2005). \"Protein structures forming the shell of primitive bacterial organelles\". Science. 309 (5736): 936–8. Bibcode:2005Sci...309..936K. doi:10.1126/science.1113397. PMID 16081736. 50. ^ Bobik TA (2007). \"Bacterial Microcompartments\" (PDF). Microbe. Am Soc Microbiol. 2: 25–31. doi:10.1128/microbe.2.25.1. Archived from the original (PDF) on 2 August 2008. 51. ^ Bobik TA (2006). \"Polyhedral organelles compartmenting bacterial metabolic processes\". Applied Microbiology and Biotechnology. 70 (5): 517–25. doi:10.1007/s00253-005-0295-0. PMID 16525780. 52. ^ Yeates TO, Kerfeld CA, Heinhorst S, Cannon GC, Shively JM (2008). \"Protein-based organelles in bacteria: carboxysomes and related microcompartments\". Nature Reviews Microbiology. 6 (9): 681–91. doi:10.1038/nrmicro1913. PMID 18679172. 53. ^ Harold FM (1972). \"Conservation and transformation of energy by bacterial membranes\". Bacteriological Reviews. 36 (2): 172–230. PMC 408323 . PMID 4261111. 54. ^ Bryant DA, Frigaard NU (2006). \"Prokaryotic photosynthesis and phototrophy illuminated\". Trends Microbiol. 14 (11): 488–96. doi:10.1016/j.tim.2006.09.001. PMID 16997562. 55. ^ Psencík J, Ikonen TP, Laurinmäki P, Merckel MC, Butcher SJ, Serimaa RE, Tuma R (2004). \"Lamellar organization of pigments in chlorosomes, the light harvesting complexes of green photosynthetic bacteria\". Biophys. J. 87 (2): 1165–72. Bibcode:2004BpJ....87.1165P. doi:10.1529/biophysj.104.040956. PMC 1304455 . PMID 15298919. 56. ^ Tanaka S, Kerfeld CA, Sawaya MR, Cai F, Heinhorst S, Cannon GC, Yeates TO (2008). \"Atomic-level models of the bacterial carboxysome shell\". Science. 319 (5866): 1083–6. Bibcode:2008Sci...319.1083T. doi:10.1126/science.1151458. PMID 18292340. 57. ^ Thanbichler M, Wang SC, Shapiro L (2005). \"The bacterial nucleoid: a highly organized and dynamic structure\". J Cell Biochem. 96 (3): 506–21. doi:10.1002/jcb.20519. PMID 15988757. 58. ^ Fuerst JA (2005). \"Intracellular compartmentation in planctomycetes\". Annu Rev Microbiol. 59: 299–328. doi:10.1146/annurev.micro.59.030804.121258. PMID 15910279. 59. ^ Fieseler L, Horn M, Wagner M, Hentschel U (June 2004). \"Discovery of the novel candidate phylum \"Poribacteria\" in marine sponges\". Applied and Environmental Microbiology. 70 (6): 3724–32. doi:10.1128/AEM.70.6.3724-3732.2004. PMC 427773 . PMID 15184179. 60. ^ Poehlsgaard J, Douthwaite S (2005). \"The bacterial ribosome as a target for antibiotics\". Nature Reviews Microbiology. 3 (11): 870–81. doi:10.1038/nrmicro1265. PMID 16261170. 61. ^ Yeo M, Chater K (2005). \"The interplay of glycogen metabolism and differentiation provides an insight into the developmental biology of Streptomyces coelicolor\". Microbiology. 151 (Pt 3): 855–61. doi:10.1099/mic.0.27428-0. PMID 15758231. 62. ^ Shiba T, Tsutsumi K, Ishige K, Noguchi T (2000). \"Inorganic polyphosphate and polyphosphate kinase: their novel biological functions and applications\". Biochemistry (Mosc). 65 (3): 315–23. PMID 10739474. 63. ^ Brune DC (1995). \"Isolation and characterization of sulfur globule proteins from Chromatium vinosum and Thiocapsa roseopersicina\". Archives of Microbiology. 163 (6): 391–9. doi:10.1007/BF00272127. PMID 7575095. 64. ^ Kadouri D, Jurkevitch E, Okon Y, Castro-Sowinski S (2005). \"Ecological and agricultural significance of bacterial polyhydroxyalkanoates\". Critical Reviews in Microbiology. 31 (2): 55–67. doi:10.1080/10408410590899228. PMID 15986831. 65. ^ Walsby AE (1994). \"Gas vesicles\". Microbiological Reviews. 58 (1): 94–144. PMC 372955 . PMID 8177173. 66. ^ Walsby AE (1969). \"The Permeability of Blue-Green Algal Gas-Vacuole Membranes to Gas\". Proceedings of the Royal Society of London. Series B, Biological Sciences. 173 (1031): 235–255. Bibcode:1969RSPSB.173..235W. doi:10.1098/rspb.1969.0049. ISSN 0080-4649. OCLC 479422015. 67. ^ van Heijenoort J (2001). \"Formation of the glycan chains in the synthesis of bacterial peptidoglycan\". Glycobiology. 11 (3): 25R–36R. doi:10.1093/glycob/11.3.25R. PMID 11320055. 68. ^ a b Koch AL (2003). \"Bacterial wall as target for attack: past, present, and future research\". Clin Microbiol Rev. 16 (4): 673–87. doi:10.1128/CMR.16.4.673-687.2003. PMC 207114 . PMID 14557293. 69. ^ a b Gram, HC (1884). \"Über die isolierte Färbung der Schizomyceten in Schnitt- und Trockenpräparaten\". Fortschr. Med. 2: 185–189. 70. ^ Hugenholtz P (2002). \"Exploring prokaryotic diversity in the genomic era\". Genome Biology. 3 (2): reviews0003.1–reviews0003.8. doi:10.1186/gb-2002-3-2-reviews0003. PMC 139013 . PMID 11864374. 71. ^ Walsh FM, Amyes SG (2004). \"Microbiology and drug resistance mechanisms of fully resistant pathogens\". Current Opinion in Microbiology. 7 (5): 439–44. doi:10.1016/j.mib.2004.08.007. PMID 15451497. 72. ^ Engelhardt H, Peters J (1998). \"Structural research on surface layers: a focus on stability, surface layer homology domains, and surface layer-cell wall interactions\". J Struct Biol. 124 (2–3): 276–302. doi:10.1006/jsbi.1998.4070. PMID 10049812. 73. ^ Beveridge TJ, Pouwels PH, Sára M, Kotiranta A, Lounatmaa K, Kari K, Kerosuo E, Haapasalo M, Egelseer EM, Schocher I, Sleytr UB, Morelli L, Callegari ML, Nomellini JF, Bingle WH, Smit J, Leibovitz E, Lemaire M, Miras I, Salamitou S, Béguin P, Ohayon H, Gounon P, Matuschek M, Koval SF (1997). \"Functions of S-layers\". FEMS Microbiol Rev. 20 (1–2): 99–149. doi:10.1016/S0168-6445(97)00043-0. PMID 9276929. 74. ^ Kojima S, Blair DF (2004). \"The bacterial flagellar motor: structure and function of a complex molecular machine\". Int Rev Cytol. International Review of Cytology. 233: 93–134. doi:10.1016/S0074-7696(04)33003-2. ISBN 978-0-12-364637-8. PMID 15037363. 75. ^ Beachey EH (1981). \"Bacterial adherence: adhesin-receptor interactions mediating the attachment of bacteria to mucosal surface\". J Infect Dis. 143 (3): 325–45. doi:10.1093/infdis/143.3.325. PMID 7014727. 76. ^ Silverman PM (1997). \"Towards a structural biology of bacterial conjugation\". Mol Microbiol. 23 (3): 423–9. doi:10.1046/j.1365-2958.1997.2411604.x. PMID 9044277. 77. ^ Stokes RW, Norris-Jones R, Brooks DE, Beveridge TJ, Doxsee D, Thorson LM (2004). \"The glycan-rich outer layer of the cell wall of Mycobacterium tuberculosis acts as an antiphagocytic capsule limiting the association of the bacterium with macrophages\". Infect Immun. 72 (10): 5676–86. doi:10.1128/IAI.72.10.5676-5686.2004. PMC 517526 . PMID 15385466. 78. ^ Daffé M, Etienne G (1999). \"The capsule of Mycobacterium tuberculosis and its implications for pathogenicity\". Tuber Lung Dis. 79 (3): 153–69. doi:10.1054/tuld.1998.0200. PMID 10656114. 79. ^ Finlay BB, Falkow S (1997). \"Common themes in microbial pathogenicity revisited\". Microbiology and Molecular Biology Reviews. 61 (2): 136–69. PMC 232605 . PMID 9184008. 80. ^ Nicholson WL, Munakata N, Horneck G, Melosh HJ, Setlow P (2000). \"Resistance of Bacillus endospores to extreme terrestrial and extraterrestrial environments\". Microbiology and Molecular Biology Reviews. 64 (3): 548–72. doi:10.1128/MMBR.64.3.548-572.2000. PMC 99004 . PMID 10974126. 81. ^ Siunov AV, Nikitin DV, Suzina NE, Dmitriev VV, Kuzmin NP, Duda VI (1999). \"Phylogenetic status of Anaerobacter polyendosporus, an anaerobic, polysporogenic bacterium\" (PDF). Int J Syst Bacteriol. 49 (3): 1119–24. doi:10.1099/00207713-49-3-1119. PMID 10425769. 82. ^ Nicholson WL, Fajardo-Cavazos P, Rebeil R, Slieman TA, Riesenman PJ, Law JF, Xue Y (2002). \"Bacterial endospores and their significance in stress resistance\". Antonie Van Leeuwenhoek. 81 (1–4): 27–32. doi:10.1023/A:1020561122764. PMID 12448702. 83. ^ Vreeland RH, Rosenzweig WD, Powers DW (2000). \"Isolation of a 250 million-year-old halotolerant bacterium from a primary salt crystal\". Nature. 407 (6806): 897–900. Bibcode:2000Natur.407..897V. doi:10.1038/35038060. PMID 11057666. 84. ^ Cano RJ, Borucki MK (1995). \"Revival and identification of bacterial spores in 25- to 40-million-year-old Dominican amber\". Science. 268 (5213): 1060–4. Bibcode:1995Sci...268.1060C. doi:10.1126/science.7538699. PMID 7538699. 85. ^ Nicholson WL, Schuerger AC, Setlow P (2005). \"The solar UV environment and bacterial spore UV resistance: considerations for Earth-to-Mars transport by natural processes and human spaceflight\". Mutat Res. 571 (1–2): 249–64. doi:10.1016/j.mrfmmm.2004.10.012. PMID 15748651. 86. ^ BBC Staff (23 August 2011). \"Impacts 'more likely' to have spread life from Earth\". BBC. Retrieved 24 August 2011. 87. ^ Hatheway CL (1990). \"Toxigenic clostridia\". Clinical Microbiology Reviews. 3 (1): 66–98. PMC 358141 . PMID 2404569. 88. ^ Nealson KH (1999). \"Post-Viking microbiology: new approaches, new data, new insights\". Origins of Life and Evolution of Biospheres. 29 (1): 73–93. doi:10.1023/A:1006515817767. PMID 11536899. 89. ^ Xu J (2006). \"Microbial ecology in the age of genomics and metagenomics: concepts, tools, and recent advances\". Mol Ecol. 15 (7): 1713–31. doi:10.1111/j.1365-294X.2006.02882.x. PMID 16689892. 90. ^ Zillig W (1991). \"Comparative biochemistry of Archaea and Bacteria\". Current Opinion in Genetics & Development. 1 (4): 544–51. doi:10.1016/S0959-437X(05)80206-0. PMID 1822288. 91. ^ Hellingwerf KJ, Crielaard W, Hoff WD, Matthijs HC, Mur LR, van Rotterdam BJ (1994). \"Photobiology of bacteria\". Antonie Van Leeuwenhoek. 65 (4): 331–47. doi:10.1007/BF00872217. PMID 7832590. 92. ^ Zumft WG (1 December 1997). \"Cell biology and molecular basis of denitrification\". Microbiol Mol Biol Rev. 61 (4): 533–616. PMC 232623 . PMID 9409151. 93. ^ Drake HL, Daniel SL, Küsel K, Matthies C, Kuhner C, Braus-Stromeyer S (1997). \"Acetogenic bacteria: what are the in situ consequences of their diverse metabolic versatilities?\". BioFactors. 6 (1): 13–24. doi:10.1002/biof.5520060103. PMID 9233536. 94. ^ Morel FM, Kraepiel AM, Amyot M (1998). \"The chemical cycle and bioaccumulation of mercury\". Annual Review of Ecology and Systematics. 29: 543–566. doi:10.1146/annurev.ecolsys.29.1.543. 95. ^ Dalton H (2005). \"The Leeuwenhoek Lecture 2000 the natural and unnatural history of methane-oxidizing bacteria\". Philosophical Transactions of the Royal Society B. 360 (1458): 1207–22. doi:10.1098/rstb.2005.1657. PMC 1569495 . PMID 16147517. 96. ^ Zehr JP, Jenkins BD, Short SM, Steward GF (2003). \"Nitrogenase gene diversity and microbial community structure: a cross-system comparison\". Environ Microbiol. 5 (7): 539–54. doi:10.1046/j.1462-2920.2003.00451.x. PMID 12823187. 97. ^ Lonhienne TG, Sagulenko E, Webb RI, Lee KC, Franke J, Devos DP, Nouwens A, Carroll BJ, Fuerst JA (2010). \"Endocytosis-like protein uptake in the bacterium Gemmata obscuriglobus\". Proceedings of the National Academy of Sciences of the United States of America. 107 (29): 12883–12888. Bibcode:2010PNAS..10712883L. doi:10.1073/pnas.1001085107. PMC 2919973 . PMID 20566852. 98. ^ Koch AL (2002). \"Control of the bacterial cell cycle by cytoplasmic growth\". Crit Rev Microbiol. 28 (1): 61–77. doi:10.1080/1040-840291046696. PMID 12003041. 99. ^ Eagon RG (1962). \"Pseudomonas natriegens, a marine bacterium with a generation time of less than 10 minutes\". Journal of Bacteriology. 83 (4): 736–7. PMC 279347 . PMID 13888946. 100. ^ Stewart EJ, Madden R, Paul G, Taddei F (2005). \"Aging and death in an organism that reproduces by morphologically symmetric division\". PLoS Biol. 3 (2): e45. doi:10.1371/journal.pbio.0030045. PMC 546039 . PMID 15685293. 101. ^ a b c Thomson RB, Bertram H (2001). \"Laboratory diagnosis of central nervous system infections\". Infectious Disease Clinics of North America. 15 (4): 1047–71. doi:10.1016/S0891-5520(05)70186-0. PMID 11780267. 102. ^ Paerl HW, Fulton RS, Moisander PH, Dyble J (2001). \"Harmful freshwater algal blooms, with an emphasis on cyanobacteria\". ScientificWorldJournal. 1: 76–113. doi:10.1100/tsw.2001.16. PMID 12805693. 103. ^ Challis GL, Hopwood DA (2003). \"Synergy and contingency as driving forces for the evolution of multiple secondary metabolite production by Streptomyces species\". Proceedings of the National Academy of Sciences of the United States of America. 100 Suppl 2 (90002): 14555–61. Bibcode:2003PNAS..10014555C. doi:10.1073/pnas.1934677100. PMC 304118 . PMID 12970466. 104. ^ Kooijman SA, Auger P, Poggiale JC, Kooi BW (2003). \"Quantitative steps in symbiogenesis and the evolution of homeostasis\". Biol Rev Camb Philos Soc. 78 (3): 435–63. doi:10.1017/S1464793102006127. PMID 14558592. 105. ^ Prats C, López D, Giró A, Ferrer J, Valls J (2006). \"Individual-based modelling of bacterial cultures to study the microscopic causes of the lag phase\". J Theor Biol. 241 (4): 939–53. doi:10.1016/j.jtbi.2006.01.029. PMID 16524598. 106. ^ Hecker M, Völker U (2001). \"General stress response of Bacillus subtilis and other bacteria\". Adv Microb Physiol. Advances in Microbial Physiology. 44: 35–91. doi:10.1016/S0065-2911(01)44011-2. ISBN 978-0-12-027744-5. PMID 11407115. 107. ^ \"Genomes Online Database\". Genomes Online Database. Joint Genome Institute. Retrieved 14 Sep 2016. 108. ^ Nakabachi A, Yamashita A, Toh H, Ishikawa H, Dunbar HE, Moran NA, Hattori M (2006). \"The 160-kilobase genome of the bacterial endosymbiont Carsonella\". Science. 314 (5797): 267. doi:10.1126/science.1134196. PMID 17038615. 109. ^ Pradella S, Hans A, Spröer C, Reichenbach H, Gerth K, Beyer S (2002). \"Characterisation, genome size and genetic manipulation of the myxobacterium Sorangium cellulosum So ce56\". Arch Microbiol. 178 (6): 484–92. doi:10.1007/s00203-002-0479-2. PMID 12420170. 110. ^ Belfort M, Reaban ME, Coetzee T, Dalgaard JZ (1 July 1995). \"Prokaryotic introns and inteins: a panoply of form and function\". J. Bacteriol. 177 (14): 3897–903. PMC 177115 . PMID 7608058. 111. ^ a b Val, Marie-Eve; Soler-Bistué, Alfonso; Bland, Michael J.; Mazel, Didier (December 2014). \"Management of multipartite genomes: the Vibrio cholerae model\". Current Opinion in Microbiology. 22: 120–126. doi:10.1016/j.mib.2014.10.003. ISSN 1879-0364. PMID 25460805. 112. ^ a b Hinnebusch J, Tilly K (1993). \"Linear plasmids and chromosomes in bacteria\". Mol Microbiol. 10 (5): 917–22. doi:10.1111/j.1365-2958.1993.tb00963.x. PMID 7934868. 113. ^ Fraser, Claire M.; Casjens, Sherwood; Huang, Wai Mun; Sutton, Granger G.; Clayton, Rebecca; Lathigra, Raju; White, Owen; Ketchum, Karen A.; Dodson, Robert (1997-12-11). \"Genomic sequence of a Lyme disease spirochaete, Borrelia burgdorferi\". Nature. 390 (6660): 580–586. Bibcode:1997Natur.390..580F. doi:10.1038/37551. ISSN 0028-0836. PMID 9403685. 114. ^ Lin, Y. S.; Kieser, H. M.; Hopwood, D. A.; Chen, C. W. (December 1993). \"The chromosomal DNA of Streptomyces lividans 66 is linear\". Molecular Microbiology. 10 (5): 923–933. ISSN 0950-382X. PMID 7934869. 115. ^ Kado CI (2014). \"Historical Events That Spawned the Field of Plasmid Biology\". Microbiology Spectrum. 2 (5). doi:10.1128/microbiolspec.PLAS-0019-2013. PMID 26104369. 116. ^ Baxter JC, Funnell BE (2014). \"Plasmid Partition Mechanisms\". Microbiology Spectrum. 2 (6). doi:10.1128/microbiolspec.PLAS-0023-2014. PMID 26104442. 117. ^ Denamur E, Matic I (2006). \"Evolution of mutation rates in bacteria\". Mol Microbiol. 60 (4): 820–7. doi:10.1111/j.1365-2958.2006.05150.x. PMID 16677295. 118. ^ Wright BE (2004). \"Stress-directed adaptive mutations and evolution\". Mol Microbiol. 52 (3): 643–50. doi:10.1111/j.1365-2958.2004.04012.x. PMID 15101972. 119. ^ Chen I, Dubnau D (2004). \"DNA uptake during bacterial transformation\". Nature Reviews Microbiology. 2 (3): 241–9. doi:10.1038/nrmicro844. PMID 15083159. 120. ^ Solomon JM, Grossman AD (1996). \"Who's competent and when: regulation of natural genetic competence in bacteria\". Trends Genet. 12 (4): 150–5. doi:10.1016/0168-9525(96)10014-7. PMID 8901420. 121. ^ Akamatsu T, Taguchi H (2001). \"Incorporation of the whole chromosomal DNA in protoplast lysates into competent cells of Bacillus subtilis\". Biosci. Biotechnol. Biochem. 65 (4): 823–9. doi:10.1271/bbb.65.823. PMID 11388459. 122. ^ Saito Y, Taguchi H, Akamatsu T (2006). \"Fate of transforming bacterial genome following incorporation into competent cells of Bacillus subtilis: a continuous length of incorporated DNA\". J. Biosci. Bioeng. 101 (3): 257–62. doi:10.1263/jbb.101.257. PMID 16716928. 123. ^ Johnsborg O, Eldholm V, Håvarstein LS (2007). \"Natural genetic transformation: prevalence, mechanisms and function\". Res. Microbiol. 158 (10): 767–78. doi:10.1016/j.resmic.2007.09.004. PMID 17997281. 124. ^ Bernstein H, Bernstein C, Michod RE (2012). \"DNA repair as the primary adaptive function of sex in bacteria and eukaryotes\". Chapter 1: pp. 1–49 in: DNA Repair: New Research, Sakura Kimura and Sora Shimizu (eds.). Nova Sci. Publ., Hauppauge, N.Y. ISBN 978-1-62100-808-8. 125. ^ Michod RE, Bernstein H, Nedelcu AM (2008). \"Adaptive value of sex in microbial pathogens\" (PDF). Infect. Genet. Evol. 8 (3): 267–85. doi:10.1016/j.meegid.2008.01.002. PMID 18295550. 126. ^ Davison J (1999). \"Genetic exchange between bacteria in the environment\". Plasmid. 42 (2): 73–91. doi:10.1006/plas.1999.1421. PMID 10489325. 127. ^ Hastings PJ, Rosenberg SM, Slack A (2004). \"Antibiotic-induced lateral transfer of antibiotic resistance\". Trends Microbiol. 12 (9): 401–4. doi:10.1016/j.tim.2004.07.003. PMID 15337159. 128. ^ Brüssow H, Canchaya C, Hardt WD (2004). \"Phages and the evolution of bacterial pathogens: from genomic rearrangements to lysogenic conversion\". Microbiology and Molecular Biology Reviews. 68 (3): 560–602. doi:10.1128/MMBR.68.3.560-602.2004. PMC 515249 . PMID 15353570. 129. ^ Bickle TA, Krüger DH (1993). \"Biology of DNA restriction\". Microbiol. Rev. 57 (2): 434–50. PMC 372918 . PMID 8336674. 130. ^ Barrangou R, Fremaux C, Deveau H, Richards M, Boyaval P, Moineau S, Romero DA, Horvath P (2007). \"CRISPR provides acquired resistance against viruses in prokaryotes\". Science. 315 (5819): 1709–12. Bibcode:2007Sci...315.1709B. doi:10.1126/science.1138140. PMID 17379808. 131. ^ Brouns SJ, Jore MM, Lundgren M, Westra ER, Slijkhuis RJ, Snijders AP, Dickman MJ, Makarova KS, Koonin EV, van der Oost J (2008). \"Small CRISPR RNAs guide antiviral defense in prokaryotes\". Science. 321 (5891): 960–4. Bibcode:2008Sci...321..960B. doi:10.1126/science.1159689. PMID 18703739. 132. ^ Dusenbery, David B. (1996). Life at Small Scale. Scientific American Library. ISBN 0-7167-5060-0. 133. ^ a b Shapiro JA (1998). \"Thinking about bacterial populations as multicellular organisms\" (PDF). Annu. Rev. Microbiol. 52: 81–104. doi:10.1146/annurev.micro.52.1.81. PMID 9891794. Archived from the original (PDF) on 17 July 2011. 134. ^ a b Costerton JW, Lewandowski Z, Caldwell DE, Korber DR, Lappin-Scott HM (1995). \"Microbial biofilms\". Annu. Rev. Microbiol. 49: 711–45. doi:10.1146/annurev.mi.49.100195.003431. PMID 8561477. 135. ^ Miller MB, Bassler BL (2001). \"Quorum sensing in bacteria\". Annu. Rev. Microbiol. 55: 165–99. doi:10.1146/annurev.micro.55.1.165. PMID 11544353. 136. ^ a b c Bardy S, Ng S, Jarrell K (2003). \"Prokaryotic motility structures\". Microbiology. 149 (Pt 2): 295–304. doi:10.1099/mic.0.25948-0. PMID 12624192. 137. ^ Dusenbery, David B. (2009). Living at Micro Scale, p. 136. Harvard University Press, Cambridge, Mass. ISBN 978-0-674-03116-6. 138. ^ Merz A, So M, Sheetz M (2000). \"Pilus retraction powers bacterial twitching motility\". Nature. 407 (6800): 98–102. Bibcode:2000Natur.407...98M. doi:10.1038/35024105. PMID 10993081. 139. ^ \"A re-examination of twitching motility in Pseudomonas aeruginosa\" – Semmler, Whitchurch & Mattick (1999) 140. ^ Dusenbery, David B. (2009). Living at Micro Scale, Chapter 13. Harvard University Press, Cambridge, Mass. ISBN 978-0-674-03116-6. 141. ^ Macnab RM (1 December 1999). \"The bacterial flagellum: reversible rotary propellor and type III export apparatus\". J. Bacteriol. 181 (23): 7149–53. PMC 103673 . PMID 10572114. 142. ^ Wu M, Roberts J, Kim S, Koch D, DeLisa M (2006). \"Collective bacterial dynamics revealed using a three-dimensional population-scale defocused particle tracking technique\". Appl Environ Microbiol. 72 (7): 4987–94. doi:10.1128/AEM.00158-06. PMC 1489374 . PMID 16820497. 143. ^ Lux R, Shi W (2004). \"Chemotaxis-guided movements in bacteria\". Crit Rev Oral Biol Med. 15 (4): 207–20. doi:10.1177/154411130401500404. PMID 15284186. 144. ^ Schweinitzer T, Josenhans C (2010). \"Bacterial energy taxis: a global strategy?\". Arch Microbiol. 192 (7): 507–20. doi:10.1007/s00203-010-0575-7. PMC 2886117 . PMID 20411245. 145. ^ Frankel R, Bazylinski D, Johnson M, Taylor B (1997). \"Magneto-aerotaxis in marine coccoid bacteria\". Biophys J. 73 (2): 994–1000. Bibcode:1997BpJ....73..994F. doi:10.1016/S0006-3495(97)78132-3. PMC 1180996 . PMID 9251816. 146. ^ Goldberg MB (2001). \"Actin-based motility of intracellular microbial pathogens\". Microbiol Mol Biol Rev. 65 (4): 595–626, table of contents. doi:10.1128/MMBR.65.4.595-626.2001. PMC 99042 . PMID 11729265. 147. ^ Ciccarelli FD, Doerks T, von Mering C, Creevey CJ, Snel B, Bork P (March 2006). \"Toward automatic reconstruction of a highly resolved tree of life\". Science. 311 (5765): 1283–7. Bibcode:2006Sci...311.1283C. doi:10.1126/science.1123061. PMID 16513982. 148. ^ Boucher Y, Douady CJ, Papke RT, Walsh DA, Boudreau ME, Nesbo CL, Case RJ, Doolittle WF (2003). \"Lateral gene transfer and the origins of prokaryotic groups\". Annu Rev Genet. 37: 283–328. doi:10.1146/annurev.genet.37.050503.084247. PMID 14616063. 149. ^ Olsen GJ, Woese CR, Overbeek R (1994). \"The winds of (evolutionary) change: breathing new life into microbiology\". Journal of Bacteriology. 176 (1): 1–6. doi:10.2172/205047. PMC 205007 . PMID 8282683. 150. ^ \"IJSEM Home\". Ijs.sgmjournals.org. 28 October 2011. Retrieved 4 November 2011. 151. ^ \"Bergey's Manual Trust\". Bergeys.org. Retrieved 4 November 2011. 152. ^ Gupta R (2000). \"The natural evolutionary relationships among prokaryotes\". Crit Rev Microbiol. 26 (2): 111–31. doi:10.1080/10408410091154219. PMID 10890353. 153. ^ Doolittle RF (2005). \"Evolutionary aspects of whole-genome biology\". Current Opinion in Structural Biology. 15 (3): 248–53. doi:10.1016/j.sbi.2005.04.001. PMID 15963888. 154. ^ Cavalier-Smith T (2002). \"The neomuran origin of archaebacteria, the negibacterial root of the universal tree and bacterial megaclassification\". Int J Syst Evol Microbiol. 52 (Pt 1): 7–76. doi:10.1099/00207713-52-1-7. PMID 11837318. 155. ^ Woods GL, Walker DH (1996). \"Detection of infection or infectious agents by use of cytologic and histologic stains\". Clinical Microbiology Reviews. 9 (3): 382–404. PMC 172900 . PMID 8809467. 156. ^ Weinstein M (1994). \"Clinical importance of blood cultures\". Clin Lab Med. 14 (1): 9–16. PMID 8181237. 157. ^ Louie M, Louie L, Simor AE (8 August 2000). \"The role of DNA amplification technology in the diagnosis of infectious diseases\". CMAJ. 163 (3): 301–9. PMC 80298 . PMID 10951731. 158. ^ Oliver J (2005). \"The viable but nonculturable state in bacteria\". J Microbiol. 43 Spec No: 93–100. PMID 15765062. Archived from the original on 28 September 2007. 159. ^ Euzéby JP (8 December 2011). \"Number of published names\". List of Prokaryotic names with Standing in Nomenclature. Archived from the original on 19 January 2012. Retrieved 10 December 2011. 160. ^ Curtis TP, Sloan WT, Scannell JW (2002). \"Estimating prokaryotic diversity and its limits\". Proceedings of the National Academy of Sciences of the United States of America. 99 (16): 10494–9. Bibcode:2002PNAS...9910494C. doi:10.1073/pnas.142680199. PMC 124953 . PMID 12097644. 161. ^ Schloss PD, Handelsman J (2004). \"Status of the microbial census\". Microbiology and Molecular Biology Reviews. 68 (4): 686–91. doi:10.1128/MMBR.68.4.686-691.2004. PMC 539005 . PMID 15590780. 162. ^ Fisher B, Harvey RP, Champe PC (2007). Lippincott's Illustrated Reviews: Microbiology (Lippincott's Illustrated Reviews Series). Hagerstwon, MD: Lippincott Williams & Wilkins. pp. Chapter 33, pages 367–392. ISBN 0-7817-8215-5. 163. ^ LEF.org > Bacterial Infections Updated: 19 January 2006. Retrieved on 11 April 2009 164. ^ Martin MO (2002). \"Predatory prokaryotes: an emerging research opportunity\". Journal of Microbiology and Biotechnology. 4 (5): 467–77. PMID 12432957. 165. ^ Velicer GJ, Stredwick KL (2002). \"Experimental social evolution with Myxococcus xanthus\". Antonie Van Leeuwenhoek. 81 (1–4): 155–64. doi:10.1023/A:1020546130033. PMID 12448714. 166. ^ Gromov BV (1972). \"Electron Microscope Study of Parasitism by Bdellovibrio Chorellavorus Bacteria on Cells of the Green Alga Chorella Vulgaris\". Tsitologiya. 14 (2): 256–60. 167. ^ Guerrero R, Pedros-Alio C, Esteve I, Mas J, Chase D, Margulis L (April 1986). \"Predatory prokaryotes: predation and primary consumption evolved in bacteria\". Proceedings of the National Academy of Sciences of the United States of America. 83 (7): 2138–42. Bibcode:1986PNAS...83.2138G. doi:10.1073/pnas.83.7.2138. PMC 323246 . PMID 11542073. 168. ^ Velicer GJ, Mendes-Soares H (2009). \"Bacterial predators\". Current Biology. 19 (2): R55–6. doi:10.1016/j.cub.2008.10.043. PMID 19174136. 169. ^ Stams AJ, de Bok FA, Plugge CM, van Eekert MH, Dolfing J, Schraa G (2006). \"Exocellular electron transfer in anaerobic microbial communities\". Environ Microbiol. 8 (3): 371–82. doi:10.1111/j.1462-2920.2006.00989.x. PMID 16478444. 170. ^ Barea JM, Pozo MJ, Azcón R, Azcón-Aguilar C (2005). \"Microbial co-operation in the rhizosphere\". J Exp Bot. 56 (417): 1761–78. doi:10.1093/jxb/eri197. PMID 15911555. 171. ^ O'Hara AM, Shanahan F (2006). \"The gut flora as a forgotten organ\". EMBO Reports. 7 (7): 688–93. doi:10.1038/sj.embor.7400731. PMC 1500832 . PMID 16819463. 172. ^ Zoetendal EG, Vaughan EE, de Vos WM (2006). \"A microbial world within us\". Mol Microbiol. 59 (6): 1639–50. doi:10.1111/j.1365-2958.2006.05056.x. PMID 16553872. 173. ^ Gorbach SL (1990). \"Lactic acid bacteria and human health\". Annals of Medicine. 22 (1): 37–41. doi:10.3109/07853899009147239. PMID 2109988. 174. ^ Salminen SJ, Gueimonde M, Isolauri E (1 May 2005). \"Probiotics that modify disease risk\". J Nutr. 135 (5): 1294–8. PMID 15867327. 175. ^ Fish DN (2002). \"Optimal antimicrobial therapy for sepsis\". Am J Health Syst Pharm. 59 Suppl 1: S13–9. PMID 11885408. 176. ^ Belland RJ, Ouellette SP, Gieffers J, Byrne GI (2004). \"Chlamydia pneumoniae and atherosclerosis\". Cell Microbiol. 6 (2): 117–27. doi:10.1046/j.1462-5822.2003.00352.x. PMID 14706098. 177. ^ Heise ER (1982). \"Diseases associated with immunosuppression\". Environmental Health Perspectives. 43: 9–19. doi:10.2307/3429162. JSTOR 3429162. PMC 1568899 . PMID 7037390. 178. ^ Saiman L (2004). \"Microbiology of early CF lung disease\". Paediatric Respiratory Reviews. 5 Suppl A: S367–9. doi:10.1016/S1526-0542(04)90065-6. PMID 14980298. 179. ^ Yonath A, Bashan A (2004). \"Ribosomal crystallography: initiation, peptide bond formation, and amino acid polymerization are hampered by antibiotics\". Annu Rev Microbiol. 58: 233–51. doi:10.1146/annurev.micro.58.030603.123822. PMID 15487937. 180. ^ Khachatourians GG (1998). \"Agricultural use of antibiotics and the evolution and transfer of antibiotic-resistant bacteria\". CMAJ. 159 (9): 1129–36. PMC 1229782 . PMID 9835883. 181. ^ Johnson ME, Lucey JA (2006). \"Major technological advances and trends in cheese\". J Dairy Sci. 89 (4): 1174–8. doi:10.3168/jds.S0022-0302(06)72186-5. PMID 16537950. 182. ^ Hagedorn S, Kaphammer B (1994). \"Microbial biocatalysis in the generation of flavor and fragrance chemicals\". Annu. Rev. Microbiol. 48: 773–800. doi:10.1146/annurev.mi.48.100194.004013. PMID 7826026. 183. ^ Cohen Y (2002). \"Bioremediation of oil by marine microbial mats\". Int Microbiol. 5 (4): 189–93. doi:10.1007/s10123-002-0089-5. PMID 12497184. 184. ^ Neves LC, Miyamura TT, Moraes DA, Penna TC, Converti A (2006). \"Biofiltration methods for the removal of phenolic residues\". Appl. Biochem. Biotechnol. 129–132: 130–52. doi:10.1385/ABAB:129:1:130. PMID 16915636. 185. ^ Liese A, Filho MV (1999). \"Production of fine chemicals using biocatalysis\". Current Opinion in Biotechnology. 10 (6): 595–603. doi:10.1016/S0958-1669(99)00040-3. PMID 10600695. 186. ^ Aronson AI, Shai Y (2001). \"Why Bacillus thuringiensis insecticidal toxins are so effective: unique features of their mode of action\". FEMS Microbiol. Lett. 195 (1): 1–8. doi:10.1111/j.1574-6968.2001.tb10489.x. PMID 11166987. 187. ^ Bozsik A (2006). \"Susceptibility of adult Coccinella septempunctata (Coleoptera: Coccinellidae) to insecticides with different modes of action\". Pest Manag Sci. 62 (7): 651–4. doi:10.1002/ps.1221. PMID 16649191. 188. ^ Chattopadhyay A, Bhatnagar NB, Bhatnagar R (2004). \"Bacterial insecticidal toxins\". Crit Rev Microbiol. 30 (1): 33–54. doi:10.1080/10408410490270712. PMID 15116762. 189. ^ Serres MH, Gopal S, Nahum LA, Liang P, Gaasterland T, Riley M (2001). \"A functional update of the Escherichia coli K-12 genome\". Genome Biology. 2 (9): research0035.1–research0035.7. doi:10.1186/gb-2001-2-9-research0035. PMC 56896 . PMID 11574054. 190. ^ Almaas E, Kovács B, Vicsek T, Oltvai ZN, Barabási AL (2004). \"Global organization of metabolic fluxes in the bacterium Escherichia coli\". Nature. 427 (6977): 839–43. arXiv:q-bio/0403001 . Bibcode:2004Natur.427..839A. doi:10.1038/nature02289. PMID 14985762. 191. ^ Reed JL, Vo TD, Schilling CH, Palsson BO (2003). \"An expanded genome-scale model of Escherichia coli K-12 (iJR904 GSM/GPR)\". Genome Biol. 4 (9): R54. doi:10.1186/gb-2003-4-9-r54. PMC 193654 . PMID 12952533. 192. ^ Walsh G (2005). \"Therapeutic insulins and their large-scale manufacture\". Appl Microbiol Biotechnol. 67 (2): 151–9. doi:10.1007/s00253-004-1809-x. PMID 15580495. 193. ^ Graumann K, Premstaller A (2006). \"Manufacturing of recombinant therapeutic proteins in microbial systems\". Biotechnol J. 1 (2): 164–86. doi:10.1002/biot.200500051. PMID 16892246. 194. ^ Porter JR (1976). \"Antony van Leeuwenhoek: tercentenary of his discovery of bacteria\". Bacteriological Reviews. 40 (2): 260–9. PMC 413956 . PMID 786250. 195. ^ van Leeuwenhoek A (1684). \"An abstract of a letter from Mr. Anthony Leevvenhoek at Delft, dated Sep. 17, 1683, Containing Some Microscopical Observations, about Animals in the Scurf of the Teeth, the Substance Call'd Worms in the Nose, the Cuticula Consisting of Scales\". Philosophical Transactions (1683–1775). 14 (155–166): 568–574. doi:10.1098/rstl.1684.0030. 196. ^ van Leeuwenhoek A (1700). \"Part of a Letter from Mr Antony van Leeuwenhoek, concerning the Worms in Sheeps Livers, Gnats, and Animalcula in the Excrements of Frogs\". Philosophical Transactions (1683–1775). 22 (260–276): 509–518. doi:10.1098/rstl.1700.0013. 197. ^ van Leeuwenhoek A (1702). \"Part of a Letter from Mr Antony van Leeuwenhoek, F. R. S. concerning Green Weeds Growing in Water, and Some Animalcula Found about Them\". Philosophical Transactions (1683–1775). 23 (277–288): 1304–11. doi:10.1098/rstl.1702.0042. 198. ^ Asimov, Isaac (1982), Asimov's Biographical Encyclopedia of Science and Technology, 2nd edition, Garden City, New York: Doubleday and Company, pg 143. 199. ^ Ehrenberg's Symbolae Physioe. Animalia evertebrata. Decas prima. Berlin, 1828. 200. ^ Breed RS, Conn HJ (1936). \"The Status of the Generic Term Bacterium Ehrenberg 1828\". Journal of Bacteriology. 31 (5): 517–518. PMC 543738 . PMID 16559906. 201. ^ EHRENBERG (C.G.): Dritter Beitrag zur Erkenntniss grosser Organisation in der Richtung des kleinsten Raumes. Physikalische Abhandlungen der Koeniglichen Akademie der Wissenschaften zu Berlin aus den Jahren 1833–1835, 1835, pp. 143–336. 202. ^ \"Pasteur's Papers on the Germ Theory\". LSU Law Center's Medical and Public Health Law Site, Historic Public Health Articles. Archived from the original on 18 December 2006. Retrieved 23 November 2006. 203. ^ \"The Nobel Prize in Physiology or Medicine 1905\". Nobelprize.org. Archived from the original on 10 December 2006. Retrieved 22 November 2006. 204. ^ O'Brien SJ, Goedert JJ (1996). \"HIV causes AIDS: Koch's postulates fulfilled\". Current Opinion in Immunology. 8 (5): 613–8. doi:10.1016/S0952-7915(96)80075-6. PMID 8902385. 205. ^ Chung, King-Thom. Ferdinand Julius Cohn (1828-1898): Pioneer of Bacteriology. Department of Microbiology and Molecular Cell Sciences, The University of Memphis. 206. ^ Drews, Gerhart (1999). \"Ferdinand Cohn, a founder of modern microbiology\" (PDF). ASM News. 65 (8): 547–552. Archived from the original (PDF) on 13 July 2017. 207. ^ Thurston AJ (2000). \"Of blood, inflammation and gunshot wounds: the history of the control of sepsis\". Aust N Z J Surg. 70 (12): 855–61. doi:10.1046/j.1440-1622.2000.01983.x. PMID 11167573. 208. ^ Schwartz RS (2004). \"Paul Ehrlich's magic bullets\". N Engl J Med. 350 (11): 1079–80. doi:10.1056/NEJMp048021. PMID 15014180. 209. ^ \"Biography of Paul Ehrlich\". Nobelprize.org. Archived from the original on 28 November 2006. Retrieved 26 November 2006. Further reading Library resources about Bacteria - Online books - Resources in your library - Resources in other libraries - Alcamo IE (2001). Fundamentals of microbiology. Boston: Jones and Bartlett. ISBN 0-7637-1067-9. - Atlas RM (1995). Principles of microbiology. St. Louis: Mosby. ISBN 0-8016-7790-4. - Martinko JM, Madigan MT (2005). Brock Biology of Microorganisms (11th ed.). Englewood Cliffs, N.J: Prentice Hall. ISBN 0-13-144329-1. - Holt JC, Bergey DH (1994). Bergey's manual of determinative bacteriology (9th ed.). Baltimore: Williams & Wilkins. ISBN 0-683-00603-7. - Hugenholtz P, Goebel BM, Pace NR (15 September 1998). \"Impact of culture-independent studies on the emerging phylogenetic view of bacterial diversity\". J Bacteriol. 180 (18): 4765–74. PMC 107498 . PMID 9733676. - Funke BR, Tortora GJ, Case CL (2004). Microbiology: an introduction (8th ed.). San Francisco: Benjamin Cummings. ISBN 0-8053-7614-3. - Ogunseitan OA (2005). Microbial Diversity: Form and Function in Prokaryotes. Wiley-Blackwell. ISBN 978-1-4051-4448-3. - Shively JM (2006). Complex Intracellular Structures in Prokaryotes (Microbiology Monographs). Berlin: Springer. ISBN 3-540-32524-7. External links Find more aboutBacteriaat Wikipedia's sister projects - Definitions from Wiktionary - Media from Commons - News from Wikinews - Quotations from Wikiquote - Texts from Wikisource - Textbooks from Wikibooks - Learning resources from Wikiversity - Taxonomy from Wikispecies - MicrobeWiki, an extensive wiki about bacteria and viruses - Bacteria that affect crops and other plants - Bacterial Nomenclature Up-To-Date from DSMZ - Genera of the domain Bacteria—list of Prokaryotic names with Standing in Nomenclature - The largest bacteria - Tree of Life: Eubacteria - Videos of bacteria swimming and tumbling, use of optical tweezers and other videos. - Planet of the Bacteria by Stephen Jay Gould - On-line text book on bacteriology - Animated guide to bacterial cell structure. - Bacteria Make Major Evolutionary Shift in the Lab - Online collaboration for bacterial taxonomy. - PATRIC, a Bioinformatics Resource Center for bacterial pathogens, funded by NIAID - Bacterial Chemotaxis Interactive Simulator—A web-app that uses several simple algorithms to simulate bacterial chemotaxis. - Cell-Cell Communication in Bacteria on-line lecture by Bonnie Bassler, and TED: Discovering bacteria's amazing communication system - Sulfur-cycling fossil bacteria from the 1.8-Ga Duck Creek Formation provide promising evidence of evolution's null hypothesis, Proceedings of the National Academy of Sciences of the United States of America. Summarised in: Scientists discover bacteria that haven't evolved in more than 2 billion years, LiveScience and BusinessInsider - v - t - e Prokaryotes: Bacteria classification (phyla and orders) - Domain Archaea Bacteria Eukaryota (Supergroup Plant Hacrobia Heterokont Alveolata Rhizaria Excavata Amoebozoa Opisthokonta Animal Fungi) G-/ OM Terra-/ Glidobacteria (BV1) Eobacteria - Deinococcus–Thermus Deinococcales Thermales - Deinococcales - Thermales - Chloroflexi Anaerolineales Caldilineales Chloroflexales Herpetosiphonales Dehalococcoidales Ktedonobacterales Thermogemmatisporales Thermomicrobiales Sphaerobacterales - Anaerolineales - Caldilineales - Chloroflexales - Herpetosiphonales - Dehalococcoidales - Ktedonobacterales - Thermogemmatisporales - Thermomicrobiales - Sphaerobacterales other glidobacteria - Thermodesulfobacteria - thermophiles Aquificae Thermotogae - Aquificae - Thermotogae - Cyanobacteria Proteobacteria (BV2) Alpha - Caulobacterales - Kiloniellales - Kordiimonadales - Magnetococcales - Parvularculales - Rhizobiales - Rhodobacterales - Rhodospirillales - Rickettsiales - Sneathiellales - Sphingomonadales Beta - Burkholderiales - Hydrogenophilales - Methylophilales - Neisseriales - Nitrosomonadales - Procabacteriales - Rhodocyclales Gamma - Acidithiobacillales - Aeromonadales - Alteromonadales - Cardiobacteriales - Chromatiales - Enterobacteriales - Legionellales - Methylococcales - Oceanospirillales - Orbales - Pasteurellales - Pseudomonadales - Salinisphaerales - Thiotrichales - Vibrionales - Xanthomonadales Delta - Bdellovibrionales - Desulfarculales - Desulfobacterales - Desulfovibrionales - Desulfurellales - Desulfuromonadales - Myxococcales - Syntrophobacterales - Syntrophorhabdales Epsilon - Campylobacterales - Nautiliales Zeta - Mariprofundales BV4 Spirochaetes - Spirochaetes Sphingobacteria (FCB group) - Fibrobacteres - Chlorobi Chlorobiales Ignavibacteriales - Chlorobiales - Ignavibacteriales - Bacteroidetes Bacteroidales Cytophagales Flavobacteriales Sphingobacteriales - Bacteroidales - Cytophagales - Flavobacteriales - Sphingobacteriales Planctobacteria/ (PVC group) - Chlamydiae - Lentisphaerae Lentisphaerales Oligosphaerales Victivallales - Lentisphaerales - Oligosphaerales - Victivallales - Planctomycetes Phycisphaerales Planctomycetales - Phycisphaerales - Planctomycetales - Verrucomicrobia Puniceicoccales Opitutales Chthoniobacterales Verrucomicrobiales - Puniceicoccales - Opitutales - Chthoniobacterales - Verrucomicrobiales - \"Poribacteria\" Other GN - Acidobacteria Acidobacteriales Acanthopleuribacterales Holophagales Solibacterales - Acidobacteriales - Acanthopleuribacterales - Holophagales - Solibacterales - Armatimonadetes Armatimonadales Chthonomonadales Fimbriimonadales - Armatimonadales - Chthonomonadales - Fimbriimonadales - Caldiserica - Chrysiogenetes - Deferribacteres - Dictyoglomi - Elusimicrobia - Fusobacteria - Gemmatimonadetes - Nitrospirae - Synergistetes G+/ no OM Firmicutes (BV3) Bacilli - Bacillales - Lactobacillales Clostridia - Clostridiales - Halanaerobiales - Thermoanaerobacteriales - Natranaerobiales Erysipelotrichia - Erysipelotrichiales Thermolithobacteria - Thermolithobacterales Tenericutes/ Mollicutes - Mycoplasmatales - Entomoplasmatales - Anaeroplasmatales - Acholeplasmatales - Haloplasmatales Negativicutes - Selenomonadales Actinobacteria (BV5) Actinobacteria - Actinomycetales - Bifidobacteriales Acidimicrobiia - Acidimicrobiales Coriobacteriidae - Coriobacteriales Nitriliruptoria - Euzebyales - Nitriliruptorales Rubrobacteria - Gaiellales - Rubrobacterales - Thermoleophilales - Solirubrobacterales Incertae sedis - †Archaeosphaeroides - †Eobacterium - †Leptotrichites Source: Bergey's Manual (2001–2012). Alternative views: Wikispecies. - v - t - e Microbiology: Bacteria Medical microbiology - infection - Coley's toxins - Exotoxin - Lysogenic cycle - Pathogenic bacteria - resistance Biochemistry and ecology Oxygen preference - Aerobic Obligate - Obligate - Anaerobic Facultative Obligate - Facultative - Obligate - Microaerophile - Nanaerobe - Aerotolerant Other - Microbial metabolism - Primary nutritional groups - Nitrogen fixation - Microbial ecology - Human flora Gut Lung Mouth Skin Vaginal (In pregnancy) Placental Uterine Salivary - Gut - Lung - Mouth - Skin - Vaginal (In pregnancy) - Placental - Uterine - Salivary - Substrate preference Lipophilic Saccharophilic - Lipophilic - Saccharophilic Shape - Bacterial cellular morphologies - Coccus Diplococcus - Diplococcus - Bacillus - Coccobacillus - Spiral Structure Cell envelope - Cell membrane - Cell wall: Peptidoglycan NAM NAG DAP - NAM - NAG - DAP - Gram-positive bacteria only: Teichoic acid - Lipoteichoic acid - Endospore - Gram-negative bacteria only: Bacterial outer membrane Porin Lipopolysaccharide - Porin - Lipopolysaccharide - Periplasmic space - Mycobacteria only: Arabinogalactan - Mycolic acid Outside envelope - Bacterial capsule - Slime layer - S-layer - Glycocalyx - Pilus - Fimbria - Non-motile bacteria Composite - Biofilm Taxonomy - Bacteria (classifications) - Bacterial phyla - Former groupings: Schizomycetes - Monera - Prokaryota Gracilicutes Firmicutes Mollicutes Mendosicutes - Gracilicutes - Firmicutes - Mollicutes - Mendosicutes - v - t - e Microorganisms Microorganisms - Archaea - Bacterium - Cyanobacteria - Fungi - Nanobacterium - Prokaryote - Protist - Protozoa - Virus Microbiology - Microbial biogeography - Microbial genetics - Microbial intelligence - Microbial metabolism - Microbial phylogenetics - Microbial population biology - Mycology - Virology Ecology - Microbial cooperation - Microbial ecology - Microbial food web - Microbial loop - Microbial synergy - Host microbe interactions in Caenorhabditis elegans Techniques - Dark field microscopy - Impedance microbiology - Microbial cytology - Microbiological culture - Staining Marine - Marine microorganism Antarctic - Antarctic - Marine microbial symbiosis - International Census of Marine Microbes Human related - Microbes in human culture - Food microbiology - Microbial oil - Microbial symbiosis and immunity - Nylon-eating - Human microbiota asthma dysbiosis fecal Human Microbiome Project gut lung mouth skin vagina in pregnancy placenta uterus - asthma - dysbiosis - fecal - Human Microbiome Project - gut - lung - mouth - skin - vagina in pregnancy - in pregnancy - placenta - uterus - Protein production Other - Lines on the Antiquity of Microbes - Microbially induced sedimentary structure - Microbial dark matter - Physical factors affecting microbial life - v - t - e Antonie van Leeuwenhoek Microscopic organisms first observed and described by Antonie van Leeuwenhoek 1 - Bacteria - Ciliate - Giardia - Infusoria - Protist - Protozoa - Rotifer - Spermatozoon - Volvox General topics - Animalcule - Bacteriology - Protozoology - Protistology - Spontaneous generation - Preformationism - Microscopic discovery of microorganisms - Microscopic scale - History of biology - History of microbiology - Natural history - Optical microscopy - History of microscopy - History of the microscope - Invention of the optical microscope - Timeline of microscope technology - Golden Age of Dutch science and technology - Science and technology in the Dutch Republic - Royal Society - Scientific Revolution - Age of Reason Related people - Clifford Dobell (Leeuwenhoek scholar) - Brian J. Ford (Leeuwenhoek scholar) - Galileo Galilei - Regnier de Graaf - Robert Hooke (author of Micrographia) - Nicolaas Hartsoeker - Nicolas Steno - Jan Swammerdam - Johannes Vermeer Recognitions - Antoni van Leeuwenhoek Ziekenhuis - Leeuwenhoek (crater) - Leeuwenhoek Lecture - Leeuwenhoek Medal - Leeuwenhoeckia - Levenhookia - Leeuwenhoekiella - List of people considered father or mother of a scientific field - 1 Generally considered to be the first acknowledged microscopist and microbiologist in history. Taxon identifiers - Wd: Q10876 - EoL: 288 - GBIF: 3 - ITIS: 50 - NCBI: 2 Authority control - LCCN: sh85010813 - GND: 4004296-0 - NDL: 00570000 Retrieved from \"https://en.wikipedia.org/w/index.php?title=Bacteria&oldid=810865668\" Categories: - Bacteria - Bacteriology - Domains (biology) - Microscopic organisms described by Antonie van LeeuwenhoekHidden categories: - Webarchive template wayback links - Articles containing Ancient Greek-language text - Wikipedia indefinitely semi-protected pages - Wikipedia indefinitely move-protected pages - Articles needing additional references from August 2017 - All articles needing additional references - Use dmy dates from March 2014 - Featured articles - Use British English from September 2016 - Articles with 'species' microformats - Articles with hAudio microformats - Articles including recorded pronunciations (English) - Articles containing Latin-language text - Articles containing Greek-language text - Wikipedia articles with LCCN identifiers - Wikipedia articles with GND identifiers Navigation menu Personal tools - Not logged in - Talk - Contributions - Create account - Log in Namespaces - Article - Talk Variants Views - Read - View source - View history More Search Navigation - Main page - Contents - Featured content - Current events - Random article - Donate to Wikipedia - Wikipedia store Interaction - Help - About Wikipedia - Community portal - Recent changes - Contact page Tools - What links here - Related changes - Upload file - Special pages - Permanent link - Page information - Wikidata item - Cite this page Print/export - Create a book - Download as PDF - Printable version In other projects - Wikimedia Commons - Wikispecies - Wikiquote Languages - Acèh - Afrikaans - Alemannisch - አማርኛ - العربية - Aragonés - অসমীয়া - Asturianu - Avañe'ẽ - Aymar aru - Azərbaycanca - বাংলা - Bân-lâm-gú - Башҡортса - Беларуская - Беларуская (тарашкевіца)‎ - Български - Bosanski - Brezhoneg - Буряад - Català - Чӑвашла - Cebuano - Čeština - Cymraeg - Dansk - Deutsch - ދިވެހިބަސް - Eesti - Ελληνικά - Español - Esperanto - Euskara - فارسی - Fiji Hindi - Føroyskt - Français - Frysk - Gaeilge - Gaelg - Galego - Gĩkũyũ - 客家語/Hak-kâ-ngî - 한국어 - Հայերեն - हिन्दी - Hornjoserbsce - Hrvatski - Ido - Ilokano - Bahasa Indonesia - Interlingua - Íslenska - Italiano - עברית - Basa Jawa - ಕನ್ನಡ - ქართული - Қазақша - Kernowek - Kinyarwanda - Kiswahili - Kreyòl ayisyen - Kurdî - Кыргызча - Лезги - Latina - Latviešu - Lëtzebuergesch - Lietuvių - Ligure - Limburgs - Luganda - Magyar - Македонски - മലയാളം - मराठी - Bahasa Melayu - Mìng-dĕ̤ng-ngṳ̄ - Монгол - မြန်မာဘာသာ - Nāhuatl - Nederlands - नेपाली - नेपाल भाषा - 日本語 - Napulitano - Nordfriisk - Norsk - Norsk nynorsk - Nouormand - Occitan - Oʻzbekcha/ўзбекча - ਪੰਜਾਬੀ - پنجابی - Papiamentu - پښتو - Patois - Plattdüütsch - Polski - Português - Qaraqalpaqsha - Română - Runa Simi - Русиньскый - Русский - Саха тыла - संस्कृतम् - Scots - Shqip - Sicilianu - සිංහල - Simple English - سنڌي - Slovenčina - Slovenščina - Soomaaliga - کوردی - Српски / srpski - Srpskohrvatski / српскохрватски - Basa Sunda - Suomi - Svenska - Tagalog - தமிழ் - Татарча/tatarça - తెలుగు - ไทย - Тоҷикӣ - ᏣᎳᎩ - Türkçe - Українська - اردو - Vahcuengh - Vèneto - Tiếng Việt - Võro - Walon - Winaray - 吴语 - ייִדיש - Yorùbá - 粵語 - Žemaitėška - 中文 Edit links - This page was last edited on 17 November 2017, at 23:19. - Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization. - Privacy policy - About Wikipedia - Disclaimers - Contact Wikipedia - Developers - Cookie statement - Mobile view - - (window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgPageParseReport\":{\"limitreport\":{\"cputime\":\"2.992\",\"walltime\":\"3.302\",\"ppvisitednodes\":{\"value\":33612,\"limit\":1000000},\"ppgeneratednodes\":{\"value\":0,\"limit\":1500000},\"postexpandincludesize\":{\"value\":797450,\"limit\":2097152},\"templateargumentsize\":{\"value\":58239,\"limit\":2097152},\"expansiondepth\":{\"value\":24,\"limit\":40},\"expensivefunctioncount\":{\"value\":17,\"limit\":500},\"entityaccesscount\":{\"value\":5,\"limit\":400},\"timingprofile\":[\"100.00% 2865.297 1 -total\",\" 52.28% 1497.928 1 Template:Reflist\",\" 38.58% 1105.343 178 Template:Cite_journal\",\" 14.18% 406.175 1 Template:Automatic_taxobox\",\" 13.95% 399.843 1 Template:Taxobox/core\",\" 12.52% 358.751 14 Template:Navbox\",\" 9.05% 259.367 98 Template:Period_start\",\" 8.95% 256.317 1 Template:Taxonbar\",\" 8.93% 255.906 1 Template:Long_fossil_range\",\" 8.35% 239.161 1 Template:1x\"]},\"scribunto\":{\"limitreport-timeusage\":{\"value\":\"1.588\",\"limit\":\"10.000\"},\"limitreport-memusage\":{\"value\":8477387,\"limit\":52428800}},\"cachereport\":{\"origin\":\"mw1223\",\"timestamp\":\"20171117231823\",\"ttl\":1900800,\"transientcontent\":false}}});});(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({\"wgBackendResponseTime\":120,\"wgHostname\":\"mw1322\"});});"},{"url":"http://www.allbicycles.com/","text":"All Bicycles, Home Page var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-12993354-2']); _gaq.push(['_trackPageview']); (function () { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); allBicycles dedicated to providing the finest service in the cycling industry - Home - ShoppingVisit eBay Store - Visit eBay Store - ProductsBicyclesComponentsTiresRacksClothingNutrition - Bicycles - Components - Tires - Racks - Clothing - Nutrition - ServicesRich FitsRepairCustom ShopConsignmentExport & ShippingRoadside ServiceBike ValetBicycle Rentals - Rich Fits - Repair - Custom Shop - Consignment - Export & Shipping - Roadside Service - Bike Valet - Bicycle Rentals - CommunityLocal WeatherCycling NewsLocal Clubs - Local Weather - Cycling News - Local Clubs - Rentals - Customer Reviews - Visit UsMap to StoreVisit on FacebookVisit on YouTubeVisit on Twitter - Map to Store - Visit on Facebook - Visit on YouTube - Visit on Twitter - AboutAboutStore PoliciesContact Form25th Anniversary PartyCustomer Reviews - About - Store Policies - Contact Form - 25th Anniversary Party - Customer Reviews - Welcome to All Bicycles! Who is All Bicycles? All Bicycles was created so Florida Cyclists could ride the bicycle of their dreams, regardless of their level of riding. All Bicyles has been proudly serving Deerfield Beach and the surrounding Boca Raton, Delray Beach, Pompano Beach, Boynton Beach, West Palm Beach, Palm Beach Gardens, Lantana and Wellington cycling communities since 1990. All Bicycles strives to be the premier bicycle shop, meeting all your cycling needs. The key ingredient in the whole equation is service. Quality service is what cyclists across the nation have come to associate with All Bicycles. Whether your needs are sales, service, or parts, All Bicycles will treat you the way you want to be treated. We take pride in the products we sell and the services we provide. After all, once we own the bicycle and have it set up like we want, the key is keeping it riding as well as the day it was purchased. And that is the service you will receive at All Bicycles. Rich is the difference! Rich Cohen sees himself as a bicycle doctor, who focuses on prescribing the right parts, accessory, or complete bike to pro level and novice riders alike. What sets All Bicycles apart is Rich's uncompromising attention to detail and precision. He serves clients with the knowledge and products for each of their needs and desires. From a custom titanium frame, to a neo classic steel Torelli, to a classic beach cruiser, no question or job is to big or to small at All Bicycles. SKU is Not for You No buyers remorse here. At All Bicycles you don't see a shelf of assorted parts and accessories, waiting to be sold. What you do get is exactly what you are looking for, every time. Sales at All Bicycles occur through conversation and consultative time spent with the cyclist. Rich will work with you to determine exactly what you need, and within 2-3 days, the exact right piece will arrive, giving you years of pleasure. jssor_1_slider_init = function () { //alert('in init jssor'); var jssor_1_options = { $AutoPlay: true, $Idle: 0, $AutoPlaySteps: 4, $SlideDuration: 1600, $SlideEasing: $Jease$.$Linear, $PauseOnHover: 4, $FillMode: 1, $SlideWidth: 140, $SlideSpacing: 5, $Cols: 7 }; var jssor_1_slider = new $JssorSlider$(\"jssor_1\", jssor_1_options); }; - Visit Us: All Bicycles 142 N Federal Hwy Deerfield Beach, Fl 33441 - Store Hours Monday - Friday: 10-6PM Saturday: 10-3PM - Contact Us Phone: (954) 428-2683 Email: rich@allbicycles.com - Visit our eBay Store Open 24hrs! - Payments Accepted - allBicycles on YouTube™ - Copyright (c) 2011-2014 All Bicycles. All rights reserved. Design by Free CSS Templates. //"}]}
